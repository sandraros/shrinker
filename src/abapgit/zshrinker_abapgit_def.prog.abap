********************************************************************************
*
* LICENSE and NOTICE
*
* See include program ZSHRINKER_ABAPGIT_LICENSE
*
********************************************************************************
CLASS LCL_ABAPGIT_EXIT DEFINITION DEFERRED.
INTERFACE LIF_ABAPGIT_APACK_DEFINITIONS DEFERRED.
INTERFACE LIF_ABAPGIT_DEFINITIONS DEFERRED.
INTERFACE LIF_ABAPGIT_DOT_ABAPGIT DEFERRED.
INTERFACE LIF_ABAPGIT_ENVIRONMENT DEFERRED.
INTERFACE LIF_ABAPGIT_PERSIST_REPO DEFERRED.
INTERFACE LIF_ABAPGIT_POPUPS DEFERRED.
INTERFACE LIF_ABAPGIT_REPO DEFERRED.
INTERFACE LIF_ABAPGIT_SAP_PACKAGE DEFERRED.
INTERFACE LIF_ABAPGIT_SERVICES_REPO DEFERRED.
INTERFACE LIF_ABAPGIT_VERSION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_PULL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ABAP_LANGUAGE_VERS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ADT_LINK DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_AFF_REGISTRY DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_AJSON DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_AJSON_FILTER_LIB DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_AJSON_MAPPING DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_AJSON_UTILITIES DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_APACK_HELPER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_APACK_MIGRATION DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_APACK_READER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_APACK_WRITER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_AUTH DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_BACKGROUND DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_BACKGROUND_PULL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_BACKGROUND_PUSH_AU DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_BACKGROUND_PUSH_FI DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_CODE_INSPECTOR DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_CONVERT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_CTS_API DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_DATA_CONFIG DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_DATA_DESERIALIZER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_DATA_FACTORY DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_DATA_INJECTOR DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_DATA_SERIALIZER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_DATA_SUPPORTER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_DATA_UTILS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_DEFAULT_TRANSPORT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_DEPENDENCIES DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_DIFF DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_DOT_ABAPGIT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ECATT_CONFIG_DOWNL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ECATT_CONFIG_UPL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ECATT_DATA_DOWNL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ECATT_DATA_UPLOAD DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ECATT_HELPER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ECATT_SCRIPT_DOWNL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ECATT_SCRIPT_UPL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ECATT_SP_DOWNLOAD DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ECATT_SP_UPLOAD DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ECATT_SYSTEM_DOWNL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ECATT_SYSTEM_UPL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ECATT_VAL_OBJ_DOWN DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ECATT_VAL_OBJ_UPL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ENVIRONMENT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_EXCEPTION_VIEWER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_FACTORY DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_FEATURE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_FIELD_RULES DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_FILENAME_LOGIC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_FILE_DESERIALIZE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_FOLDER_LOGIC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_FRONTEND_SERVICES DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_FUNCTION_MODULE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GITV2_PORCELAIN DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GIT_ADD_PATCH DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GIT_BRANCH_LIST DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GIT_COMMIT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GIT_FACTORY DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GIT_PACK DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GIT_PORCELAIN DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GIT_TAG DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GIT_TIME DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GIT_TRANSPORT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GIT_URL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GIT_UTILS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_ASSET_MANAGER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_BUTTONS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_CHUNK_LIB DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_COMPONENT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_CSS_PROCESSOR DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_EVENT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_HOTKEY_CTL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_HTML_PROCESSOR DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_IN_PAGE_MODAL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_JUMPER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_MENUS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_ADDOFFLIN DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_ADDONLINE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_CODE_INSP DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_CODI_BASE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_COMMIT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_DATA DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_DB DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_DB_ENTRY DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_DEBUGINFO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_DIFF DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_DIFF_BASE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_EX_OBJECT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_EX_PCKAGE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_FLOW DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_HOC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_MERGE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_MERGE_RES DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_MERGE_SEL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_PATCH DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_REPO_OVER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_REPO_VIEW DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_RUNIT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_RUN_BCKG DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_SETT_BCKG DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_SETT_GLOB DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_SETT_INFO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_SETT_LOCL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_SETT_PERS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_SETT_REMO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_SETT_REPO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_STAGE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_SYNTAX DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_TAGS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PAGE_TUTORIAL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_PICKLIST DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_ROUTER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_GUI_UTILS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_HASH DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_HTML DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_HTML_ACTION_UTILS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_HTML_FORM DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_HTML_FORM_UTILS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_HTML_PARTS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_HTML_TABLE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_HTML_TOOLBAR DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_HTML_VIEWER_GUI DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_HTTP DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_HTTP_AGENT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_HTTP_CLIENT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_HTTP_DIGEST DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_I18N_PARAMS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_INJECTOR DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ITEM_GRAPH DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ITEM_STATE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_JSON_HANDLER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_LANGUAGE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_LOG DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_LOGIN_MANAGER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_LOG_VIEWER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_LONGTEXTS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_LXE_TEXTS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_MERGE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_MIGRATIONS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_NEWS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECTS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECTS_ACTIVATION DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECTS_BRIDGE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECTS_CHECK DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECTS_FACTORY DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECTS_FILES DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECTS_GENERIC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECTS_INJECTOR DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECTS_PROGRAM DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECTS_SUPER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ACID DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_AIFC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_AMSD DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_APIS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_AQBG DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_AQQU DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_AQSG DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_AREA DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ASFC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_AUTH DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_AVAR DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_AVAS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_BDEF DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_CHAR DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_CHDO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_CHKC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_CHKO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_CHKV DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_CLAS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_CMOD DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_CMPT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_COMMON_AFF DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_CUS0 DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_CUS1 DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_CUS2 DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_DCLS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_DDLS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_DDLX DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_DEVC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_DIAL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_DOCT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_DOCV DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_DOMA DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_DRUL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_DSYS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_DTDC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_DTEL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ECAT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ECATT_SUPER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ECSD DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ECSP DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ECTC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ECTD DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ECVO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_EEEC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ENHC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ENHO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ENHO_BADI DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ENHO_CLASS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ENHO_CLIF DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ENHO_FUGR DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ENHO_HOOK DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ENHO_INTF DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ENHO_WDYC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ENHO_WDYN DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ENHS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ENHS_BADI_D DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ENHS_HOOK_D DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ENQU DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ENSC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_EVTB DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_FDT0 DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_FILTER_TRAN DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_FORM DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_FTGL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_FUGR DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_G4BA DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_G4BS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_GSMP DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_IAMU DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_IARP DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_IASP DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_IATU DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_IAXU DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_IDOC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_IEXT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_INTF DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_IOBJ DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_IWMO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_IWOM DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_IWPR DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_IWSG DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_IWSV DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_IWVB DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_JOBD DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_MSAG DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_NONT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_NROB DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_NSPC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_OA2P DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_ODSO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_OTGR DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_PARA DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_PDTS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_PDXX_SUPER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_PERS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_PINF DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_PRAG DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_PROG DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_RONT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SAMC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SAPC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SAXX_SUPER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SCP1 DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SCVI DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SFBF DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SFBS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SFPF DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SFPI DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SFSW DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SHI3 DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SHI5 DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SHI8 DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SHLP DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SHMA DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SICF DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SKTD DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SMBC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SMIM DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SMTG DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SOBJ DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SOD1 DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SOD2 DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SOTS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SPLO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SPPF DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SPRX DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SQSC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SRFC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SRVB DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SRVD DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SSFO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SSST DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_STVI DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_STYL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SUCU DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SUSC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SUSH DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SUSO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_SXCI DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_TABL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_TABL_COMPAR DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_TOBJ DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_TRAN DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_TTYP DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_TYPE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_UCSA DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_UDMO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_UENO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_VCLS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_VIEW DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_W3HT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_W3MI DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_W3XX_SUPER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_WAPA DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_WDCA DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_WDCC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_WDYA DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_WDYN DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_WEBI DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_XINX DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OBJECT_XSLT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OO_BASE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OO_CLASS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OO_FACTORY DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OO_INTERFACE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_OO_SERIALIZER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_PASSWORD_DIALOG DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_PATH DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_PERSISTENCE_DB DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_PERSISTENCE_REPO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_PERSISTENCE_USER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_PERSIST_BACKGROUND DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_PERSIST_FACTORY DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_PERSIST_MIGRATE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_PERSIST_PACKAGES DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_PERSIST_SETTINGS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_POPUPS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_POPUP_BRANCH_LIST DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_POPUP_CODE_INSP DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_POPUP_PULL_REQUEST DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_POPUP_TAG_LIST DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_PO_FILE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_PROGRESS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_PROXY_AUTH DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_PROXY_CONFIG DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_PR_ENUMERATOR DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_PR_ENUM_GITHUB DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_REPO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_REPO_CHECKSUMS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_REPO_CONTENT_LIST DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_REPO_CS_MIGRATION DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_REPO_FILTER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_REPO_LABELS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_REPO_OFFLINE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_REPO_ONLINE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_REPO_SRV DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_REPO_STATUS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_REQUIREMENT_HELPER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SAP_NAMESPACE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SAP_PACKAGE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SAP_REPORT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SERIALIZE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SERVICES_ABAPGIT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SERVICES_GIT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SERVICES_REPO DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SETTINGS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SOTR_HANDLER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SOTS_HANDLER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_STAGE DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_STAGE_LOGIC DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_STRING_BUFFER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_STRING_MAP DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SYNTAX_ABAP DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SYNTAX_CSS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SYNTAX_FACTORY DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SYNTAX_HIGHLIGHTER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SYNTAX_JS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SYNTAX_JSON DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SYNTAX_TXT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_SYNTAX_XML DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_TADIR DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_TIMER DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_TRANSPORT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_TRANSPORT_2_BRANCH DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_TRANSPORT_MASS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_TRANSPORT_OBJECTS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_UI_FACTORY DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_UI_INJECTOR DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_URL DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_USER_RECORD DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_UTILS DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_VERSION DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_XML DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_XML_INPUT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_XML_OUTPUT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_XML_PRETTY DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ZIP DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ZLIB DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ZLIB_CONVERT DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ZLIB_HUFFMAN DEFINITION DEFERRED.
CLASS LCL_ABAPGIT_ZLIB_STREAM DEFINITION DEFERRED.
CLASS LCX_ABAPGIT_AJSON_ERROR DEFINITION DEFERRED.
CLASS LCX_ABAPGIT_CANCEL DEFINITION DEFERRED.
CLASS LCX_ABAPGIT_EXCEPTION DEFINITION DEFERRED.
CLASS LCX_ABAPGIT_NOT_FOUND DEFINITION DEFERRED.
INTERFACE LIF_ABAPGIT_AFF_INTF_V1 DEFERRED.
INTERFACE LIF_ABAPGIT_AFF_OO_TYPES_V1 DEFERRED.
INTERFACE LIF_ABAPGIT_AFF_REGISTRY DEFERRED.
INTERFACE LIF_ABAPGIT_AFF_TYPES_V1 DEFERRED.
INTERFACE LIF_ABAPGIT_AFF_TYPE_MAPPING DEFERRED.
INTERFACE LIF_ABAPGIT_AJSON DEFERRED.
INTERFACE LIF_ABAPGIT_AJSON_FILTER DEFERRED.
INTERFACE LIF_ABAPGIT_AJSON_MAPPING DEFERRED.
INTERFACE LIF_ABAPGIT_AJSON_TYPES DEFERRED.
INTERFACE LIF_ABAPGIT_AUTH DEFERRED.
INTERFACE LIF_ABAPGIT_BACKGROUND DEFERRED.
INTERFACE LIF_ABAPGIT_CODE_INSPECTOR DEFERRED.
INTERFACE LIF_ABAPGIT_COMPARATOR DEFERRED.
INTERFACE LIF_ABAPGIT_CTS_API DEFERRED.
INTERFACE LIF_ABAPGIT_DATA_CONFIG DEFERRED.
INTERFACE LIF_ABAPGIT_DATA_DESERIALIZER DEFERRED.
INTERFACE LIF_ABAPGIT_DATA_SERIALIZER DEFERRED.
INTERFACE LIF_ABAPGIT_DATA_SUPPORTER DEFERRED.
INTERFACE LIF_ABAPGIT_ECATT DEFERRED.
INTERFACE LIF_ABAPGIT_ECATT_DOWNLOAD DEFERRED.
INTERFACE LIF_ABAPGIT_ECATT_UPLOAD DEFERRED.
INTERFACE LIF_ABAPGIT_EXIT DEFERRED.
INTERFACE LIF_ABAPGIT_FIELD_RULES DEFERRED.
INTERFACE LIF_ABAPGIT_FRONTEND_SERVICES DEFERRED.
INTERFACE LIF_ABAPGIT_FUNCTION_MODULE DEFERRED.
INTERFACE LIF_ABAPGIT_GITV2_PORCELAIN DEFERRED.
INTERFACE LIF_ABAPGIT_GIT_DEFINITIONS DEFERRED.
INTERFACE LIF_ABAPGIT_GUI_ASSET_MANAGER DEFERRED.
INTERFACE LIF_ABAPGIT_GUI_ERROR_HANDLER DEFERRED.
INTERFACE LIF_ABAPGIT_GUI_EVENT DEFERRED.
INTERFACE LIF_ABAPGIT_GUI_EVENT_HANDLER DEFERRED.
INTERFACE LIF_ABAPGIT_GUI_HOTKEYS DEFERRED.
INTERFACE LIF_ABAPGIT_GUI_HOTKEY_CTL DEFERRED.
INTERFACE LIF_ABAPGIT_GUI_HTML_PROCESSOR DEFERRED.
INTERFACE LIF_ABAPGIT_GUI_JUMPER DEFERRED.
INTERFACE LIF_ABAPGIT_GUI_MENU_PROVIDER DEFERRED.
INTERFACE LIF_ABAPGIT_GUI_MODAL DEFERRED.
INTERFACE LIF_ABAPGIT_GUI_PAGE_TITLE DEFERRED.
INTERFACE LIF_ABAPGIT_GUI_RENDERABLE DEFERRED.
INTERFACE LIF_ABAPGIT_GUI_RENDER_ITEM DEFERRED.
INTERFACE LIF_ABAPGIT_GUI_SERVICES DEFERRED.
INTERFACE LIF_ABAPGIT_HTML DEFERRED.
INTERFACE LIF_ABAPGIT_HTML_FORM DEFERRED.
INTERFACE LIF_ABAPGIT_HTML_POPUP DEFERRED.
INTERFACE LIF_ABAPGIT_HTML_TABLE DEFERRED.
INTERFACE LIF_ABAPGIT_HTML_VIEWER DEFERRED.
INTERFACE LIF_ABAPGIT_HTTP_AGENT DEFERRED.
INTERFACE LIF_ABAPGIT_HTTP_RESPONSE DEFERRED.
INTERFACE LIF_ABAPGIT_I18N_FILE DEFERRED.
INTERFACE LIF_ABAPGIT_LANG_DEFINITIONS DEFERRED.
INTERFACE LIF_ABAPGIT_LOG DEFERRED.
INTERFACE LIF_ABAPGIT_LONGTEXTS DEFERRED.
INTERFACE LIF_ABAPGIT_LXE_TEXTS DEFERRED.
INTERFACE LIF_ABAPGIT_MERGE DEFERRED.
INTERFACE LIF_ABAPGIT_OBJECT DEFERRED.
INTERFACE LIF_ABAPGIT_OBJECTS DEFERRED.
INTERFACE LIF_ABAPGIT_OBJECT_ENHO DEFERRED.
INTERFACE LIF_ABAPGIT_OBJECT_ENHS DEFERRED.
INTERFACE LIF_ABAPGIT_OBJECT_FILTER DEFERRED.
INTERFACE LIF_ABAPGIT_OO_OBJECT_FNC DEFERRED.
INTERFACE LIF_ABAPGIT_PERSISTENCE DEFERRED.
INTERFACE LIF_ABAPGIT_PERSIST_REPO_CS DEFERRED.
INTERFACE LIF_ABAPGIT_PERSIST_SETTINGS DEFERRED.
INTERFACE LIF_ABAPGIT_PERSIST_USER DEFERRED.
INTERFACE LIF_ABAPGIT_PROGRESS DEFERRED.
INTERFACE LIF_ABAPGIT_PR_ENUM_PROVIDER DEFERRED.
INTERFACE LIF_ABAPGIT_REPO_CHECKSUMS DEFERRED.
INTERFACE LIF_ABAPGIT_REPO_LISTENER DEFERRED.
INTERFACE LIF_ABAPGIT_REPO_ONLINE DEFERRED.
INTERFACE LIF_ABAPGIT_REPO_SRV DEFERRED.
INTERFACE LIF_ABAPGIT_SAP_NAMESPACE DEFERRED.
INTERFACE LIF_ABAPGIT_SAP_REPORT DEFERRED.
INTERFACE LIF_ABAPGIT_SERVICES_GIT DEFERRED.
INTERFACE LIF_ABAPGIT_STAGE_LOGIC DEFERRED.
INTERFACE LIF_ABAPGIT_TADIR DEFERRED.
INTERFACE LIF_ABAPGIT_XML_INPUT DEFERRED.
INTERFACE LIF_ABAPGIT_XML_OUTPUT DEFERRED.
*class-pool .
*"* class pool for class ZCL_ABAPGIT_DATA_INJECTOR

*"* local type definitions
*include zcl_abapgit_data_injector=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_DATA_INJECTOR definition
*"* public declarations
*include zcl_abapgit_data_injector=====cu.
CLASS Lcl_abapgit_data_injector DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS set_supporter
      IMPORTING
        !ii_supporter TYPE REF TO Lif_abapgit_data_supporter .
    METHODS set_serializer
      IMPORTING
        !ii_serializer TYPE REF TO Lif_abapgit_data_serializer .
    METHODS set_deserializer
      IMPORTING
        !ii_deserializer TYPE REF TO Lif_abapgit_data_deserializer .
*"* protected declarations
*include zcl_abapgit_data_injector=====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_data_injector=====ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_DATA_INJECTOR definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GIT_TAG

*"* local type definitions
*include zcl_abapgit_git_tag===========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GIT_TAG definition
*"* public declarations
*include zcl_abapgit_git_tag===========cu.
CLASS Lcl_abapgit_git_tag DEFINITION
*public
  CREATE PUBLIC.

  PUBLIC SECTION.

    CLASS-METHODS add_tag_prefix
      IMPORTING
        !iv_text       TYPE csequence
      RETURNING
        VALUE(rv_text) TYPE string.

    CLASS-METHODS remove_tag_prefix
      IMPORTING
        !iv_text       TYPE string
      RETURNING
        VALUE(rv_text) TYPE string.

    CLASS-METHODS add_peel
      IMPORTING
        !iv_text       TYPE string
      RETURNING
        VALUE(rv_text) TYPE string.

    CLASS-METHODS remove_peel
      IMPORTING
        !iv_text       TYPE string
      RETURNING
        VALUE(rv_text) TYPE string.

*"* protected declarations
*include zcl_abapgit_git_tag===========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_git_tag===========ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_GIT_TAG definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_BUTTONS

*"* local type definitions
*include zcl_abapgit_gui_buttons=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_BUTTONS definition
*"* public declarations
*include zcl_abapgit_gui_buttons=======cu.
CLASS Lcl_abapgit_gui_buttons DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    CLASS-METHODS new_online
      RETURNING VALUE(rv_html_string) TYPE string.

    CLASS-METHODS flow
      RETURNING VALUE(rv_html_string) TYPE string.

    CLASS-METHODS new_offline
      RETURNING VALUE(rv_html_string) TYPE string.

    CLASS-METHODS advanced
      RETURNING VALUE(rv_html_string) TYPE string.

    CLASS-METHODS help
      RETURNING VALUE(rv_html_string) TYPE string.

    CLASS-METHODS repo_list
      RETURNING VALUE(rv_html_string) TYPE string.

    CLASS-METHODS settings
      RETURNING VALUE(rv_html_string) TYPE string.

    CLASS-METHODS experimental
      RETURNING VALUE(rv_html_string) TYPE string.

*"* protected declarations
*include zcl_abapgit_gui_buttons=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_buttons=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_GUI_BUTTONS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_LANGUAGE

*"* local type definitions
*include zcl_abapgit_language==========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_LANGUAGE definition
*"* public declarations
*include zcl_abapgit_language==========cu.
*----------------------------------------------------------------------*
* This helper class is used to set and restore the current language.
* As some of the SAP functions used rely on SY-LANGU containing the
* main language, this class is used to temporarily change and then
* restore the value of SY-LANGU.
*----------------------------------------------------------------------*
CLASS Lcl_abapgit_language DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS class_constructor .
    CLASS-METHODS restore_login_language .
    CLASS-METHODS set_current_language
      IMPORTING
        !iv_language TYPE sy-langu .
*"* protected declarations
*include zcl_abapgit_language==========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_language==========ci.
  PRIVATE SECTION.

    CLASS-DATA gv_login_language TYPE sy-langu .
endclass. "ZCL_ABAPGIT_LANGUAGE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECTS_INJECTOR

*"* local type definitions
*include zcl_abapgit_objects_injector==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECTS_INJECTOR definition
*"* public declarations
*include zcl_abapgit_objects_injector==cu.
CLASS Lcl_abapgit_objects_injector DEFINITION
*public
  CREATE PRIVATE .

  PUBLIC SECTION.

    CLASS-METHODS set_gui_jumper
      IMPORTING
        !ii_gui_jumper TYPE REF TO Lif_abapgit_gui_jumper .
*"* protected declarations
*include zcl_abapgit_objects_injector==co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_objects_injector==ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECTS_INJECTOR definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_PATH

*"* local type definitions
*include zcl_abapgit_path==============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_PATH definition
*"* public declarations
*include zcl_abapgit_path==============cu.
CLASS Lcl_abapgit_path DEFINITION
   FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    CLASS-METHODS split_file_location
      IMPORTING iv_fullpath TYPE string
      EXPORTING ev_path     TYPE string
                ev_filename TYPE string.

    CLASS-METHODS is_root
      IMPORTING iv_path       TYPE string
      RETURNING VALUE(rv_yes) TYPE abap_bool.

    CLASS-METHODS is_subdir
      IMPORTING iv_path       TYPE string
                iv_parent     TYPE string
      RETURNING VALUE(rv_yes) TYPE abap_bool.

    CLASS-METHODS change_dir
      IMPORTING iv_cur_dir     TYPE string
                iv_cd          TYPE string
      RETURNING VALUE(rv_path) TYPE string.

    CLASS-METHODS get_filename_from_syspath
      IMPORTING iv_path            TYPE string
      RETURNING VALUE(rv_filename) TYPE string.

*"* protected declarations
*include zcl_abapgit_path==============co.
protected section.
*"* private declarations
*include zcl_abapgit_path==============ci.
private section.
endclass. "ZCL_ABAPGIT_PATH definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_PERSIST_INJECTOR

*"* local type definitions
*include zcl_abapgit_persist_injector==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_PERSIST_INJECTOR definition
*"* public declarations
*include zcl_abapgit_persist_injector==cu.
*class-pool .
*"* class pool for class ZCL_ABAPGIT_STRING_BUFFER

*"* local type definitions
*include zcl_abapgit_string_buffer=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_STRING_BUFFER definition
*"* public declarations
*include zcl_abapgit_string_buffer=====cu.
CLASS Lcl_abapgit_string_buffer DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS new
      RETURNING
        VALUE(ro_me) TYPE REF TO Lcl_abapgit_string_buffer.
    METHODS add
      IMPORTING
        !iv_str      TYPE string
      RETURNING
        VALUE(ro_me) TYPE REF TO Lcl_abapgit_string_buffer.
    METHODS join_and_flush
      RETURNING
        VALUE(rv_str) TYPE string.
    METHODS join_w_newline_and_flush
      RETURNING
        VALUE(rv_str) TYPE string.
    METHODS join_w_space_and_flush
      RETURNING
        VALUE(rv_str) TYPE string.

*"* protected declarations
*include zcl_abapgit_string_buffer=====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_string_buffer=====ci.
  PRIVATE SECTION.
    DATA mt_buffer TYPE string_table.
endclass. "ZCL_ABAPGIT_STRING_BUFFER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SYNTAX_FACTORY

*"* local type definitions
*include zcl_abapgit_syntax_factory====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SYNTAX_FACTORY definition
*"* public declarations
*include zcl_abapgit_syntax_factory====cu.
CLASS Lcl_abapgit_syntax_factory DEFINITION
*public
  ABSTRACT
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS create
      IMPORTING
        !iv_filename       TYPE string
        !iv_hidden_chars   TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ro_instance) TYPE REF TO Lcl_abapgit_syntax_highlighter .
*"* protected declarations
*include zcl_abapgit_syntax_factory====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_syntax_factory====ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_SYNTAX_FACTORY definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_TIMER

*"* local type definitions
*include zcl_abapgit_timer=============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_TIMER definition
*"* public declarations
*include zcl_abapgit_timer=============cu.
CLASS Lcl_abapgit_timer DEFINITION
*public
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    CLASS-METHODS create
      IMPORTING
        !iv_text        TYPE string OPTIONAL
        !iv_count       TYPE i OPTIONAL
          PREFERRED PARAMETER iv_text
      RETURNING
        VALUE(ro_timer) TYPE REF TO Lcl_abapgit_timer.

    METHODS constructor
      IMPORTING
        !iv_text  TYPE string OPTIONAL
        !iv_count TYPE i OPTIONAL.

    METHODS start
      RETURNING
        VALUE(ro_timer) TYPE REF TO Lcl_abapgit_timer.

    METHODS end
      IMPORTING
        !iv_output_as_status_message TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(rv_result)             TYPE string.

*"* protected declarations
*include zcl_abapgit_timer=============co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_timer=============ci.
  PRIVATE SECTION.

    DATA mv_text TYPE string.
    DATA mv_count TYPE i.
    DATA mv_timer TYPE timestampl.

endclass. "ZCL_ABAPGIT_TIMER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ZLIB_CONVERT

*"* local type definitions
*include zcl_abapgit_zlib_convert======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ZLIB_CONVERT definition
*"* public declarations
*include zcl_abapgit_zlib_convert======cu.
CLASS Lcl_abapgit_zlib_convert DEFINITION
   FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    CLASS-METHODS hex_to_bits
      IMPORTING
        !iv_hex        TYPE xsequence
      RETURNING
        VALUE(rv_bits) TYPE string.

    CLASS-METHODS bits_to_int
      IMPORTING
        !iv_bits      TYPE clike
      RETURNING
        VALUE(rv_int) TYPE i.

*"* protected declarations
*include zcl_abapgit_zlib_convert======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_zlib_convert======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_ZLIB_CONVERT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ZLIB_HUFFMAN

*"* local type definitions
*include zcl_abapgit_zlib_huffman======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ZLIB_HUFFMAN definition
*"* public declarations
*include zcl_abapgit_zlib_huffman======cu.
CLASS Lcl_abapgit_zlib_huffman DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    TYPES:
      ty_lengths TYPE STANDARD TABLE OF i WITH DEFAULT KEY .

    CONSTANTS c_maxbits TYPE i VALUE 15 ##NO_TEXT.

    METHODS constructor
      IMPORTING
        !it_lengths TYPE ty_lengths .
    METHODS get_count
      IMPORTING
        !iv_index       TYPE i
      RETURNING
        VALUE(rv_value) TYPE i .
    METHODS get_symbol
      IMPORTING
        !iv_index       TYPE i
      RETURNING
        VALUE(rv_value) TYPE i .
*"* protected declarations
*include zcl_abapgit_zlib_huffman======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_zlib_huffman======ci.
  PRIVATE SECTION.

    DATA: mt_count  TYPE STANDARD TABLE OF i WITH DEFAULT KEY,
          mt_symbol TYPE STANDARD TABLE OF i WITH DEFAULT KEY.

endclass. "ZCL_ABAPGIT_ZLIB_HUFFMAN definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ZLIB_STREAM

*"* local type definitions
*include zcl_abapgit_zlib_stream=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ZLIB_STREAM definition
*"* public declarations
*include zcl_abapgit_zlib_stream=======cu.
CLASS Lcl_abapgit_zlib_stream DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS constructor
      IMPORTING
        !iv_data TYPE xstring .
    METHODS take_bits
      IMPORTING
        !iv_length     TYPE i
      RETURNING
        VALUE(rv_bits) TYPE string .
    METHODS take_int
      IMPORTING
        !iv_length    TYPE i
      RETURNING
        VALUE(rv_int) TYPE i .
    METHODS remaining
      RETURNING
        VALUE(rv_length) TYPE i .
    "! Take bytes, there's an implicit realignment to start at the beginning of a byte
    "! i.e. if next bit of current byte is not the first bit, then this byte is skipped
    "! and the bytes are taken from the next one.
    "! @parameter iv_length | <p class="shorttext synchronized" lang="en"></p>
    "! @parameter rv_bytes | <p class="shorttext synchronized" lang="en"></p>
    METHODS take_bytes
      IMPORTING
        !iv_length      TYPE i
      RETURNING
        VALUE(rv_bytes) TYPE xstring .
    METHODS clear_bits .
*"* protected declarations
*include zcl_abapgit_zlib_stream=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_zlib_stream=======ci.
  PRIVATE SECTION.

    DATA mv_bits TYPE string .
    DATA mv_compressed TYPE xstring .
endclass. "ZCL_ABAPGIT_ZLIB_STREAM definition
*class-pool .
*"* class pool for class ZCX_ABAPGIT_EXCEPTION

*"* local type definitions
*include zcx_abapgit_exception=========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCX_ABAPGIT_EXCEPTION definition
*"* public declarations
*include zcx_abapgit_exception=========cu.
"! abapGit general error
CLASS Lcx_abapgit_exception DEFINITION
*public
  INHERITING FROM cx_static_check
  CREATE PUBLIC



.

  PUBLIC SECTION.

    INTERFACES if_t100_message .

    CONSTANTS:
      BEGIN OF c_section_text,
        cause           TYPE string VALUE `Cause`,
        system_response TYPE string VALUE `System response`,
        what_to_do      TYPE string VALUE `Procedure`,
        sys_admin       TYPE string VALUE `System administration`,
      END OF c_section_text .
    CONSTANTS:
      BEGIN OF c_section_token,
        cause           TYPE string VALUE `&CAUSE&`,
        system_response TYPE string VALUE `&SYSTEM_RESPONSE&`,
        what_to_do      TYPE string VALUE `&WHAT_TO_DO&`,
        sys_admin       TYPE string VALUE `&SYS_ADMIN&`,
      END OF c_section_token .

    CLASS-DATA null TYPE string.

    DATA msgv1 TYPE symsgv READ-ONLY .
    DATA msgv2 TYPE symsgv READ-ONLY .
    DATA msgv3 TYPE symsgv READ-ONLY .
    DATA msgv4 TYPE symsgv READ-ONLY .
    DATA mv_longtext TYPE string READ-ONLY.
    DATA mt_callstack TYPE abap_callstack READ-ONLY.
    DATA mi_log TYPE REF TO Lif_abapgit_log READ-ONLY.

    "! Raise exception with text
    "! @parameter iv_text | Text
    "! @parameter ix_previous | Previous exception
    "! @parameter ii_log | Log
    "! @parameter iv_longtext | Longtext
    "! @raising zcx_abapgit_exception | Exception
    CLASS-METHODS raise
      IMPORTING
        !iv_text     TYPE clike
        !ix_previous TYPE REF TO cx_root OPTIONAL
        !ii_log      TYPE REF TO Lif_abapgit_log OPTIONAL
        !iv_longtext TYPE csequence OPTIONAL
      RAISING
        Lcx_abapgit_exception .
    "! Raise exception with T100 message
    "! <p>
    "! Will default to sy-msg* variables. These need to be set right before calling this method.
    "! </p>
    "! @parameter iv_msgid | Message ID
    "! @parameter iv_msgno | Message number
    "! @parameter iv_msgv1 | Message variable 1
    "! @parameter iv_msgv2 | Message variable 2
    "! @parameter iv_msgv3 | Message variable 3
    "! @parameter iv_msgv4 | Message variable 4
    "! @parameter ii_log | Log
    "! @parameter ix_previous | Previous exception
    "! @parameter iv_longtext | Longtext
    "! @raising zcx_abapgit_exception | Exception
    CLASS-METHODS raise_t100
      IMPORTING
        !iv_msgid    TYPE symsgid DEFAULT sy-msgid
        !iv_msgno    TYPE symsgno DEFAULT sy-msgno
        !iv_msgv1    TYPE symsgv DEFAULT sy-msgv1
        !iv_msgv2    TYPE symsgv DEFAULT sy-msgv2
        !iv_msgv3    TYPE symsgv DEFAULT sy-msgv3
        !iv_msgv4    TYPE symsgv DEFAULT sy-msgv4
        !ii_log      TYPE REF TO Lif_abapgit_log OPTIONAL
        !ix_previous TYPE REF TO cx_root OPTIONAL
        !iv_longtext TYPE csequence OPTIONAL
      RAISING
        Lcx_abapgit_exception .
    "! Raise with text from previous exception
    "! @parameter ix_previous | Previous exception
    "! @parameter iv_longtext | Longtext
    "! @raising zcx_abapgit_exception | Exception
    CLASS-METHODS raise_with_text
      IMPORTING
        !ix_previous TYPE REF TO cx_root
        !iv_longtext TYPE csequence OPTIONAL
      RAISING
        Lcx_abapgit_exception .
    METHODS constructor
      IMPORTING
        !textid   LIKE if_t100_message=>t100key OPTIONAL
        !previous LIKE previous OPTIONAL
        !log      TYPE REF TO Lif_abapgit_log OPTIONAL
        !msgv1    TYPE symsgv OPTIONAL
        !msgv2    TYPE symsgv OPTIONAL
        !msgv3    TYPE symsgv OPTIONAL
        !msgv4    TYPE symsgv OPTIONAL
        !longtext TYPE csequence OPTIONAL .

    METHODS get_source_position
        REDEFINITION .
    METHODS if_message~get_longtext
        REDEFINITION .
*"* protected declarations
*include zcx_abapgit_exception=========co.
  PROTECTED SECTION.
*"* private declarations
*include zcx_abapgit_exception=========ci.
  PRIVATE SECTION.

    CONSTANTS c_generic_error_msg TYPE string VALUE `An error occured (LCX_ABAPGIT_EXCEPTION)`.

    CLASS-METHODS split_text_to_symsg
      IMPORTING
        !iv_text      TYPE string
      RETURNING
        VALUE(rs_msg) TYPE symsg .
    METHODS save_callstack .
    METHODS itf_to_string
      IMPORTING
        !it_itf          TYPE tline_tab
      RETURNING
        VALUE(rv_result) TYPE string .
    METHODS get_t100_longtext_itf
      RETURNING
        VALUE(rt_itf) TYPE tline_tab .
    METHODS remove_empty_section
      IMPORTING
        !iv_tabix_from TYPE i
        !iv_tabix_to   TYPE i
      CHANGING
        !ct_itf        TYPE tline_tab .
    METHODS replace_section_head_with_text
      CHANGING
        !cs_itf TYPE tline .
    CLASS-METHODS remove_newlines_from_string
      IMPORTING
        iv_string        TYPE string
      RETURNING
        VALUE(rv_result) TYPE string.
endclass. "ZCX_ABAPGIT_EXCEPTION definition
*class-pool .
*"* class pool for class ZCX_ABAPGIT_NOT_FOUND

*"* local type definitions
*include zcx_abapgit_not_found=========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCX_ABAPGIT_NOT_FOUND definition
*"* public declarations
*include zcx_abapgit_not_found=========cu.
CLASS Lcx_abapgit_not_found DEFINITION
*public
  INHERITING FROM cx_static_check
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    METHODS constructor
      IMPORTING
        !textid   LIKE textid OPTIONAL
        !previous LIKE previous OPTIONAL.
*"* protected declarations
*include zcx_abapgit_not_found=========co.
  PROTECTED SECTION.
*"* private declarations
*include zcx_abapgit_not_found=========ci.
  PRIVATE SECTION.
endclass. "ZCX_ABAPGIT_NOT_FOUND definition
*"* class pool for interface ZIF_ABAPGIT_AFF_REGISTRY

INTERFACE Lif_abapgit_aff_registry
   .

  METHODS:
    "! Returns TRUE if the object type is supported by ABAP file formats (AFF) in abapGit.<br/>
    "! Either there is a (standalone AFF capable) object handler,
    "! or object handler calls the AFF framework in newer ABAP systems.
    is_supported_object_type
      IMPORTING
        iv_obj_type      TYPE tadir-object
      RETURNING
        VALUE(rv_result) TYPE abap_bool.
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_AFF_TYPES_V1

INTERFACE Lif_abapgit_aff_types_v1 .

  TYPES ty_format_version TYPE string.

  TYPES ty_abap_language_version TYPE c LENGTH 1.

  TYPES ty_abap_language_version_cloud TYPE c LENGTH 1.

  TYPES ty_abap_language_version_src TYPE c LENGTH 1.

  CONSTANTS:
    BEGIN OF co_abap_language_version_src,
      standard          TYPE ty_abap_language_version_src VALUE 'X',
      key_user          TYPE ty_abap_language_version_src VALUE '2',
      cloud_development TYPE ty_abap_language_version_src VALUE '5',
    END OF co_abap_language_version_src.

  CONSTANTS:
    BEGIN OF co_abap_language_version,
      standard          TYPE ty_abap_language_version VALUE space,
      key_user          TYPE ty_abap_language_version VALUE '2',
      cloud_development TYPE ty_abap_language_version VALUE '5',
    END OF co_abap_language_version.

  CONSTANTS:
    BEGIN OF co_abap_language_version_cloud,
      standard          TYPE ty_abap_language_version_cloud VALUE space,
      cloud_development TYPE ty_abap_language_version_cloud VALUE '5',
    END OF co_abap_language_version_cloud.

  TYPES ty_description_60 TYPE c LENGTH 60.
  TYPES ty_description_100 TYPE c LENGTH 100.

  TYPES ty_object_name_30 TYPE c LENGTH 30.

  TYPES ty_original_language TYPE sy-langu.

  TYPES:
    BEGIN OF ty_header_60_src,
      description           TYPE ty_description_60,
      original_language     TYPE ty_original_language,
      abap_language_version TYPE ty_abap_language_version_src,
    END OF ty_header_60_src.

  TYPES:
    BEGIN OF ty_header_60_cloud,
      description           TYPE ty_description_60,
      original_language     TYPE ty_original_language,
      abap_language_version TYPE ty_abap_language_version_cloud,
    END OF ty_header_60_cloud.

  TYPES:
    BEGIN OF ty_header_60,
      description           TYPE ty_description_60,
      original_language     TYPE ty_original_language,
      abap_language_version TYPE ty_abap_language_version,
    END OF ty_header_60.

  TYPES:
    BEGIN OF ty_header_60_no_abap_lv,
      description           TYPE ty_description_60,
      original_language     TYPE ty_original_language,
    END OF ty_header_60_no_abap_lv.

  TYPES:
    BEGIN OF ty_header_100,
      description           TYPE ty_description_100,
      original_language     TYPE ty_original_language,
      abap_language_version TYPE ty_abap_language_version,
    END OF ty_header_100.

  TYPES:
    BEGIN OF ty_header_only_description,
      description TYPE ty_description_60,
    END OF ty_header_only_description.

  TYPES ty_option TYPE c LENGTH 2.

  CONSTANTS:
    BEGIN OF co_option,
      equals               TYPE ty_option VALUE 'EQ',
      between              TYPE ty_option VALUE 'BT',
      greater_than         TYPE ty_option VALUE 'GT',
      contains_pattern     TYPE ty_option VALUE 'CP',
      not_equal            TYPE ty_option VALUE 'NE',
      not_between          TYPE ty_option VALUE 'NB',
      not_contains_pattern TYPE ty_option VALUE 'NP',
      greater_equal        TYPE ty_option VALUE 'GE',
      less_than            TYPE ty_option VALUE 'LT',
      less_equal           TYPE ty_option VALUE 'LE',
    END OF co_option.

  TYPES ty_sign TYPE c LENGTH 1.

  CONSTANTS:
    BEGIN OF co_sign,
      include TYPE ty_sign VALUE 'I',
      exclude TYPE ty_sign VALUE 'E',
    END OF co_sign.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_AFF_TYPE_MAPPING

INTERFACE Lif_abapgit_aff_type_mapping
   .
  METHODS:
    "! Convert from AFF to abapGit data
    "!
    "! @parameter iv_data | ABAP data as AFF type
    "! @parameter iv_object_name | Name of object
    "! @parameter es_data | ABAP data as abapGit type
    to_abapgit
      IMPORTING iv_data TYPE data
                iv_object_name TYPE sobj_name
      EXPORTING es_data TYPE data,

    "! Converts to AFF specific meta data
    "!
    "! @parameter iv_data | (meta-)data of the object
    "! @parameter es_data | aff data of the object, e.g. zif_abapgit_aff_intf_v1=>ty_main
    to_aff
      IMPORTING iv_data TYPE data
      EXPORTING es_data TYPE data.
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_AJSON_TYPES

INTERFACE Lif_abapgit_ajson_types
  .

  TYPES:
    ty_node_type TYPE string.

  CONSTANTS:
    BEGIN OF node_type,
      boolean TYPE ty_node_type VALUE 'bool',
      string  TYPE ty_node_type VALUE 'str',
      number  TYPE ty_node_type VALUE 'num',
      null    TYPE ty_node_type VALUE 'null',
      array   TYPE ty_node_type VALUE 'array',
      object  TYPE ty_node_type VALUE 'object',
    END OF node_type.

  TYPES:
    BEGIN OF ty_node,
      path TYPE string,
      name TYPE string,
      type TYPE ty_node_type,
      value TYPE string,
      index TYPE i,
      order TYPE i,
      children TYPE i,
    END OF ty_node.
  TYPES:
    ty_nodes_tt TYPE STANDARD TABLE OF ty_node WITH KEY path name.
  TYPES:
    ty_nodes_ts TYPE SORTED TABLE OF ty_node
      WITH UNIQUE KEY path name
      WITH NON-UNIQUE SORTED KEY array_index COMPONENTS path index
      WITH NON-UNIQUE SORTED KEY item_order COMPONENTS path order.

  TYPES:
    BEGIN OF ty_path_name,
      path TYPE string,
      name TYPE string,
    END OF ty_path_name.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_AUTH

INTERFACE Lif_abapgit_auth .

  TYPES: ty_authorization TYPE string.

  CONSTANTS: BEGIN OF c_authorization,
               startup               TYPE ty_authorization VALUE 'STARTUP',
               uninstall             TYPE ty_authorization VALUE 'UNINSTALL',
               create_repo           TYPE ty_authorization VALUE 'CREATE_REPO',
               transport_to_branch   TYPE ty_authorization VALUE 'TRANSPORT_TO_BRANCH',
               update_local_checksum TYPE ty_authorization VALUE 'UPDATE_LOCAL_CHECKSUM',
             END OF c_authorization.

  METHODS:
    is_allowed
      IMPORTING iv_authorization  TYPE ty_authorization
                iv_param          TYPE string OPTIONAL
      RETURNING VALUE(rv_allowed) TYPE abap_bool.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_BACKGROUND

INTERFACE Lif_abapgit_background
   .


  TYPES:
    BEGIN OF ty_settings,
      key   TYPE string,
      value TYPE string,
    END OF ty_settings .
  TYPES:
    ty_settings_tt TYPE STANDARD TABLE OF ty_settings WITH DEFAULT KEY .

  CLASS-METHODS get_description
    RETURNING
      VALUE(rv_description) TYPE string .
  CLASS-METHODS get_settings
    CHANGING
      ct_settings TYPE ty_settings_tt .
  METHODS run
    IMPORTING
      !io_repo     TYPE REF TO Lcl_abapgit_repo_online
      !ii_log      TYPE REF TO Lif_abapgit_log
      !it_settings TYPE ty_settings_tt OPTIONAL
    RAISING
      Lcx_abapgit_exception .
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_CODE_INSPECTOR

INTERFACE Lif_abapgit_code_inspector
   .

  TYPES: BEGIN OF ty_result,
           objtype  TYPE tadir-object,
           objname  TYPE tadir-obj_name,
           sobjtype TYPE c LENGTH 4,
           sobjname TYPE c LENGTH 40,
           kind     TYPE c LENGTH 1,
           line     TYPE n LENGTH 6,
           col      TYPE n LENGTH 4,
           code     TYPE c LENGTH 10,
           test     TYPE c LENGTH 30,
           text     TYPE string,
           param1   TYPE c LENGTH 80,
         END OF ty_result.

  TYPES ty_results TYPE STANDARD TABLE OF ty_result WITH DEFAULT KEY.

  TYPES: BEGIN OF ty_variant,
           name        TYPE sci_chkv,
           description TYPE string,
         END OF ty_variant.

  TYPES ty_variants TYPE STANDARD TABLE OF ty_variant WITH DEFAULT KEY.

  METHODS run
    IMPORTING
      !iv_variant    TYPE sci_chkv
      !iv_save       TYPE abap_bool DEFAULT abap_false
    RETURNING
      VALUE(rt_list) TYPE ty_results
    RAISING
      Lcx_abapgit_exception .

  METHODS is_successful
    RETURNING
      VALUE(rv_success) TYPE abap_bool .

  METHODS get_summary
    RETURNING
      VALUE(rv_summary) TYPE string.

  METHODS validate_check_variant
    IMPORTING
      !iv_check_variant_name TYPE sci_chkv
    RAISING
      Lcx_abapgit_exception.

  METHODS list_global_variants
    RETURNING
      VALUE(rt_list) TYPE ty_variants.
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_COMPARATOR

INTERFACE Lif_abapgit_comparator
   .


  TYPES:
    BEGIN OF ty_result,
      text TYPE string,
    END OF ty_result .

  METHODS compare
    IMPORTING
      !ii_remote       TYPE REF TO Lif_abapgit_xml_input
      !ii_log          TYPE REF TO Lif_abapgit_log
    RETURNING
      VALUE(rs_result) TYPE ty_result
    RAISING
      Lcx_abapgit_exception .
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_ECATT

INTERFACE Lif_abapgit_ecatt
   .

  " downport missing types

  TYPES:
    ty_invert_validation TYPE c LENGTH 1,
    ty_error_prio        TYPE n LENGTH 1,
    ty_impl_name         TYPE c LENGTH 30,
    ty_impl_type         TYPE c LENGTH 1,
    ty_impl_subtype      TYPE c LENGTH 4,
    ty_package           TYPE c LENGTH 255,
    BEGIN OF ty_impl_det,
      impl_name    TYPE ty_impl_name,
      impl_type    TYPE ty_impl_type,
      impl_subtype TYPE ty_impl_subtype,
      impl_package TYPE ty_package,
    END OF ty_impl_det.

  TYPES:
    BEGIN OF ty_bus_msg.
      INCLUDE TYPE etobj_key.
  TYPES:
      bus_msg_no   TYPE c LENGTH 1, " ty_msg_no
      arbgb        TYPE arbgb,
      msgnr        TYPE msgnr,
      bus_msg_text TYPE string, "ty_bus_msg_text
      otr_key      TYPE sotr_conc,
      msg_type     TYPE c LENGTH 4, "ty_msg_type
    END OF ty_bus_msg,

    ty_bus_msgs TYPE STANDARD TABLE OF ty_bus_msg.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_ECATT_DOWNLOAD

INTERFACE Lif_abapgit_ecatt_download
   .

  METHODS:
    get_xml_stream
      RETURNING
        VALUE(rv_xml_stream) TYPE xstring.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_ECATT_UPLOAD

INTERFACE Lif_abapgit_ecatt_upload
   .
  METHODS:
    set_stream_for_upload
      IMPORTING
        iv_xml TYPE xstring.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_ENVIRONMENT

INTERFACE Lif_abapgit_environment
  .
  TYPES:
    BEGIN OF ty_release_sp,
      release TYPE c LENGTH 10,
      sp      TYPE c LENGTH 10,
    END OF ty_release_sp,
    ty_system_language_filter TYPE RANGE OF spras.

  METHODS is_sap_cloud_platform
    RETURNING
      VALUE(rv_result) TYPE abap_bool.
  METHODS is_merged
    RETURNING
      VALUE(rv_result) TYPE abap_bool.
  METHODS is_repo_object_changes_allowed
    RETURNING
      VALUE(rv_result) TYPE abap_bool.
  METHODS compare_with_inactive
    RETURNING
      VALUE(rv_result) TYPE abap_bool.
  METHODS is_restart_required
    RETURNING
      VALUE(rv_result) TYPE abap_bool.
  METHODS is_sap_object_allowed
    RETURNING
      VALUE(rv_allowed) TYPE abap_bool.
  METHODS get_basis_release
    RETURNING
      VALUE(rs_result) TYPE ty_release_sp.
  METHODS get_system_language_filter
    RETURNING
      VALUE(rt_system_language_filter) TYPE ty_system_language_filter.
  METHODS is_variant_maintenance
    RETURNING
      VALUE(rv_is_variant_maintenance) TYPE abap_bool.
  METHODS init_parallel_processing
    IMPORTING
      iv_group                      TYPE clike
    RETURNING
      VALUE(rv_free_work_processes) TYPE i.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_FIELD_RULES

INTERFACE Lif_abapgit_field_rules
   .
  TYPES ty_fill_rule TYPE c LENGTH 2.
  CONSTANTS:
    BEGIN OF c_fill_rule,
      date      TYPE ty_fill_rule VALUE 'DT',
      time      TYPE ty_fill_rule VALUE 'TM',
      timestamp TYPE ty_fill_rule VALUE 'TS',
      user      TYPE ty_fill_rule VALUE 'UR',
      client    TYPE ty_fill_rule VALUE 'CT',
      package   TYPE ty_fill_rule VALUE 'PK',
    END OF c_fill_rule.

  METHODS add
    IMPORTING
      iv_table       TYPE tabname
      iv_field       TYPE fieldname
      iv_fill_rule   TYPE ty_fill_rule
    RETURNING
      VALUE(ro_self) TYPE REF TO Lif_abapgit_field_rules.
  METHODS apply_clear_logic
    IMPORTING
      iv_table TYPE tabname
    CHANGING
      ct_data  TYPE STANDARD TABLE.
  METHODS apply_fill_logic
    IMPORTING
      iv_table   TYPE tabname
      iv_package TYPE devclass
    CHANGING
      ct_data    TYPE STANDARD TABLE.
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_FRONTEND_SERVICES

INTERFACE Lif_abapgit_frontend_services .

  TYPES:
    ty_char1       TYPE c LENGTH 1,
    ty_gui_release TYPE n LENGTH 4,
    ty_gui_sp      TYPE n LENGTH 2,
    ty_gui_patch   TYPE n LENGTH 2.

  METHODS file_upload
    IMPORTING
      !iv_path       TYPE string
    RETURNING
      VALUE(rv_xstr) TYPE xstring
    RAISING
      Lcx_abapgit_exception.

  METHODS file_download
    IMPORTING
      !iv_path TYPE string
      !iv_xstr TYPE xstring
    RAISING
      Lcx_abapgit_exception .

  METHODS show_file_save_dialog
    IMPORTING
      !iv_title            TYPE string
      !iv_extension        TYPE string
      !iv_default_filename TYPE string
    RETURNING
      VALUE(rv_path)       TYPE string
    RAISING
      Lcx_abapgit_exception.

  METHODS show_file_open_dialog
    IMPORTING
      !iv_title            TYPE string
      !iv_extension        TYPE string
      !iv_default_filename TYPE string
    RETURNING
      VALUE(rv_path)       TYPE string
    RAISING
      Lcx_abapgit_exception.

  METHODS clipboard_export
    IMPORTING
      iv_no_auth_check TYPE abap_bool DEFAULT abap_false
      VALUE(it_data)   TYPE STANDARD TABLE
    RAISING
      Lcx_abapgit_exception.

  METHODS execute
    IMPORTING
      !iv_document          TYPE string OPTIONAL
      !iv_application       TYPE string OPTIONAL
      !iv_parameter         TYPE string OPTIONAL
      !iv_default_directory TYPE string OPTIONAL
      !iv_maximized         TYPE string OPTIONAL
      !iv_minimized         TYPE string OPTIONAL
      !iv_synchronous       TYPE string OPTIONAL
      !iv_operation         TYPE string DEFAULT 'OPEN'
    RAISING
      Lcx_abapgit_exception.

  METHODS get_system_directory
    CHANGING
      !cv_system_directory TYPE string
    RAISING
      Lcx_abapgit_exception.

  METHODS directory_browse
    IMPORTING
      iv_window_title    TYPE string OPTIONAL
      iv_initial_folder  TYPE string OPTIONAL
    CHANGING
      cv_selected_folder TYPE string
    RAISING
      Lcx_abapgit_exception.

  METHODS get_file_separator
    CHANGING
      cv_file_separator TYPE ty_char1
    RAISING
      Lcx_abapgit_exception.

  METHODS get_gui_version
    EXPORTING
      ev_gui_release        TYPE ty_gui_release
      ev_gui_sp             TYPE ty_gui_sp
      ev_gui_patch          TYPE ty_gui_patch
      ev_gui_version_string TYPE string
    RAISING
      Lcx_abapgit_exception.

  METHODS directory_exist
    IMPORTING
      iv_directory     TYPE string
    RETURNING
      VALUE(rv_exists) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception.

  METHODS directory_create
    IMPORTING
      iv_directory TYPE string
    CHANGING
      cv_rc        TYPE i
    RAISING
      Lcx_abapgit_exception.

  METHODS gui_is_available
    RETURNING
      VALUE(rv_gui_is_available) TYPE abap_bool.

  METHODS is_sapgui_for_java
    RETURNING
      VALUE(rv_result) TYPE abap_bool.

  METHODS is_sapgui_for_windows
    RETURNING
      VALUE(rv_result) TYPE abap_bool.

  METHODS is_webgui
    RETURNING
      VALUE(rv_is_webgui) TYPE abap_bool.

  METHODS open_ie_devtools
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_FUNCTION_MODULE

INTERFACE Lif_abapgit_function_module
  .

  METHODS:
    function_exists
      IMPORTING
        iv_function_module_name TYPE clike
      RETURNING
        VALUE(rv_exists)        TYPE abap_bool.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_GIT_DEFINITIONS

INTERFACE Lif_abapgit_git_definitions
   .
* this interface is self contained
* only references to built in types
* git does not know the concept of TADIR objects, only knows files
  TYPES:
    ty_type    TYPE c LENGTH 6 .
  TYPES:
    ty_bitbyte TYPE c LENGTH 8 .
  TYPES:
    ty_sha1    TYPE c LENGTH 40 .
  TYPES: ty_sha1_tt TYPE STANDARD TABLE OF ty_sha1 WITH DEFAULT KEY .
  TYPES:
    ty_adler32 TYPE x LENGTH 4 .

  TYPES ty_item_state TYPE c LENGTH 1.
  TYPES:
    BEGIN OF ty_file_signature,
      path     TYPE string,
      filename TYPE string,
      sha1     TYPE ty_sha1,
    END OF ty_file_signature .
  TYPES:
    ty_file_signatures_tt TYPE STANDARD TABLE OF
           ty_file_signature WITH DEFAULT KEY .
  TYPES:
    ty_file_signatures_ts TYPE SORTED TABLE OF
           ty_file_signature WITH UNIQUE KEY path filename .
  TYPES:
    BEGIN OF ty_file.
      INCLUDE TYPE ty_file_signature.
  TYPES: data TYPE xstring,
    END OF ty_file .
  TYPES:
    ty_files_tt TYPE STANDARD TABLE OF ty_file WITH DEFAULT KEY
                     WITH UNIQUE SORTED KEY file_path COMPONENTS path filename
                     WITH NON-UNIQUE SORTED KEY file COMPONENTS filename.

  TYPES ty_git_branch_type TYPE c LENGTH 2 .
  TYPES:
    BEGIN OF ty_git_branch,
      sha1         TYPE ty_sha1,
      name         TYPE string,
      type         TYPE ty_git_branch_type,
      is_head      TYPE abap_bool,
      display_name TYPE string,
    END OF ty_git_branch .
  TYPES:
    ty_git_branch_list_tt TYPE STANDARD TABLE OF ty_git_branch WITH DEFAULT KEY
                               WITH NON-UNIQUE SORTED KEY name_key
                               COMPONENTS name.
  TYPES:
    BEGIN OF ty_git_tag,
      sha1         TYPE ty_sha1,
      object       TYPE ty_sha1,
      name         TYPE string,
      type         TYPE ty_git_branch_type,
      display_name TYPE string,
      tagger_name  TYPE string,
      tagger_email TYPE string,
      message      TYPE string,
      body         TYPE string,
    END OF ty_git_tag .
  TYPES:
    BEGIN OF ty_git_user,
      name  TYPE string,
      email TYPE string,
    END OF ty_git_user .
  TYPES:
    BEGIN OF ty_comment,
      committer TYPE ty_git_user,
      author    TYPE ty_git_user,
      comment   TYPE string,
    END OF ty_comment .

  TYPES:
    ty_chmod TYPE c LENGTH 6 .

  CONSTANTS:
    BEGIN OF c_chmod,
      file       TYPE ty_chmod VALUE '100644',
      executable TYPE ty_chmod VALUE '100755',
      dir        TYPE ty_chmod VALUE '40000 ',
      submodule  TYPE ty_chmod VALUE '160000',
    END OF c_chmod .

  TYPES:
    BEGIN OF ty_expanded,
      path  TYPE string,
      name  TYPE string,
      sha1  TYPE ty_sha1,
      chmod TYPE ty_chmod,
    END OF ty_expanded .
  TYPES:
    ty_expanded_tt TYPE STANDARD TABLE OF ty_expanded WITH DEFAULT KEY
      WITH NON-UNIQUE SORTED KEY path_name COMPONENTS path name.

  TYPES:
    BEGIN OF ty_create,
      name   TYPE string,
      parent TYPE string,
    END OF ty_create .
  TYPES:
    BEGIN OF ty_commit,
      sha1       TYPE ty_sha1,
      parent1    TYPE ty_sha1,
      parent2    TYPE ty_sha1,
      author     TYPE string,
      email      TYPE string,
      time       TYPE string,
      message    TYPE string,
      body       TYPE STANDARD TABLE OF string WITH DEFAULT KEY,
      branch     TYPE string,
      merge      TYPE string,
      tags       TYPE STANDARD TABLE OF string WITH DEFAULT KEY,
      create     TYPE STANDARD TABLE OF ty_create WITH DEFAULT KEY,
      compressed TYPE abap_bool,
    END OF ty_commit .
  TYPES:
    ty_commit_tt TYPE STANDARD TABLE OF ty_commit WITH DEFAULT KEY .

  CONSTANTS:
    BEGIN OF c_type,
      commit TYPE ty_type VALUE 'commit',                   "#EC NOTEXT
      tree   TYPE ty_type VALUE 'tree',                     "#EC NOTEXT
      ref_d  TYPE ty_type VALUE 'ref_d',                    "#EC NOTEXT
      tag    TYPE ty_type VALUE 'tag',                      "#EC NOTEXT
      blob   TYPE ty_type VALUE 'blob',                     "#EC NOTEXT
    END OF c_type .

  CONSTANTS:
    BEGIN OF c_git_branch_type,
      branch          TYPE ty_git_branch_type VALUE 'HD',
      lightweight_tag TYPE ty_git_branch_type VALUE 'TG',
      annotated_tag   TYPE ty_git_branch_type VALUE 'AT',
      other           TYPE ty_git_branch_type VALUE 'ZZ',
    END OF c_git_branch_type .
  CONSTANTS c_head_name TYPE string VALUE 'HEAD' ##NO_TEXT.
  CONSTANTS:
    BEGIN OF c_git_branch,
      main         TYPE string VALUE 'refs/heads/main',
      prefix       TYPE string VALUE 'refs/',
      heads_prefix TYPE string VALUE 'refs/heads/',
      heads        TYPE string VALUE 'refs/heads/*',
      tags_prefix  TYPE string VALUE 'refs/tags/',
      tags         TYPE string VALUE 'refs/tags/*',
      peel         TYPE string VALUE '^{}',
    END OF c_git_branch.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_GUI_ASSET_MANAGER

INTERFACE Lif_abapgit_gui_asset_manager
   .

  TYPES:
    BEGIN OF ty_web_asset,
      url          TYPE string,
      type         TYPE c LENGTH 50,
      subtype      TYPE c LENGTH 50,
      content      TYPE xstring,
      is_cacheable TYPE abap_bool,
    END OF ty_web_asset .
  TYPES:
    ty_web_assets TYPE STANDARD TABLE OF ty_web_asset WITH DEFAULT KEY .

  METHODS get_all_assets
    RETURNING
      VALUE(rt_assets) TYPE ty_web_assets
    RAISING
      Lcx_abapgit_exception.

  METHODS get_asset
    IMPORTING
      iv_url          TYPE string
    RETURNING
      VALUE(rs_asset) TYPE ty_web_asset
    RAISING
      Lcx_abapgit_exception.

  METHODS get_text_asset
    IMPORTING
      iv_url            TYPE string
      iv_assert_subtype TYPE string OPTIONAL
    RETURNING
      VALUE(rv_asset)   TYPE string
    RAISING
      Lcx_abapgit_exception.

  METHODS register_asset
    IMPORTING
      !iv_url       TYPE string
      !iv_type      TYPE string
      !iv_cachable  TYPE abap_bool DEFAULT abap_true
      !iv_mime_name TYPE wwwdatatab-objid OPTIONAL
      !iv_base64    TYPE string OPTIONAL
      !iv_inline    TYPE string OPTIONAL
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_GUI_ERROR_HANDLER

INTERFACE Lif_abapgit_gui_error_handler
   .

  METHODS handle_error
    IMPORTING
      ix_error          TYPE REF TO Lcx_abapgit_exception
    RETURNING
      VALUE(rv_handled) TYPE abap_bool.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_GUI_EVENT_HANDLER

INTERFACE Lif_abapgit_gui_event_handler
   .

  TYPES:
    BEGIN OF ty_handling_result,
      page  TYPE REF TO Lif_abapgit_gui_renderable,
      state TYPE i,
    END OF ty_handling_result.

  METHODS on_event
    IMPORTING
      ii_event   TYPE REF TO Lif_abapgit_gui_event
    RETURNING
      VALUE(rs_handled) TYPE ty_handling_result
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_GUI_HOTKEYS

INTERFACE Lif_abapgit_gui_hotkeys
   .

  TYPES:
    BEGIN OF ty_hotkey_with_descr,
      ui_component TYPE string,
      action       TYPE string,
      hotkey       TYPE string,
      description  TYPE string,
    END OF ty_hotkey_with_descr .
  TYPES:
    ty_hotkeys_with_descr TYPE STANDARD TABLE OF ty_hotkey_with_descr
      WITH DEFAULT KEY
      WITH UNIQUE SORTED KEY action COMPONENTS ui_component action .

  METHODS get_hotkey_actions
    RETURNING
      VALUE(rt_hotkey_actions) TYPE ty_hotkeys_with_descr .

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_GUI_HOTKEY_CTL

INTERFACE Lif_abapgit_gui_hotkey_ctl
  .


  METHODS register_hotkeys
    IMPORTING
      !it_hotkeys TYPE Lif_abapgit_gui_hotkeys=>ty_hotkeys_with_descr.
  METHODS reset.
  METHODS get_registered_hotkeys
    RETURNING
      VALUE(rt_registered_hotkeys) TYPE Lif_abapgit_gui_hotkeys=>ty_hotkeys_with_descr
    RAISING
      Lcx_abapgit_exception.
  METHODS set_visible
    IMPORTING
      iv_visible TYPE abap_bool.
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_GUI_HTML_PROCESSOR

INTERFACE Lif_abapgit_gui_html_processor
   .

  METHODS process
    IMPORTING
      !iv_html TYPE string
      !ii_gui_services TYPE REF TO Lif_abapgit_gui_services
    RETURNING
      VALUE(rv_html) TYPE string
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_GUI_MENU_PROVIDER

INTERFACE Lif_abapgit_gui_menu_provider
   .

  METHODS get_menu
    RETURNING
      VALUE(ro_toolbar) TYPE REF TO Lcl_abapgit_html_toolbar
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_GUI_MODAL

INTERFACE Lif_abapgit_gui_modal
   .

  METHODS is_modal
    RETURNING
      VALUE(rv_yes) TYPE abap_bool.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_GUI_PAGE_TITLE

INTERFACE Lif_abapgit_gui_page_title
   .

  METHODS get_page_title
    RETURNING
      VALUE(rv_title) TYPE string.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_GUI_RENDERABLE

INTERFACE Lif_abapgit_gui_renderable
   .

  METHODS render
    RETURNING
      VALUE(ri_html) TYPE REF TO Lif_abapgit_html
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_GUI_RENDER_ITEM

INTERFACE Lif_abapgit_gui_render_item
   .

  METHODS render
    IMPORTING
      iv_item        TYPE any
      iv_index       TYPE i
    RETURNING
      VALUE(ri_html) TYPE REF TO Lif_abapgit_html
    RAISING
      Lcx_abapgit_exception .

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_GUI_SERVICES

INTERFACE Lif_abapgit_gui_services
   .


  METHODS cache_asset
    IMPORTING
      !iv_text      TYPE string OPTIONAL
      !iv_xdata     TYPE xstring OPTIONAL
      !iv_url       TYPE string OPTIONAL
      !iv_type      TYPE c
      !iv_subtype   TYPE c
    RETURNING
      VALUE(rv_url) TYPE string
    RAISING
      Lcx_abapgit_exception .
  " Notes:
  " - page_asset is supposed to be not cachable
  " - add mime64 if needed (supposedly won't be needed)
  METHODS register_page_asset
    IMPORTING
      !iv_url       TYPE string
      !iv_type      TYPE string
      !iv_mime_name TYPE wwwdatatab-objid OPTIONAL
      !iv_inline    TYPE string OPTIONAL
    RAISING
      Lcx_abapgit_exception .
  METHODS register_event_handler
    IMPORTING
      !ii_event_handler TYPE REF TO Lif_abapgit_gui_event_handler .
  METHODS get_current_page_name
    RETURNING
      VALUE(rv_page_name) TYPE string .
  METHODS get_hotkeys_ctl
    RETURNING
      VALUE(ri_hotkey_ctl) TYPE REF TO Lif_abapgit_gui_hotkey_ctl .
  METHODS get_html_parts
    RETURNING
      VALUE(ro_parts) TYPE REF TO Lcl_abapgit_html_parts .
  METHODS get_log
    IMPORTING
      !iv_create_new TYPE abap_bool DEFAULT abap_false
    RETURNING
      VALUE(ri_log)  TYPE REF TO Lif_abapgit_log .

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_HTML

INTERFACE Lif_abapgit_html .

  CONSTANTS:
    BEGIN OF c_action_type,
      sapevent  TYPE c VALUE 'E',
      url       TYPE c VALUE 'U',
      onclick   TYPE c VALUE 'C',
      separator TYPE c VALUE 'S',
      dummy     TYPE c VALUE '_',
    END OF c_action_type .
  CONSTANTS:
    BEGIN OF c_html_opt,
      strong   TYPE c VALUE 'E',
      cancel   TYPE c VALUE 'C',
      crossout TYPE c VALUE 'X',
    END OF c_html_opt .

  TYPES:
    ty_table_of TYPE STANDARD TABLE OF REF TO Lif_abapgit_html WITH DEFAULT KEY.

  DATA mv_chunk_title TYPE string READ-ONLY. " Primarily for debug of posponed html parts

  METHODS set_title
    IMPORTING
      iv_title TYPE string
    RETURNING
      VALUE(ri_self) TYPE REF TO Lif_abapgit_html.

  METHODS add
    IMPORTING
      !ig_chunk TYPE any
    RETURNING
      VALUE(ri_self) TYPE REF TO Lif_abapgit_html.

  METHODS render
    IMPORTING
      !iv_no_indent_jscss TYPE abap_bool OPTIONAL
    RETURNING
      VALUE(rv_html)      TYPE string .

  METHODS is_empty
    RETURNING
      VALUE(rv_yes) TYPE abap_bool .

  METHODS add_a
    IMPORTING
      !iv_txt   TYPE string
      !iv_act   TYPE string
      !iv_query TYPE string OPTIONAL
      !iv_typ   TYPE c DEFAULT c_action_type-sapevent
      !iv_opt   TYPE clike OPTIONAL
      !iv_class TYPE string OPTIONAL
      !iv_id    TYPE string OPTIONAL
      !iv_style TYPE string OPTIONAL
      !iv_title TYPE string OPTIONAL
    RETURNING
      VALUE(ri_self) TYPE REF TO Lif_abapgit_html.

  METHODS add_checkbox
    IMPORTING
      iv_id      TYPE string
      iv_checked TYPE abap_bool OPTIONAL
    RETURNING
      VALUE(ri_self) TYPE REF TO Lif_abapgit_html.

  METHODS a
    IMPORTING
      !iv_txt       TYPE string
      !iv_act       TYPE string
      !iv_query     TYPE string OPTIONAL
      !iv_typ       TYPE c DEFAULT Lif_abapgit_html=>c_action_type-sapevent
      !iv_opt       TYPE clike OPTIONAL
      !iv_class     TYPE string OPTIONAL
      !iv_id        TYPE string OPTIONAL
      !iv_style     TYPE string OPTIONAL
      !iv_title     TYPE string OPTIONAL
    RETURNING
      VALUE(rv_str) TYPE string .

  METHODS icon
    IMPORTING
      !iv_name      TYPE string
      !iv_hint      TYPE string OPTIONAL
      !iv_class     TYPE string OPTIONAL
      !iv_onclick   TYPE string OPTIONAL
    RETURNING
      VALUE(rv_str) TYPE string .

  METHODS add_icon
    IMPORTING
      !iv_name    TYPE string
      !iv_hint    TYPE string OPTIONAL
      !iv_class   TYPE string OPTIONAL
      !iv_onclick TYPE string OPTIONAL
    RETURNING
      VALUE(ri_self) TYPE REF TO Lif_abapgit_html.

  METHODS wrap
    IMPORTING
      !iv_tag     TYPE string
      !iv_content TYPE string OPTIONAL
      !ii_content TYPE REF TO Lif_abapgit_html OPTIONAL
      !iv_id      TYPE string OPTIONAL
      !iv_class   TYPE string OPTIONAL
      !iv_hint    TYPE string OPTIONAL
      !iv_format_single_line TYPE abap_bool DEFAULT abap_false
    RETURNING
      VALUE(ri_self) TYPE REF TO Lif_abapgit_html.

  METHODS td
    IMPORTING
      !iv_content TYPE string OPTIONAL
      !ii_content TYPE REF TO Lif_abapgit_html OPTIONAL
      !iv_id      TYPE string OPTIONAL
      !iv_class   TYPE string OPTIONAL
      !iv_hint    TYPE string OPTIONAL
      !iv_format_single_line TYPE abap_bool DEFAULT abap_true
      PREFERRED PARAMETER iv_content
    RETURNING
      VALUE(ri_self) TYPE REF TO Lif_abapgit_html.

  METHODS th
    IMPORTING
      !iv_content TYPE string OPTIONAL
      !ii_content TYPE REF TO Lif_abapgit_html OPTIONAL
      !iv_id      TYPE string OPTIONAL
      !iv_class   TYPE string OPTIONAL
      !iv_hint    TYPE string OPTIONAL
      !iv_format_single_line TYPE abap_bool DEFAULT abap_true
      PREFERRED PARAMETER iv_content
    RETURNING
      VALUE(ri_self) TYPE REF TO Lif_abapgit_html.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_HTML_FORM

INTERFACE Lif_abapgit_html_form
   .

  TYPES:
    BEGIN OF ty_subitem,
      label    TYPE string,
      value    TYPE string,
      readonly TYPE abap_bool,
    END OF ty_subitem .
  TYPES:
    ty_subitems TYPE STANDARD TABLE OF ty_subitem WITH DEFAULT KEY .
  TYPES:
    BEGIN OF ty_field,
      type          TYPE i,
      name          TYPE string,
      label         TYPE string,
      hint          TYPE string,
      dblclick      TYPE string,
      click         TYPE string,
      placeholder   TYPE string,
      required      TYPE string,
      upper_case    TYPE abap_bool,
      item_class    TYPE string,
      error         TYPE string,
      default_value TYPE string,
      side_action   TYPE string,
      subitems      TYPE ty_subitems,
      readonly      TYPE abap_bool,
      password      TYPE abap_bool,
      condense      TYPE abap_bool,
      min           TYPE i,
      max           TYPE i,
      rows          TYPE i,
      cols          TYPE i,
    END OF ty_field .
  TYPES:
    ty_fields TYPE STANDARD TABLE OF ty_field
          WITH DEFAULT KEY
          WITH UNIQUE SORTED KEY by_name COMPONENTS name .
  TYPES:
    BEGIN OF ty_command,
      label    TYPE string,
      action   TYPE string,
      cmd_type TYPE i,
    END OF ty_command .

  CONSTANTS c_rows TYPE string VALUE 'rows'.
  CONSTANTS:
    BEGIN OF c_cmd_type,
      input      TYPE i VALUE 1,
      input_main TYPE i VALUE 2,
      link       TYPE i VALUE 3,
      button     TYPE i VALUE 4,
    END OF c_cmd_type .
  CONSTANTS:
    BEGIN OF c_field_type,
      text        TYPE i VALUE 1,
      radio       TYPE i VALUE 2,
      checkbox    TYPE i VALUE 3,
      field_group TYPE i VALUE 4,
      number      TYPE i VALUE 5,
      textarea    TYPE i VALUE 6,
      table       TYPE i VALUE 7,
      hidden      TYPE i VALUE 8,
    END OF c_field_type .

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_HTML_POPUP

INTERFACE Lif_abapgit_html_popup
   .

  METHODS create_picklist
    RETURNING
      VALUE(ro_picklist) TYPE REF TO Lcl_abapgit_gui_picklist
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_HTML_TABLE

INTERFACE Lif_abapgit_html_table
   .

  TYPES:
    BEGIN OF ty_row_attrs,
      css_class TYPE string,
    END OF ty_row_attrs.

  TYPES:
    BEGIN OF ty_cell_render,
      css_class TYPE string,
      content TYPE string,
      html TYPE REF TO Lif_abapgit_html,
    END OF ty_cell_render.

  METHODS get_row_attrs
    IMPORTING
      iv_row_index TYPE i
      is_row TYPE any
    RETURNING
      VALUE(rs_attrs) TYPE ty_row_attrs
    RAISING
      Lcx_abapgit_exception.

  METHODS render_cell
    IMPORTING
      iv_row_index TYPE i
      is_row TYPE any
      iv_column_id TYPE string
      iv_value TYPE any
    RETURNING
      VALUE(rs_render) TYPE ty_cell_render
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_HTML_VIEWER

INTERFACE Lif_abapgit_html_viewer
   .


  TYPES:
    ty_char256 TYPE c LENGTH 256 .
  TYPES:
    ty_post_data TYPE STANDARD TABLE OF ty_char256 WITH DEFAULT KEY .
  TYPES:
    BEGIN OF ty_name_value,
      name  TYPE c LENGTH 30,
      value TYPE c LENGTH 250,
    END OF ty_name_value .
  TYPES:
    ty_query_table TYPE STANDARD TABLE OF ty_name_value WITH DEFAULT KEY .

  CONSTANTS c_id_sapevent TYPE i VALUE 1 ##NO_TEXT.

  EVENTS sapevent
    EXPORTING
      VALUE(action) TYPE c OPTIONAL
      VALUE(frame) TYPE c OPTIONAL
      VALUE(getdata) TYPE c OPTIONAL
      VALUE(postdata) TYPE ty_post_data OPTIONAL
      VALUE(query_table) TYPE ty_query_table OPTIONAL .

  METHODS load_data
    IMPORTING
      !iv_url          TYPE string OPTIONAL
      !iv_type         TYPE c DEFAULT 'text'
      !iv_subtype      TYPE c DEFAULT 'html'
      !iv_size         TYPE i DEFAULT 0
    EXPORTING
      !ev_assigned_url TYPE string
    CHANGING
      !ct_data_table   TYPE STANDARD TABLE
    RAISING
      Lcx_abapgit_exception .
  METHODS set_registered_events
    IMPORTING
      !it_events TYPE cntl_simple_events
    RAISING
      Lcx_abapgit_exception .
  METHODS show_url
    IMPORTING
      !iv_url TYPE string
    RAISING
      Lcx_abapgit_exception .
  METHODS free .
  METHODS close_document .
  METHODS get_url
    RETURNING
      VALUE(rv_url) TYPE string .
  METHODS back .
  METHODS set_visiblity
    IMPORTING
      !iv_visible TYPE abap_bool .
  METHODS set_focus RAISING Lcx_abapgit_exception.
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_HTTP_AGENT

INTERFACE Lif_abapgit_http_agent
   .

  CONSTANTS:
    BEGIN OF c_methods,
      get    TYPE string VALUE 'GET',
      post   TYPE string VALUE 'POST',
      put    TYPE string VALUE 'PUT',
      delete TYPE string VALUE 'DELETE',
      patch  TYPE string VALUE 'PATCH',
    END OF c_methods.

  METHODS global_headers
    RETURNING
      VALUE(ro_global_headers) TYPE REF TO Lcl_abapgit_string_map.

  METHODS request
    IMPORTING
      !iv_url            TYPE string
      !iv_method         TYPE string DEFAULT c_methods-get
      !io_query          TYPE REF TO Lcl_abapgit_string_map OPTIONAL
      !io_headers        TYPE REF TO Lcl_abapgit_string_map OPTIONAL
      !iv_payload        TYPE any OPTIONAL " can be string, xstring
    RETURNING
      VALUE(ri_response) TYPE REF TO Lif_abapgit_http_response
    RAISING
      Lcx_abapgit_exception .

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_LXE_TEXTS

INTERFACE Lif_abapgit_lxe_texts
   .

  TYPES:
    ty_text_pairs TYPE STANDARD TABLE OF lxe_pcx_s1 WITH DEFAULT KEY.

  METHODS serialize
    IMPORTING
      !iv_object_type   TYPE tadir-object
      !iv_object_name   TYPE tadir-obj_name
      !io_i18n_params   TYPE REF TO Lcl_abapgit_i18n_params
      !ii_xml           TYPE REF TO Lif_abapgit_xml_output
      !io_files         TYPE REF TO Lcl_abapgit_objects_files
    RAISING
      Lcx_abapgit_exception .
  METHODS deserialize
    IMPORTING
      !iv_object_type   TYPE tadir-object OPTIONAL
      !iv_object_name   TYPE tadir-obj_name OPTIONAL
      !io_i18n_params   TYPE REF TO Lcl_abapgit_i18n_params
      !ii_xml           TYPE REF TO Lif_abapgit_xml_input
      !io_files         TYPE REF TO Lcl_abapgit_objects_files
    RAISING
      Lcx_abapgit_exception .

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_OBJECT_ENHO

INTERFACE Lif_abapgit_object_enho .

  METHODS:
    deserialize
      IMPORTING ii_xml     TYPE REF TO Lif_abapgit_xml_input
                iv_package TYPE devclass
      RAISING   Lcx_abapgit_exception,
    serialize
      IMPORTING ii_xml      TYPE REF TO Lif_abapgit_xml_output
                ii_enh_tool TYPE REF TO if_enh_tool
      RAISING   Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_OBJECT_ENHS

INTERFACE Lif_abapgit_object_enhs .

  METHODS:
    deserialize
      IMPORTING ii_xml           TYPE REF TO Lif_abapgit_xml_input
                iv_package       TYPE devclass
                ii_enh_spot_tool TYPE REF TO if_enh_spot_tool
      RAISING   Lcx_abapgit_exception,

    serialize
      IMPORTING ii_xml           TYPE REF TO Lif_abapgit_xml_output
                ii_enh_spot_tool TYPE REF TO if_enh_spot_tool
      RAISING   Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_PERSIST_SETTINGS

INTERFACE Lif_abapgit_persist_settings .

  METHODS modify
    IMPORTING
      !io_settings TYPE REF TO Lcl_abapgit_settings
    RAISING
      Lcx_abapgit_exception .
  METHODS read
    RETURNING
      VALUE(ro_settings) TYPE REF TO Lcl_abapgit_settings .

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_PROGRESS

INTERFACE Lif_abapgit_progress
   .


  METHODS show
    IMPORTING
      !iv_current TYPE i
      !iv_text    TYPE csequence .
  METHODS set_total
    IMPORTING
      !iv_total TYPE i .
  METHODS off .
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_PR_ENUM_PROVIDER

INTERFACE Lif_abapgit_pr_enum_provider
   .

  TYPES:
    BEGIN OF ty_pull_request,
      base_url        TYPE string,
      number          TYPE string,
      title           TYPE string,
      user            TYPE string,
      head_url        TYPE string,
      head_branch     TYPE string,
      created_at      TYPE string, " TODO change to D after date parsing fixed
      is_for_upstream TYPE abap_bool,
      draft           TYPE abap_bool,
      html_url        TYPE string,
    END OF ty_pull_request.
  TYPES:
    ty_pull_requests TYPE STANDARD TABLE OF ty_pull_request WITH KEY base_url number.

  METHODS list_pull_requests
    RETURNING
      VALUE(rt_pulls) TYPE ty_pull_requests
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_SERVICES_REPO

INTERFACE Lif_abapgit_services_repo
   .

  TYPES:
    BEGIN OF ty_repo_params,
      name               TYPE string,
      url                TYPE string,
      package            TYPE devclass,
      branch_name        TYPE string,
      display_name       TYPE string,
      folder_logic       TYPE string,
      labels             TYPE string,
      ignore_subpackages TYPE abap_bool,
      main_lang_only     TYPE abap_bool,
      abap_lang_vers     TYPE string,
    END OF ty_repo_params .

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_VERSION

INTERFACE Lif_abapgit_version
   .

  CONSTANTS c_xml_version TYPE string VALUE 'v1.0.0' ##NO_TEXT.
  CONSTANTS c_abap_version TYPE string VALUE '1.126.0' ##NO_TEXT.

ENDINTERFACE.
*class-pool .
*"* class pool for class ZCL_ABAPGIT_AUTH

*"* local type definitions
*include zcl_abapgit_auth==============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_AUTH definition
*"* public declarations
*include zcl_abapgit_auth==============cu.
CLASS Lcl_abapgit_auth DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS is_allowed
      IMPORTING
        !iv_authorization TYPE Lif_abapgit_auth=>ty_authorization
        !iv_param         TYPE string OPTIONAL
      RETURNING
        VALUE(rv_allowed) TYPE abap_bool .
*"* protected declarations
*include zcl_abapgit_auth==============co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_auth==============ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_AUTH definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_BACKGROUND

*"* local type definitions
*include zcl_abapgit_background========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_BACKGROUND definition
*"* public declarations
*include zcl_abapgit_background========cu.
CLASS Lcl_abapgit_background DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    TYPES: BEGIN OF ty_method,
             class       TYPE seoclsname,
             description TYPE string,
           END OF ty_method.

    TYPES: ty_methods TYPE SORTED TABLE OF ty_method WITH UNIQUE KEY class.

    CLASS-METHODS run
      RAISING
        Lcx_abapgit_exception .

    CLASS-METHODS list_methods
      RETURNING VALUE(rt_methods) TYPE ty_methods.

    CLASS-METHODS enqueue
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS dequeue.
*"* protected declarations
*include zcl_abapgit_background========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_background========ci.
  PRIVATE SECTION.
    CONSTANTS c_enq_type TYPE c LENGTH 12 VALUE 'BACKGROUND'.
endclass. "ZCL_ABAPGIT_BACKGROUND definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_BACKGROUND_PULL

*"* local type definitions
*include zcl_abapgit_background_pull===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_BACKGROUND_PULL definition
*"* public declarations
*include zcl_abapgit_background_pull===cu.
CLASS Lcl_abapgit_background_pull DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_background .
*"* protected declarations
*include zcl_abapgit_background_pull===co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_background_pull===ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_BACKGROUND_PULL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_CODE_INSPECTOR

*"* local type definitions
*include zcl_abapgit_code_inspector====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_CODE_INSPECTOR definition
*"* public declarations
*include zcl_abapgit_code_inspector====cu.
CLASS Lcl_abapgit_code_inspector DEFINITION
*public
  CREATE PROTECTED
  friends Lcl_abapgit_factory .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_code_inspector .

    METHODS constructor
      IMPORTING
        !iv_package TYPE devclass
      RAISING
        Lcx_abapgit_exception .

*"* protected declarations
*include zcl_abapgit_code_inspector====co.
  PROTECTED SECTION.
    DATA mv_package TYPE devclass .

    METHODS create_variant
      IMPORTING
        !iv_variant       TYPE sci_chkv
      RETURNING
        VALUE(ro_variant) TYPE REF TO cl_ci_checkvariant
      RAISING
        Lcx_abapgit_exception .
    METHODS cleanup
      IMPORTING
        !io_set TYPE REF TO cl_ci_objectset
      RAISING
        Lcx_abapgit_exception .
    METHODS skip_object
      IMPORTING
        !is_obj        TYPE scir_objs
      RETURNING
        VALUE(rv_skip) TYPE abap_bool.
*"* private declarations
*include zcl_abapgit_code_inspector====ci.
  PRIVATE SECTION.

    DATA mv_success TYPE abap_bool .
    DATA mv_summary TYPE string.

    TYPES: ty_run_mode TYPE c LENGTH 1.

    CONSTANTS:
      BEGIN OF co_run_mode,
        run_with_popup   TYPE ty_run_mode VALUE 'P',
        run_after_popup  TYPE ty_run_mode VALUE 'A',
        run_via_rfc      TYPE ty_run_mode VALUE 'R',
        run_in_batch     TYPE ty_run_mode VALUE 'B',
        run_loc_parallel TYPE ty_run_mode VALUE 'L',
        run_direct       TYPE ty_run_mode VALUE 'L',
      END OF co_run_mode .
    DATA mo_inspection TYPE REF TO cl_ci_inspection .
    DATA mv_name TYPE sci_objs .
    DATA mv_run_mode TYPE c LENGTH 1 .

    METHODS create_objectset
      RETURNING
        VALUE(ro_set) TYPE REF TO cl_ci_objectset .
    METHODS run_inspection
      IMPORTING
        !io_inspection TYPE REF TO cl_ci_inspection
      RETURNING
        VALUE(rt_list) TYPE scit_alvlist
      RAISING
        Lcx_abapgit_exception .
    METHODS create_inspection
      IMPORTING
        !io_set              TYPE REF TO cl_ci_objectset
        !io_variant          TYPE REF TO cl_ci_checkvariant
      RETURNING
        VALUE(ro_inspection) TYPE REF TO cl_ci_inspection
      RAISING
        Lcx_abapgit_exception .
    METHODS decide_run_mode
      RETURNING
        VALUE(rv_run_mode) TYPE ty_run_mode .
    METHODS filter_inspection
      CHANGING
        !ct_list TYPE scit_alvlist .
endclass. "ZCL_ABAPGIT_CODE_INSPECTOR definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_CONVERT

*"* local type definitions
*include zcl_abapgit_convert===========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_CONVERT definition
*"* public declarations
*include zcl_abapgit_convert===========cu.
CLASS Lcl_abapgit_convert DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS bitbyte_to_int
      IMPORTING
        !iv_bits      TYPE clike
      RETURNING
        VALUE(rv_int) TYPE i .
    CLASS-METHODS x_to_bitbyte
      IMPORTING
        !iv_x             TYPE x
      RETURNING
        VALUE(rv_bitbyte) TYPE Lif_abapgit_git_definitions=>ty_bitbyte .
    CLASS-METHODS string_to_xstring_utf8
      IMPORTING
        !iv_string        TYPE string
      RETURNING
        VALUE(rv_xstring) TYPE xstring
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS xstring_to_string_utf8
      IMPORTING
        !iv_data         TYPE xsequence
        !iv_length       TYPE i OPTIONAL
      RETURNING
        VALUE(rv_string) TYPE string
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS string_to_xstring_utf8_bom
      IMPORTING
        !iv_string        TYPE string
      RETURNING
        VALUE(rv_xstring) TYPE xstring
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS xstring_to_string_utf8_bom
      IMPORTING
        !iv_xstring      TYPE xstring
      RETURNING
        VALUE(rv_string) TYPE string
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS xstring_to_int
      IMPORTING
        !iv_xstring TYPE xstring
      RETURNING
        VALUE(rv_i) TYPE i
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS int_to_xstring4
      IMPORTING
        !iv_i             TYPE i
      RETURNING
        VALUE(rv_xstring) TYPE xstring .
    CLASS-METHODS split_string
      IMPORTING
        !iv_string      TYPE string
      RETURNING
        VALUE(rt_lines) TYPE string_table .
    CLASS-METHODS conversion_exit_isola_output
      IMPORTING
        !iv_spras       TYPE spras
      RETURNING
        VALUE(rv_spras) TYPE laiso .
    CLASS-METHODS string_to_xstring
      IMPORTING
        !iv_str        TYPE string
      RETURNING
        VALUE(rv_xstr) TYPE xstring
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS string_to_tab
      IMPORTING
        !iv_str  TYPE string
      EXPORTING
        !ev_size TYPE i
        !et_tab  TYPE STANDARD TABLE .
    CLASS-METHODS base64_to_xstring
      IMPORTING
        !iv_base64     TYPE string
      RETURNING
        VALUE(rv_xstr) TYPE xstring .
    CLASS-METHODS xstring_to_bintab
      IMPORTING
        !iv_xstr   TYPE xstring
      EXPORTING
        !ev_size   TYPE i
        !et_bintab TYPE STANDARD TABLE .

    CLASS-METHODS language_sap1_to_sap2
      IMPORTING
        im_lang_sap1        TYPE sy-langu
      RETURNING
        VALUE(re_lang_sap2) TYPE string
      EXCEPTIONS
        no_assignment.

    CLASS-METHODS language_sap2_to_sap1
      IMPORTING
        im_lang_sap2        TYPE laiso
      RETURNING
        VALUE(re_lang_sap1) TYPE sy-langu
      EXCEPTIONS
        no_assignment.

*"* protected declarations
*include zcl_abapgit_convert===========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_convert===========ci.
  PRIVATE SECTION.
    CLASS-METHODS xstring_remove_bom
      IMPORTING
        iv_xstr        TYPE xsequence
      RETURNING
        VALUE(rv_xstr) TYPE xstring.
endclass. "ZCL_ABAPGIT_CONVERT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_DATA_FACTORY

*"* local type definitions
*include zcl_abapgit_data_factory======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_DATA_FACTORY definition
*"* public declarations
*include zcl_abapgit_data_factory======cu.
CLASS Lcl_abapgit_data_factory DEFINITION
*public
  CREATE PUBLIC
  friends Lcl_abapgit_data_injector .

  PUBLIC SECTION.

    CLASS-METHODS get_supporter
      RETURNING
        VALUE(ri_supporter) TYPE REF TO Lif_abapgit_data_supporter .
    CLASS-METHODS get_serializer
      RETURNING
        VALUE(ri_serializer) TYPE REF TO Lif_abapgit_data_serializer .
    CLASS-METHODS get_deserializer
      RETURNING
        VALUE(ri_deserializer) TYPE REF TO Lif_abapgit_data_deserializer .
    CLASS-METHODS get_config
      RETURNING
        VALUE(ri_config) TYPE REF TO Lif_abapgit_data_config .
*"* protected declarations
*include zcl_abapgit_data_factory======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_data_factory======ci.
  PRIVATE SECTION.

    CLASS-DATA gi_supporter TYPE REF TO Lif_abapgit_data_supporter .
    CLASS-DATA gi_serializer TYPE REF TO Lif_abapgit_data_serializer .
    CLASS-DATA gi_deserializer TYPE REF TO Lif_abapgit_data_deserializer .
endclass. "ZCL_ABAPGIT_DATA_FACTORY definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_DEFAULT_TRANSPORT

*"* local type definitions
*include zcl_abapgit_default_transport=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_DEFAULT_TRANSPORT definition
*"* public declarations
*include zcl_abapgit_default_transport=cu.
CLASS Lcl_abapgit_default_transport DEFINITION
*public
  CREATE PRIVATE .

  PUBLIC SECTION.
    CLASS-METHODS:
      get_instance
        RETURNING
          VALUE(ro_instance) TYPE REF TO Lcl_abapgit_default_transport
        RAISING
          Lcx_abapgit_exception.

    METHODS:
      constructor
        RAISING
          Lcx_abapgit_exception,

      set
        IMPORTING
          iv_transport TYPE trkorr
        RAISING
          Lcx_abapgit_exception,

      reset
        RAISING
          Lcx_abapgit_exception,
      get
        RETURNING
          VALUE(rs_default_task) TYPE e070use
        RAISING
          Lcx_abapgit_exception .


*"* protected declarations
*include zcl_abapgit_default_transport=co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_default_transport=ci.
  PRIVATE SECTION.

    CLASS-DATA go_instance TYPE REF TO Lcl_abapgit_default_transport .
    DATA mv_is_set_by_abapgit TYPE abap_bool .
    DATA ms_save TYPE e070use .

    METHODS store
      RAISING
        Lcx_abapgit_exception .
    METHODS restore
      RAISING
        Lcx_abapgit_exception .
    METHODS set_internal
      IMPORTING
        !iv_transport TYPE trkorr
      RAISING
        Lcx_abapgit_exception .
    METHODS clear
      IMPORTING
        !is_default_task TYPE e070use
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_DEFAULT_TRANSPORT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ECATT_CONFIG_DOWNL

*"* local type definitions
*include zcl_abapgit_ecatt_config_downlccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ECATT_CONFIG_DOWNL definition
*"* public declarations
*include zcl_abapgit_ecatt_config_downlcu.
CLASS Lcl_abapgit_ecatt_config_downl DEFINITION
*public
  INHERITING FROM cl_apl_ecatt_config_download
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_ecatt_download.

    METHODS:
      download REDEFINITION.

*"* protected declarations
*include zcl_abapgit_ecatt_config_downlco.
  PROTECTED SECTION.
    METHODS:
      download_data REDEFINITION.

*"* private declarations
*include zcl_abapgit_ecatt_config_downlci.
  PRIVATE SECTION.
    DATA:
      mv_xml_stream TYPE xstring.

endclass. "ZCL_ABAPGIT_ECATT_CONFIG_DOWNL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ECATT_CONFIG_UPL

*"* local type definitions
*include zcl_abapgit_ecatt_config_upl==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ECATT_CONFIG_UPL definition
*"* public declarations
*include zcl_abapgit_ecatt_config_upl==cu.
CLASS Lcl_abapgit_ecatt_config_upl DEFINITION
*public
  INHERITING FROM cl_apl_ecatt_config_upload
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_ecatt_upload.

*"* protected declarations
*include zcl_abapgit_ecatt_config_upl==co.
  PROTECTED SECTION.
    METHODS:
      upload_data_from_stream REDEFINITION.

*"* private declarations
*include zcl_abapgit_ecatt_config_upl==ci.
  PRIVATE SECTION.
    DATA: mv_external_xml TYPE xstring.

endclass. "ZCL_ABAPGIT_ECATT_CONFIG_UPL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ECATT_DATA_DOWNL

*"* local type definitions
*include zcl_abapgit_ecatt_data_downl==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ECATT_DATA_DOWNL definition
*"* public declarations
*include zcl_abapgit_ecatt_data_downl==cu.
CLASS Lcl_abapgit_ecatt_data_downl DEFINITION
*public
  INHERITING FROM cl_apl_ecatt_data_download
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_ecatt_download.

    METHODS:
      download
        REDEFINITION.

*"* protected declarations
*include zcl_abapgit_ecatt_data_downl==co.
  PROTECTED SECTION.
    METHODS:
      download_data REDEFINITION.

*"* private declarations
*include zcl_abapgit_ecatt_data_downl==ci.
  PRIVATE SECTION.
    DATA:
      mv_xml_stream TYPE xstring.

endclass. "ZCL_ABAPGIT_ECATT_DATA_DOWNL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ECATT_DATA_UPLOAD

*"* local type definitions
*include zcl_abapgit_ecatt_data_upload=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ECATT_DATA_UPLOAD definition
*"* public declarations
*include zcl_abapgit_ecatt_data_upload=cu.
CLASS Lcl_abapgit_ecatt_data_upload DEFINITION
*public
  INHERITING FROM cl_apl_ecatt_data_upload
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_ecatt_upload.

    METHODS upload REDEFINITION.

*"* protected declarations
*include zcl_abapgit_ecatt_data_upload=co.
  PROTECTED SECTION.
    METHODS:
      upload_data_from_stream REDEFINITION.

*"* private declarations
*include zcl_abapgit_ecatt_data_upload=ci.
  PRIVATE SECTION.
    DATA: mv_external_xml TYPE xstring,
          BEGIN OF ms_current_object,
            s_obj_type TYPE etobj_type,
            d_obj_name TYPE etobjdname,
            d_obj_ver  TYPE etobjdver,
          END OF ms_current_object,
          mx_ecatt_apl TYPE REF TO cx_ecatt_apl.
    METHODS on_ev_object_saved FOR EVENT ev_object_saved OF cl_apl_ecatt_object IMPORTING ex_ecatt_object.
endclass. "ZCL_ABAPGIT_ECATT_DATA_UPLOAD definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ECATT_HELPER

*"* local type definitions
*include zcl_abapgit_ecatt_helper======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ECATT_HELPER definition
*"* public declarations
*include zcl_abapgit_ecatt_helper======cu.
CLASS Lcl_abapgit_ecatt_helper DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.
    CLASS-METHODS:
      build_xml_of_object
        IMPORTING
          iv_object_name       TYPE etobj_name
          iv_object_version    TYPE etobj_ver
          iv_object_type       TYPE etobj_type
          io_download          TYPE REF TO cl_apl_ecatt_download
        RETURNING
          VALUE(rv_xml_stream) TYPE xstring
        RAISING
          Lcx_abapgit_exception,

      download_data
        IMPORTING
          ii_template_over_all TYPE REF TO if_ixml_document
        RETURNING
          VALUE(rv_xml_stream) TYPE xstring,

      upload_data_from_stream
        IMPORTING
          iv_xml_stream               TYPE xstring
        RETURNING
          VALUE(ri_template_over_all) TYPE REF TO if_ixml_document
        RAISING
          cx_ecatt_apl.

*"* protected declarations
*include zcl_abapgit_ecatt_helper======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_ecatt_helper======ci.
  PRIVATE SECTION.
    CONSTANTS:
      c_xml TYPE i VALUE 1. " downport of if_apl_ecatt_xml=>co_xml

endclass. "ZCL_ABAPGIT_ECATT_HELPER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ECATT_SCRIPT_DOWNL

*"* local type definitions
*include zcl_abapgit_ecatt_script_downlccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ECATT_SCRIPT_DOWNL definition
*"* public declarations
*include zcl_abapgit_ecatt_script_downlcu.
CLASS Lcl_abapgit_ecatt_script_downl DEFINITION
*public
  INHERITING FROM cl_apl_ecatt_script_download
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_ecatt_download.

    METHODS:
      download REDEFINITION.

*"* protected declarations
*include zcl_abapgit_ecatt_script_downlco.
  PROTECTED SECTION.
    METHODS:
      download_data REDEFINITION.

*"* private declarations
*include zcl_abapgit_ecatt_script_downlci.
  PRIVATE SECTION.
    DATA:
      mv_xml_stream  TYPE xstring,
      mi_script_node TYPE REF TO if_ixml_element.

    METHODS:
      set_script_to_template
        RAISING
          cx_ecatt_apl,

      set_control_data_for_tcd
        IMPORTING
          is_param  TYPE etpar_gui
          io_params TYPE REF TO cl_apl_ecatt_params
        RAISING
          cx_ecatt_apl,

      escape_control_data
        IMPORTING
          ii_element TYPE REF TO if_ixml_element
          iv_tabname TYPE string
          iv_node    TYPE string
        RAISING
          cx_ecatt_apl,

      set_blob_to_template
        RAISING
          cx_ecatt_apl,

      set_artmp_to_template
        RAISING
          cx_ecatt_apl.

endclass. "ZCL_ABAPGIT_ECATT_SCRIPT_DOWNL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ECATT_SCRIPT_UPL

*"* local type definitions
*include zcl_abapgit_ecatt_script_upl==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ECATT_SCRIPT_UPL definition
*"* public declarations
*include zcl_abapgit_ecatt_script_upl==cu.
CLASS Lcl_abapgit_ecatt_script_upl DEFINITION
*public
  INHERITING FROM cl_apl_ecatt_script_upload
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_ecatt_upload.

*"* protected declarations
*include zcl_abapgit_ecatt_script_upl==co.
  PROTECTED SECTION.
    METHODS:
      upload_data_from_stream REDEFINITION.

*"* private declarations
*include zcl_abapgit_ecatt_script_upl==ci.
  PRIVATE SECTION.
    DATA: mv_external_xml TYPE xstring.

endclass. "ZCL_ABAPGIT_ECATT_SCRIPT_UPL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ECATT_SP_DOWNLOAD

*"* local type definitions
*include zcl_abapgit_ecatt_sp_download=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ECATT_SP_DOWNLOAD definition
*"* public declarations
*include zcl_abapgit_ecatt_sp_download=cu.
CLASS Lcl_abapgit_ecatt_sp_download DEFINITION
*public
  INHERITING FROM cl_apl_ecatt_download
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_ecatt_download.

    METHODS:
      download REDEFINITION.

*"* protected declarations
*include zcl_abapgit_ecatt_sp_download=co.
  PROTECTED SECTION.
    METHODS:
      download_data REDEFINITION.

*"* private declarations
*include zcl_abapgit_ecatt_sp_download=ci.
  PRIVATE SECTION.
    DATA:
      mv_xml_stream TYPE xstring.

    METHODS:
      set_sp_data_to_template.

endclass. "ZCL_ABAPGIT_ECATT_SP_DOWNLOAD definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ECATT_SP_UPLOAD

*"* local type definitions
*include zcl_abapgit_ecatt_sp_upload===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ECATT_SP_UPLOAD definition
*"* public declarations
*include zcl_abapgit_ecatt_sp_upload===cu.
CLASS Lcl_abapgit_ecatt_sp_upload DEFINITION
*public
  INHERITING FROM cl_apl_ecatt_upload
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_ecatt_upload.

    METHODS:
      upload
        REDEFINITION.

*"* protected declarations
*include zcl_abapgit_ecatt_sp_upload===co.
  PROTECTED SECTION.
    METHODS:
      upload_data_from_stream REDEFINITION,

      get_ecatt_sp
        RAISING
          cx_ecatt_apl .

*"* private declarations
*include zcl_abapgit_ecatt_sp_upload===ci.
  PRIVATE SECTION.
    DATA: mv_external_xml TYPE xstring.

endclass. "ZCL_ABAPGIT_ECATT_SP_UPLOAD definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ECATT_SYSTEM_DOWNL

*"* local type definitions
*include zcl_abapgit_ecatt_system_downlccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ECATT_SYSTEM_DOWNL definition
*"* public declarations
*include zcl_abapgit_ecatt_system_downlcu.
CLASS Lcl_abapgit_ecatt_system_downl DEFINITION
*public
  INHERITING FROM cl_apl_ecatt_systems_download
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_ecatt_download.

    METHODS:
      download REDEFINITION.

*"* protected declarations
*include zcl_abapgit_ecatt_system_downlco.
  PROTECTED SECTION.
    METHODS:
      download_data REDEFINITION.

*"* private declarations
*include zcl_abapgit_ecatt_system_downlci.
  PRIVATE SECTION.
    DATA:
      mv_xml_stream TYPE xstring.

    METHODS:
      set_systems_data_to_template.

endclass. "ZCL_ABAPGIT_ECATT_SYSTEM_DOWNL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ECATT_SYSTEM_UPL

*"* local type definitions
*include zcl_abapgit_ecatt_system_upl==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ECATT_SYSTEM_UPL definition
*"* public declarations
*include zcl_abapgit_ecatt_system_upl==cu.
CLASS Lcl_abapgit_ecatt_system_upl DEFINITION
*public
  INHERITING FROM cl_apl_ecatt_systems_upload
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_ecatt_upload.

*"* protected declarations
*include zcl_abapgit_ecatt_system_upl==co.
  PROTECTED SECTION.
    METHODS:
      upload_data_from_stream REDEFINITION.

*"* private declarations
*include zcl_abapgit_ecatt_system_upl==ci.
  PRIVATE SECTION.
    DATA: mv_external_xml TYPE xstring.

endclass. "ZCL_ABAPGIT_ECATT_SYSTEM_UPL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ECATT_VAL_OBJ_DOWN

*"* local type definitions
*include zcl_abapgit_ecatt_val_obj_downccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ECATT_VAL_OBJ_DOWN definition
*"* public declarations
*include zcl_abapgit_ecatt_val_obj_downcu.
CLASS Lcl_abapgit_ecatt_val_obj_down DEFINITION
*public
  INHERITING FROM cl_apl_ecatt_download
  CREATE PUBLIC.

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_ecatt_download.

    METHODS:
      download REDEFINITION.

*"* protected declarations
*include zcl_abapgit_ecatt_val_obj_downco.
  PROTECTED SECTION.
    DATA:
      mi_objects_node TYPE REF TO if_ixml_element.

    METHODS:
      download_data REDEFINITION.

*"* private declarations
*include zcl_abapgit_ecatt_val_obj_downci.
  PRIVATE SECTION.
    DATA:
      mv_xml_stream TYPE xstring.

    METHODS:
      set_ecatt_impl_detail,
      set_ecatt_flags,
      set_business_msgs.

endclass. "ZCL_ABAPGIT_ECATT_VAL_OBJ_DOWN definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ECATT_VAL_OBJ_UPL

*"* local type definitions
*include zcl_abapgit_ecatt_val_obj_upl=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ECATT_VAL_OBJ_UPL definition
*"* public declarations
*include zcl_abapgit_ecatt_val_obj_upl=cu.
CLASS Lcl_abapgit_ecatt_val_obj_upl DEFINITION
*public
  INHERITING FROM cl_apl_ecatt_upload
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_ecatt_upload.

    METHODS:
      upload REDEFINITION.

*"* protected declarations
*include zcl_abapgit_ecatt_val_obj_upl=co.
  PROTECTED SECTION.
    METHODS:
      upload_data_from_stream REDEFINITION,

      get_business_msgs_from_dom
        RAISING
          cx_ecatt_apl,

      get_impl_detail_from_dom
        RAISING
          cx_ecatt_apl,

      get_vo_flags_from_dom
        RAISING
          cx_ecatt_apl.

*"* private declarations
*include zcl_abapgit_ecatt_val_obj_upl=ci.
  PRIVATE SECTION.
    DATA:
      mv_external_xml TYPE xstring.

endclass. "ZCL_ABAPGIT_ECATT_VAL_OBJ_UPL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ENVIRONMENT

*"* local type definitions
*include zcl_abapgit_environment=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ENVIRONMENT definition
*"* public declarations
*include zcl_abapgit_environment=======cu.
CLASS Lcl_abapgit_environment DEFINITION
*public
  FINAL
  CREATE PRIVATE
  friends Lcl_abapgit_factory


.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_environment .
*"* protected declarations
*include zcl_abapgit_environment=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_environment=======ci.
  PRIVATE SECTION.

    DATA mv_cloud TYPE abap_bool VALUE abap_undefined ##NO_TEXT.
    DATA mv_is_merged TYPE abap_bool VALUE abap_undefined ##NO_TEXT.
    DATA mv_modifiable TYPE abap_bool VALUE abap_undefined ##NO_TEXT.

    METHODS is_system_changes_allowed
      RETURNING
        VALUE(rv_result) TYPE abap_bool .
endclass. "ZCL_ABAPGIT_ENVIRONMENT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_EXCEPTION_VIEWER

*"* local type definitions
*include zcl_abapgit_exception_viewer==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_EXCEPTION_VIEWER definition
*"* public declarations
*include zcl_abapgit_exception_viewer==cu.
CLASS Lcl_abapgit_exception_viewer DEFINITION
*public
  CREATE PUBLIC.


  PUBLIC SECTION.
    METHODS:
      constructor
        IMPORTING
          ix_error TYPE REF TO Lcx_abapgit_exception,

      goto_source
        RAISING
          Lcx_abapgit_exception,

      goto_message
        RAISING
          Lcx_abapgit_exception,

      show_callstack
        RAISING
          Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_exception_viewer==co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_exception_viewer==ci.
  PRIVATE SECTION.
    DATA:
      mx_error     TYPE REF TO Lcx_abapgit_exception,
      mt_callstack TYPE abap_callstack.

    METHODS:
      build_top_of_list
        IMPORTING
          is_top_of_stack TYPE abap_callstack_line
        RETURNING
          VALUE(ro_form)  TYPE REF TO cl_salv_form_element,

      add_row
        IMPORTING
          io_grid  TYPE REF TO cl_salv_form_layout_grid
          iv_col_1 TYPE csequence
          iv_col_2 TYPE csequence,

      on_double_click FOR EVENT double_click OF cl_salv_events_table
        IMPORTING
          row column,

      set_text
        IMPORTING
          io_columns TYPE REF TO cl_salv_columns_table
          iv_column  TYPE lvc_fname
          iv_text    TYPE string
        RAISING
          cx_static_check,

      goto_source_code
        IMPORTING
          is_callstack TYPE abap_callstack_line
        RAISING
          Lcx_abapgit_exception,

      extract_classname
        IMPORTING
          iv_mainprogram      TYPE abap_callstack_line-mainprogram
        RETURNING
          VALUE(rv_classname) TYPE tadir-obj_name,

      get_top_of_callstack
        RETURNING
          VALUE(rs_top_of_callstack) TYPE abap_callstack_line
        RAISING
          Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_EXCEPTION_VIEWER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_FACTORY

*"* local type definitions
*include zcl_abapgit_factory===========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_FACTORY definition
*"* public declarations
*include zcl_abapgit_factory===========cu.
CLASS Lcl_abapgit_factory DEFINITION
*public
  CREATE PRIVATE
  friends Lcl_abapgit_injector .

  PUBLIC SECTION.

    CLASS-METHODS get_tadir
      RETURNING
        VALUE(ri_tadir) TYPE REF TO Lif_abapgit_tadir .
    CLASS-METHODS get_sap_package
      IMPORTING
        !iv_package           TYPE devclass
      RETURNING
        VALUE(ri_sap_package) TYPE REF TO Lif_abapgit_sap_package .
    CLASS-METHODS get_code_inspector
      IMPORTING
        !iv_package              TYPE devclass
      RETURNING
        VALUE(ri_code_inspector) TYPE REF TO Lif_abapgit_code_inspector
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS get_stage_logic
      RETURNING
        VALUE(ri_logic) TYPE REF TO Lif_abapgit_stage_logic .
    CLASS-METHODS get_cts_api
      RETURNING
        VALUE(ri_cts_api) TYPE REF TO Lif_abapgit_cts_api .
    CLASS-METHODS get_environment
      RETURNING
        VALUE(ri_environment) TYPE REF TO Lif_abapgit_environment .
    CLASS-METHODS get_longtexts
      RETURNING
        VALUE(ri_longtexts) TYPE REF TO Lif_abapgit_longtexts .
    CLASS-METHODS get_http_agent
      RETURNING
        VALUE(ri_http_agent) TYPE REF TO Lif_abapgit_http_agent .
    CLASS-METHODS get_lxe_texts
      RETURNING
        VALUE(ri_lxe_texts) TYPE REF TO Lif_abapgit_lxe_texts .
    CLASS-METHODS get_sap_namespace
      RETURNING
        VALUE(ri_namespace) TYPE REF TO Lif_abapgit_sap_namespace .
    CLASS-METHODS get_sap_report
      RETURNING
        VALUE(ri_report) TYPE REF TO Lif_abapgit_sap_report.
    CLASS-METHODS get_function_module
      RETURNING
        VALUE(ri_function_module) TYPE REF TO Lif_abapgit_function_module.
*"* protected declarations
*include zcl_abapgit_factory===========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_factory===========ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_sap_package,
        package  TYPE devclass,
        instance TYPE REF TO Lif_abapgit_sap_package,
      END OF ty_sap_package .
    TYPES:
      ty_sap_packages TYPE HASHED TABLE OF ty_sap_package
                                    WITH UNIQUE KEY package .
    TYPES:
      BEGIN OF ty_code_inspector_pack,
        package  TYPE devclass,
        instance TYPE REF TO Lif_abapgit_code_inspector,
      END OF ty_code_inspector_pack .
    TYPES:
      ty_code_inspector_packs TYPE HASHED TABLE OF ty_code_inspector_pack
                                       WITH UNIQUE KEY package .

    CLASS-DATA gi_tadir TYPE REF TO Lif_abapgit_tadir .
    CLASS-DATA gt_sap_package TYPE ty_sap_packages .
    CLASS-DATA gt_code_inspector TYPE ty_code_inspector_packs .
    CLASS-DATA gi_stage_logic TYPE REF TO Lif_abapgit_stage_logic .
    CLASS-DATA gi_cts_api TYPE REF TO Lif_abapgit_cts_api .
    CLASS-DATA gi_environment TYPE REF TO Lif_abapgit_environment .
    CLASS-DATA gi_longtext TYPE REF TO Lif_abapgit_longtexts .
    CLASS-DATA gi_http_agent TYPE REF TO Lif_abapgit_http_agent .
    CLASS-DATA gi_lxe_texts TYPE REF TO Lif_abapgit_lxe_texts .
    CLASS-DATA gi_sap_namespace TYPE REF TO Lif_abapgit_sap_namespace .
    CLASS-DATA gi_sap_report TYPE REF TO Lif_abapgit_sap_report.
    CLASS-DATA gi_function_module TYPE REF TO Lif_abapgit_function_module.
endclass. "ZCL_ABAPGIT_FACTORY definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_FIELD_RULES

*"* local type definitions
*include zcl_abapgit_field_rules=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_FIELD_RULES definition
*"* public declarations
*include zcl_abapgit_field_rules=======cu.
CLASS Lcl_abapgit_field_rules DEFINITION
*public
  FINAL
  CREATE PRIVATE .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_field_rules.
    CLASS-METHODS create
      RETURNING
        VALUE(ro_result) TYPE REF TO Lif_abapgit_field_rules.
*"* protected declarations
*include zcl_abapgit_field_rules=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_field_rules=======ci.
  PRIVATE SECTION.
    TYPES:
      BEGIN OF ty_item,
        tabname   TYPE tabname,
        fieldname TYPE fieldname,
        fill_rule TYPE Lif_abapgit_field_rules=>ty_fill_rule,
      END OF ty_item,
      ty_items TYPE SORTED TABLE OF ty_item WITH UNIQUE KEY tabname fieldname.

    DATA mt_item TYPE ty_items.

    METHODS fill_value
      IMPORTING
        iv_rule    TYPE Lif_abapgit_field_rules=>ty_fill_rule
        iv_package TYPE devclass
      CHANGING
        cv_value   TYPE any.
endclass. "ZCL_ABAPGIT_FIELD_RULES definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_FRONTEND_SERVICES

*"* local type definitions
*include zcl_abapgit_frontend_services=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_FRONTEND_SERVICES definition
*"* public declarations
*include zcl_abapgit_frontend_services=cu.
CLASS Lcl_abapgit_frontend_services DEFINITION
*public
  CREATE PRIVATE
  friends Lcl_abapgit_ui_factory.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_frontend_services.
*"* protected declarations
*include zcl_abapgit_frontend_services=co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_frontend_services=ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_FRONTEND_SERVICES definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_FUNCTION_MODULE

*"* local type definitions
*include zcl_abapgit_function_module===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_FUNCTION_MODULE definition
*"* public declarations
*include zcl_abapgit_function_module===cu.
CLASS Lcl_abapgit_function_module DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_function_module.

*"* protected declarations
*include zcl_abapgit_function_module===co.
protected section.
*"* private declarations
*include zcl_abapgit_function_module===ci.
private section.
endclass. "ZCL_ABAPGIT_FUNCTION_MODULE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GIT_BRANCH_LIST

*"* local type definitions
*include zcl_abapgit_git_branch_list===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GIT_BRANCH_LIST definition
*"* public declarations
*include zcl_abapgit_git_branch_list===cu.
CLASS Lcl_abapgit_git_branch_list DEFINITION
*public
  CREATE PUBLIC


.

  PUBLIC SECTION.
    METHODS constructor
      IMPORTING
        !iv_data TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS find_by_name
      IMPORTING
        !iv_branch_name  TYPE clike
      RETURNING
        VALUE(rs_branch) TYPE Lif_abapgit_git_definitions=>ty_git_branch
      RAISING
        Lcx_abapgit_exception .
    METHODS get_head_symref
      RETURNING
        VALUE(rv_head_symref) TYPE string .
    METHODS get_all
      RETURNING
        VALUE(rt_branches) TYPE Lif_abapgit_git_definitions=>ty_git_branch_list_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS get_branches_only
      RETURNING
        VALUE(rt_branches) TYPE Lif_abapgit_git_definitions=>ty_git_branch_list_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS get_tags_only             " For potential future use
      RETURNING
        VALUE(rt_tags) TYPE Lif_abapgit_git_definitions=>ty_git_branch_list_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS get_display_name
      IMPORTING
        !iv_branch_name        TYPE clike
      RETURNING
        VALUE(rv_display_name) TYPE string .
    CLASS-METHODS get_type
      IMPORTING
        !iv_branch_name       TYPE clike
        !it_result            TYPE string_table OPTIONAL
        !iv_current_row_index TYPE sy-tabix OPTIONAL
      RETURNING
        VALUE(rv_type)        TYPE Lif_abapgit_git_definitions=>ty_git_branch_type .
    CLASS-METHODS complete_heads_branch_name
      IMPORTING
        !iv_branch_name TYPE clike
      RETURNING
        VALUE(rv_name)  TYPE string .
    CLASS-METHODS normalize_branch_name
      IMPORTING
        !iv_branch_name TYPE clike
      RETURNING
        VALUE(rv_name)  TYPE string .
*"* protected declarations
*include zcl_abapgit_git_branch_list===co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_git_branch_list===ci.
  PRIVATE SECTION.

    DATA mt_branches TYPE Lif_abapgit_git_definitions=>ty_git_branch_list_tt .
    DATA mv_head_symref TYPE string .

    CLASS-METHODS skip_first_pkt
      IMPORTING
        !iv_data       TYPE string
      RETURNING
        VALUE(rv_data) TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS find_tag_by_name
      IMPORTING
        !iv_branch_name  TYPE string
      RETURNING
        VALUE(rs_branch) TYPE Lif_abapgit_git_definitions=>ty_git_branch
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS parse_branch_list
      IMPORTING
        !iv_data        TYPE string
      EXPORTING
        !et_list        TYPE Lif_abapgit_git_definitions=>ty_git_branch_list_tt
        !ev_head_symref TYPE string
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS parse_head_params
      IMPORTING
        !iv_data              TYPE string
      RETURNING
        VALUE(rv_head_symref) TYPE string .
endclass. "ZCL_ABAPGIT_GIT_BRANCH_LIST definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GIT_FACTORY

*"* local type definitions
*include zcl_abapgit_git_factory=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GIT_FACTORY definition
*"* public declarations
*include zcl_abapgit_git_factory=======cu.
CLASS Lcl_abapgit_git_factory DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    CLASS-METHODS
      get_v2_porcelain
        RETURNING VALUE(ri_v2) TYPE REF TO Lif_abapgit_gitv2_porcelain.
*"* protected declarations
*include zcl_abapgit_git_factory=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_git_factory=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_GIT_FACTORY definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GIT_TIME

*"* local type definitions
*include zcl_abapgit_git_time==========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GIT_TIME definition
*"* public declarations
*include zcl_abapgit_git_time==========cu.
CLASS Lcl_abapgit_git_time DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    TYPES:
      ty_unixtime TYPE c LENGTH 16 .

    CLASS-METHODS get_unix
      RETURNING
        VALUE(rv_time) TYPE ty_unixtime
      RAISING
        Lcx_abapgit_exception .

    CLASS-METHODS get_one_year_ago
      RETURNING
        VALUE(rv_time) TYPE i
      RAISING
        Lcx_abapgit_exception .

    CLASS-METHODS get_utc
      IMPORTING
        !iv_unix TYPE ty_unixtime
      EXPORTING
        !ev_date TYPE sy-datum
        !ev_time TYPE sy-uzeit .
*"* protected declarations
*include zcl_abapgit_git_time==========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_git_time==========ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_GIT_TIME definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GIT_UTILS

*"* local type definitions
*include zcl_abapgit_git_utils=========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GIT_UTILS definition
*"* public declarations
*include zcl_abapgit_git_utils=========cu.
CLASS Lcl_abapgit_git_utils DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    TYPES:
      ty_null TYPE c LENGTH 1 .

    CLASS-METHODS get_null
      RETURNING
        VALUE(rv_c) TYPE ty_null .
    CLASS-METHODS pkt_string
      IMPORTING
        !iv_string    TYPE string
      RETURNING
        VALUE(rv_pkt) TYPE string
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS length_utf8_hex
      IMPORTING
        !iv_data      TYPE xstring
      RETURNING
        VALUE(rv_len) TYPE i
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_git_utils=========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_git_utils=========ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_GIT_UTILS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_ASSET_MANAGER

*"* local type definitions
*include zcl_abapgit_gui_asset_manager=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_ASSET_MANAGER definition
*"* public declarations
*include zcl_abapgit_gui_asset_manager=cu.
CLASS Lcl_abapgit_gui_asset_manager DEFINITION  FINAL CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_asset_manager.

    CLASS-METHODS create
      RETURNING
        VALUE(ri_asset_manager) TYPE REF TO Lif_abapgit_gui_asset_manager.

*"* protected declarations
*include zcl_abapgit_gui_asset_manager=co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_asset_manager=ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_asset_entry.
        INCLUDE TYPE Lif_abapgit_gui_asset_manager~ty_web_asset.
    TYPES: mime_name TYPE wwwdatatab-objid,
      END OF ty_asset_entry.
    TYPES:
      ty_asset_register TYPE STANDARD TABLE OF ty_asset_entry WITH KEY url.

    DATA mt_asset_register TYPE ty_asset_register.

    METHODS get_mime_asset
      IMPORTING
        iv_mime_name    TYPE c
      RETURNING
        VALUE(rv_xdata) TYPE xstring
      RAISING
        Lcx_abapgit_exception.

    METHODS load_asset
      IMPORTING
        is_asset_entry  TYPE ty_asset_entry
      RETURNING
        VALUE(rs_asset) TYPE Lif_abapgit_gui_asset_manager~ty_web_asset
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_GUI_ASSET_MANAGER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_COMPONENT

*"* local type definitions
*include zcl_abapgit_gui_component=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_COMPONENT definition
*"* public declarations
*include zcl_abapgit_gui_component=====cu.
CLASS Lcl_abapgit_gui_component DEFINITION
*public
  ABSTRACT
  CREATE PUBLIC .

  PUBLIC SECTION.

    CONSTANTS:
      BEGIN OF c_html_parts,
        scripts      TYPE string VALUE 'scripts',
        hidden_forms TYPE string VALUE 'hidden_forms',
      END OF c_html_parts.

*"* protected declarations
*include zcl_abapgit_gui_component=====co.
  PROTECTED SECTION.

    METHODS register_deferred_script
      IMPORTING
        ii_part TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception.
    METHODS gui_services
      RETURNING
        VALUE(ri_gui_services) TYPE REF TO Lif_abapgit_gui_services
      RAISING
        Lcx_abapgit_exception.
    METHODS register_handlers
      RAISING
        Lcx_abapgit_exception.

*"* private declarations
*include zcl_abapgit_gui_component=====ci.
  PRIVATE SECTION.
    DATA mi_gui_services TYPE REF TO Lif_abapgit_gui_services.

    METHODS register_event_handler
      IMPORTING
        ii_event_handler TYPE REF TO Lif_abapgit_gui_event_handler OPTIONAL
      RAISING
        Lcx_abapgit_exception.
    METHODS register_hotkeys
      IMPORTING
        ii_hotkey_provider TYPE REF TO Lif_abapgit_gui_hotkeys OPTIONAL
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_GUI_COMPONENT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_CSS_PROCESSOR

*"* local type definitions
*include zcl_abapgit_gui_css_processor=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_CSS_PROCESSOR definition
*"* public declarations
*include zcl_abapgit_gui_css_processor=cu.
CLASS Lcl_abapgit_gui_css_processor DEFINITION
*public
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    METHODS:
      constructor
        IMPORTING
          ii_asset_manager TYPE REF TO Lif_abapgit_gui_asset_manager,
      add_file
        IMPORTING
          iv_url TYPE string,
      process
        RETURNING
          VALUE(rv_result) TYPE string
        RAISING   Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_css_processor=co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_css_processor=ci.
  PRIVATE SECTION.
    TYPES:
      BEGIN OF ty_css_var,
        name  TYPE string,
        value TYPE string,
      END OF ty_css_var,
      ty_css_vars TYPE SORTED TABLE OF ty_css_var WITH UNIQUE KEY name.

    METHODS:
      get_css_vars_in_string
        IMPORTING
          iv_string           TYPE string
        RETURNING
          VALUE(rt_variables) TYPE ty_css_vars,
      resolve_var_recursively
        IMPORTING
          iv_variable_name TYPE string
        CHANGING
          ct_variables     TYPE ty_css_vars
        RAISING
          Lcx_abapgit_exception.
    DATA:
      mi_asset_manager TYPE REF TO Lif_abapgit_gui_asset_manager,
      mt_files         TYPE string_table.
endclass. "ZCL_ABAPGIT_GUI_CSS_PROCESSOR definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_HTML_PROCESSOR

*"* local type definitions
*include zcl_abapgit_gui_html_processorccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_HTML_PROCESSOR definition
*"* public declarations
*include zcl_abapgit_gui_html_processorcu.
CLASS Lcl_abapgit_gui_html_processor DEFINITION
*public
  FINAL
  CREATE PUBLIC


.

  PUBLIC SECTION.

    CONSTANTS c_css_build_name TYPE string VALUE 'css/bundle.css'.
    CONSTANTS c_preprocess_marker TYPE string VALUE `<!-- abapgit HTML preprocessor -->`.
    CONSTANTS c_comment_start TYPE string VALUE `<!--`.
    CONSTANTS c_comment_end TYPE string VALUE `-->`.

    INTERFACES Lif_abapgit_gui_html_processor .

    METHODS constructor
      IMPORTING
        ii_asset_man TYPE REF TO Lif_abapgit_gui_asset_manager.

    METHODS preserve_css
      IMPORTING
        !iv_css_url TYPE string .

*"* protected declarations
*include zcl_abapgit_gui_html_processorco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_html_processorci.
  PRIVATE SECTION.
    DATA mt_preserve_css TYPE string_table.
    DATA mi_asset_man TYPE REF TO Lif_abapgit_gui_asset_manager.

    METHODS patch_html
      IMPORTING
        iv_html TYPE string
      EXPORTING
        ev_html TYPE string
        et_css_urls TYPE string_table
      RAISING
        Lcx_abapgit_exception.

    METHODS is_preserved
      IMPORTING
        !iv_css_url TYPE string
      RETURNING
        VALUE(rv_yes) TYPE abap_bool.

    METHODS find_head_offset
      IMPORTING
        iv_html            TYPE string
      RETURNING
        VALUE(rv_head_end) TYPE i
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_GUI_HTML_PROCESSOR definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_IN_PAGE_MODAL

*"* local type definitions
*include zcl_abapgit_gui_in_page_modal=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_IN_PAGE_MODAL definition
*"* public declarations
*include zcl_abapgit_gui_in_page_modal=cu.
CLASS Lcl_abapgit_gui_in_page_modal DEFINITION
*public
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_renderable.

    CLASS-METHODS create
      IMPORTING
        !ii_child      TYPE REF TO Lif_abapgit_gui_renderable
        !iv_width      TYPE i OPTIONAL
        !iv_height     TYPE i OPTIONAL
      RETURNING
        VALUE(ro_wrap) TYPE REF TO Lcl_abapgit_gui_in_page_modal
      RAISING
        Lcx_abapgit_exception .
    METHODS constructor
      IMPORTING
        !ii_child  TYPE REF TO Lif_abapgit_gui_renderable
        !iv_width  TYPE i OPTIONAL
        !iv_height TYPE i OPTIONAL.

*"* protected declarations
*include zcl_abapgit_gui_in_page_modal=co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_in_page_modal=ci.
  PRIVATE SECTION.

    DATA mi_child TYPE REF TO Lif_abapgit_gui_renderable.

    DATA:
      BEGIN OF ms_attrs,
        width  TYPE i,
        height TYPE i,
      END OF ms_attrs.

endclass. "ZCL_ABAPGIT_GUI_IN_PAGE_MODAL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE

*"* local type definitions
*include zcl_abapgit_gui_page==========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE definition
*"* public declarations
*include zcl_abapgit_gui_page==========cu.
CLASS Lcl_abapgit_gui_page DEFINITION  ABSTRACT
  INHERITING FROM Lcl_abapgit_gui_component
  CREATE PUBLIC.

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_gui_modal,
      Lif_abapgit_gui_renderable,
      Lif_abapgit_gui_event_handler,
      Lif_abapgit_gui_error_handler.

    TYPES:
      BEGIN OF ty_control,
        page_layout         TYPE string,
        page_title          TYPE string,
        page_menu           TYPE REF TO Lcl_abapgit_html_toolbar,
        page_menu_provider  TYPE REF TO Lif_abapgit_gui_menu_provider,
        page_title_provider TYPE REF TO Lif_abapgit_gui_page_title,
        extra_css_url       TYPE string,
        extra_js_url        TYPE string,
        show_as_modal       TYPE abap_bool,
      END OF  ty_control .

    METHODS constructor RAISING Lcx_abapgit_exception.

    CONSTANTS:
      BEGIN OF c_page_layout,
        centered   TYPE string VALUE `centered`,
        full_width TYPE string VALUE `full_width`,
      END OF c_page_layout.

*"* protected declarations
*include zcl_abapgit_gui_page==========co.
  PROTECTED SECTION.

    DATA ms_control TYPE ty_control .

    METHODS render_content " TODO refactor, render child directly
      ABSTRACT
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_gui_page==========ci.
  PRIVATE SECTION.

    DATA mo_settings TYPE REF TO Lcl_abapgit_settings .
    DATA mx_error TYPE REF TO Lcx_abapgit_exception .
    DATA mo_exception_viewer TYPE REF TO Lcl_abapgit_exception_viewer .

    METHODS render_deferred_parts
      IMPORTING
        !ii_html          TYPE REF TO Lif_abapgit_html
        !iv_part_category TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS html_head
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS header_stylesheet_links
      IMPORTING
        ii_html TYPE REF TO Lif_abapgit_html .
    METHODS header_script_links
      IMPORTING
        ii_html TYPE REF TO Lif_abapgit_html .
    METHODS title
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS footer
      IMPORTING
        !iv_time       TYPE string
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_link_hints
      IMPORTING
        !ii_html TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_browser_control_warning
      IMPORTING
        !ii_html TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_command_palettes
      IMPORTING
        !ii_html TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_hotkey_overview
      RETURNING
        VALUE(ro_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_error_message_box
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS scripts
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS get_version_details
      RETURNING
        VALUE(rv_version) TYPE string.
    METHODS is_edge_control_warning_needed
      RETURNING
        VALUE(rv_result) TYPE abap_bool.
endclass. "ZCL_ABAPGIT_GUI_PAGE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_ADDOFFLIN

*"* local type definitions
*include zcl_abapgit_gui_page_addofflinccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_ADDOFFLIN definition
*"* public declarations
*include zcl_abapgit_gui_page_addofflincu.
CLASS Lcl_abapgit_gui_page_addofflin DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler.
    INTERFACES Lif_abapgit_gui_renderable.

    CLASS-METHODS create
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

    METHODS constructor
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_addofflinco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_addofflinci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_id,
        name               TYPE string VALUE 'name',
        package            TYPE string VALUE 'package',
        folder_logic       TYPE string VALUE 'folder_logic',
        labels             TYPE string VALUE 'labels',
        ignore_subpackages TYPE string VALUE 'ignore_subpackages',
        main_lang_only     TYPE string VALUE 'main_lang_only',
        abap_lang_vers     TYPE string VALUE 'abap_lang_vers',
      END OF c_id .

    CONSTANTS:
      BEGIN OF c_event,
        choose_package   TYPE string VALUE 'choose-package',
        choose_labels    TYPE string VALUE 'choose-labels',
        create_package   TYPE string VALUE 'create-package',
        add_offline_repo TYPE string VALUE 'add-repo-offline',
      END OF c_event .

    DATA mo_form TYPE REF TO Lcl_abapgit_html_form .
    DATA mo_form_data TYPE REF TO Lcl_abapgit_string_map .
    DATA mo_form_util TYPE REF TO Lcl_abapgit_html_form_utils.
    DATA mo_validation_log TYPE REF TO Lcl_abapgit_string_map .

    METHODS validate_form
      IMPORTING
        !io_form_data            TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(ro_validation_log) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception .

    METHODS get_form_schema
      RETURNING
        VALUE(ro_form) TYPE REF TO Lcl_abapgit_html_form .

    METHODS choose_labels
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_GUI_PAGE_ADDOFFLIN definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_ADDONLINE

*"* local type definitions
*include zcl_abapgit_gui_page_addonlineccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_ADDONLINE definition
*"* public declarations
*include zcl_abapgit_gui_page_addonlinecu.
CLASS Lcl_abapgit_gui_page_addonline DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler.
    INTERFACES Lif_abapgit_gui_renderable.

    CLASS-METHODS create
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

    METHODS constructor
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_addonlineco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_addonlineci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_id,
        url                TYPE string VALUE 'url',
        package            TYPE string VALUE 'package',
        branch_name        TYPE string VALUE 'branch_name',
        display_name       TYPE string VALUE 'display_name',
        labels             TYPE string VALUE 'labels',
        folder_logic       TYPE string VALUE 'folder_logic',
        ignore_subpackages TYPE string VALUE 'ignore_subpackages',
        main_lang_only     TYPE string VALUE 'main_lang_only',
        abap_lang_vers     TYPE string VALUE 'abap_lang_vers',
      END OF c_id.

    CONSTANTS:
      BEGIN OF c_event,
        choose_package  TYPE string VALUE 'choose-package',
        create_package  TYPE string VALUE 'create-package',
        choose_branch   TYPE string VALUE 'choose-branch',
        choose_labels   TYPE string VALUE 'choose-labels',
        add_online_repo TYPE string VALUE 'add-repo-online',
      END OF c_event.

    DATA mo_form TYPE REF TO Lcl_abapgit_html_form .
    DATA mo_form_data TYPE REF TO Lcl_abapgit_string_map .
    DATA mo_form_util TYPE REF TO Lcl_abapgit_html_form_utils.
    DATA mo_validation_log TYPE REF TO Lcl_abapgit_string_map .

    METHODS validate_form
      IMPORTING
        io_form_data             TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(ro_validation_log) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception.

    METHODS get_form_schema
      RETURNING
        VALUE(ro_form) TYPE REF TO Lcl_abapgit_html_form.

    METHODS choose_labels
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_GUI_PAGE_ADDONLINE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_DEBUGINFO

*"* local type definitions
*include zcl_abapgit_gui_page_debuginfoccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_DEBUGINFO definition
*"* public declarations
*include zcl_abapgit_gui_page_debuginfocu.
CLASS Lcl_abapgit_gui_page_debuginfo DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler .
    INTERFACES Lif_abapgit_gui_renderable .

    CLASS-METHODS create
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception .

*"* protected declarations
*include zcl_abapgit_gui_page_debuginfoco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_debuginfoci.
  PRIVATE SECTION.

    CONSTANTS c_exit_standalone TYPE syrepid VALUE 'ZABAPGIT_USER_EXIT' ##NO_TEXT.
    CONSTANTS c_exit_class TYPE c LENGTH 30 VALUE 'LCL_ABAPGIT_USER_EXIT' ##NO_TEXT.
    CONSTANTS c_exit_interface TYPE c LENGTH 30 VALUE 'LIF_ABAPGIT_EXIT' ##NO_TEXT.
    CONSTANTS:
      BEGIN OF c_action,
        save TYPE string VALUE 'save',
      END OF c_action.
    DATA mv_html TYPE string .

    CLASS-METHODS build_toolbar
      RETURNING
        VALUE(ro_menu) TYPE REF TO Lcl_abapgit_html_toolbar.
    METHODS render_debug_info
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_exit_info
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_exit_info_methods
      IMPORTING
        !it_source     TYPE string_table
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_supported_object_types
      RETURNING
        VALUE(rv_html) TYPE string .
    METHODS render_scripts
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS get_jump_object
      IMPORTING
        !iv_obj_type   TYPE csequence DEFAULT 'CLAS'
        !iv_obj_name   TYPE csequence
      RETURNING
        VALUE(rv_html) TYPE string .
endclass. "ZCL_ABAPGIT_GUI_PAGE_DEBUGINFO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_EX_OBJECT

*"* local type definitions
*include zcl_abapgit_gui_page_ex_objectccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_EX_OBJECT definition
*"* public declarations
*include zcl_abapgit_gui_page_ex_objectcu.
CLASS Lcl_abapgit_gui_page_ex_object DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_gui_event_handler.
    INTERFACES Lif_abapgit_gui_renderable.

    CLASS-METHODS create
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.
    METHODS constructor
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_ex_objectco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_ex_objectci.
  PRIVATE SECTION.
    CONSTANTS:
      BEGIN OF c_id,
        object_type TYPE string VALUE 'object_type',
        object_name TYPE string VALUE 'object_name',
        only_main   TYPE string VALUE 'only_main',
      END OF c_id.

    CONSTANTS:
      BEGIN OF c_event,
        export             TYPE string VALUE 'export',
        choose_object_type TYPE string VALUE 'choose-object-type',
      END OF c_event.


    DATA mo_form TYPE REF TO Lcl_abapgit_html_form.
    DATA mo_form_data TYPE REF TO Lcl_abapgit_string_map.
    DATA mo_validation_log TYPE REF TO Lcl_abapgit_string_map.
    DATA mo_form_util TYPE REF TO Lcl_abapgit_html_form_utils.

    METHODS get_form_schema
      RETURNING
        VALUE(ro_form) TYPE REF TO Lcl_abapgit_html_form.

    METHODS export_object
      RAISING
        Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_GUI_PAGE_EX_OBJECT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_EX_PCKAGE

*"* local type definitions
*include zcl_abapgit_gui_page_ex_pckageccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_EX_PCKAGE definition
*"* public declarations
*include zcl_abapgit_gui_page_ex_pckagecu.
CLASS Lcl_abapgit_gui_page_ex_pckage DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_gui_event_handler.
    INTERFACES Lif_abapgit_gui_renderable.

    CLASS-METHODS create
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.
    METHODS constructor
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_ex_pckageco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_ex_pckageci.
  PRIVATE SECTION.
    CONSTANTS:
      BEGIN OF c_id,
        package        TYPE string VALUE 'package',
        folder_logic   TYPE string VALUE 'folder_logic',
        main_lang_only TYPE string VALUE 'main_lang_only',
      END OF c_id.

    CONSTANTS:
      BEGIN OF c_event,
        export_package TYPE string VALUE 'export-package',
        choose_package TYPE string VALUE 'choose-object-type',
      END OF c_event.


    DATA mo_form TYPE REF TO Lcl_abapgit_html_form.
    DATA mo_form_data TYPE REF TO Lcl_abapgit_string_map.
    DATA mo_validation_log TYPE REF TO Lcl_abapgit_string_map.
    DATA mo_form_util TYPE REF TO Lcl_abapgit_html_form_utils.

    METHODS get_form_schema
      RETURNING
        VALUE(ro_form) TYPE REF TO Lcl_abapgit_html_form.

    METHODS export_package
      RAISING
        Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_GUI_PAGE_EX_PCKAGE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_HOC

*"* local type definitions
*include zcl_abapgit_gui_page_hoc======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_HOC definition
*"* public declarations
*include zcl_abapgit_gui_page_hoc======cu.
CLASS Lcl_abapgit_gui_page_hoc DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_page
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    CLASS-METHODS create
      IMPORTING
        !ii_child_component     TYPE REF TO Lif_abapgit_gui_renderable
        !iv_page_title          TYPE string OPTIONAL
        !iv_page_layout         TYPE string DEFAULT Lcl_abapgit_gui_page=>c_page_layout-centered
        !io_page_menu           TYPE REF TO Lcl_abapgit_html_toolbar OPTIONAL
        !ii_page_menu_provider  TYPE REF TO Lif_abapgit_gui_menu_provider OPTIONAL
        !ii_page_title_provider TYPE REF TO Lif_abapgit_gui_page_title OPTIONAL
        !iv_extra_css_url       TYPE string OPTIONAL
        !iv_extra_js_url        TYPE string OPTIONAL
        !iv_show_as_modal       TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ri_page_wrap)     TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.
    METHODS get_child
      RETURNING
        VALUE(ri_child) TYPE REF TO Lif_abapgit_gui_renderable.
    METHODS constructor
      IMPORTING
        !ii_child_component TYPE REF TO Lif_abapgit_gui_renderable
        !is_control         TYPE Lcl_abapgit_gui_page=>ty_control
      RAISING
        Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_gui_page_hoc======co.
  PROTECTED SECTION.

    METHODS render_content
        REDEFINITION.
*"* private declarations
*include zcl_abapgit_gui_page_hoc======ci.
  PRIVATE SECTION.

    DATA mi_child TYPE REF TO Lif_abapgit_gui_renderable .

    METHODS detect_modal
      RETURNING
        VALUE(rv_is_modal) TYPE abap_bool.

    METHODS detect_menu_provider
      RETURNING
        VALUE(ri_ref) TYPE REF TO Lif_abapgit_gui_menu_provider.

    METHODS detect_title_provider
      RETURNING
        VALUE(ri_ref) TYPE REF TO Lif_abapgit_gui_page_title.

endclass. "ZCL_ABAPGIT_GUI_PAGE_HOC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_MERGE

*"* local type definitions
*include zcl_abapgit_gui_page_merge====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_MERGE definition
*"* public declarations
*include zcl_abapgit_gui_page_merge====cu.
CLASS Lcl_abapgit_gui_page_merge DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    INTERFACES:
      Lif_abapgit_gui_event_handler,
      Lif_abapgit_gui_menu_provider,
      Lif_abapgit_gui_renderable.

    CLASS-METHODS create
      IMPORTING
        io_repo        TYPE REF TO Lcl_abapgit_repo_online
        iv_source      TYPE string
        iv_target      TYPE string
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

    METHODS constructor
      IMPORTING
        io_repo   TYPE REF TO Lcl_abapgit_repo_online
        iv_source TYPE string
        iv_target TYPE string
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_merge====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_merge====ci.
  PRIVATE SECTION.

    DATA mo_repo TYPE REF TO Lcl_abapgit_repo_online.
    DATA mi_merge TYPE REF TO Lif_abapgit_merge.

    CONSTANTS:
      BEGIN OF c_actions,
        merge         TYPE string VALUE 'merge',
        res_conflicts TYPE string VALUE 'res_conflicts',
      END OF c_actions.

    METHODS show_file
      IMPORTING
        !it_expanded TYPE Lif_abapgit_git_definitions=>ty_expanded_tt
        !ii_html     TYPE REF TO Lif_abapgit_html
        !is_file     TYPE Lif_abapgit_git_definitions=>ty_expanded
        !is_result   TYPE Lif_abapgit_git_definitions=>ty_expanded.

endclass. "ZCL_ABAPGIT_GUI_PAGE_MERGE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_MERGE_SEL

*"* local type definitions
*include zcl_abapgit_gui_page_merge_selccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_MERGE_SEL definition
*"* public declarations
*include zcl_abapgit_gui_page_merge_selcu.
CLASS Lcl_abapgit_gui_page_merge_sel DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler.
    INTERFACES Lif_abapgit_gui_renderable.

    CLASS-METHODS create
      IMPORTING
        !ii_repo       TYPE REF TO Lif_abapgit_repo
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

    METHODS constructor
      IMPORTING
        !ii_repo TYPE REF TO Lif_abapgit_repo
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_merge_selco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_merge_selci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_id,
        branches TYPE string VALUE 'branches',
        source   TYPE string VALUE 'source',
        target   TYPE string VALUE 'target',
      END OF c_id.

    CONSTANTS:
      BEGIN OF c_event,
        merge TYPE string VALUE 'merge',
      END OF c_event.

    DATA mo_form TYPE REF TO Lcl_abapgit_html_form.
    DATA mo_form_data TYPE REF TO Lcl_abapgit_string_map.
    DATA mo_form_util TYPE REF TO Lcl_abapgit_html_form_utils.
    DATA mo_repo TYPE REF TO Lcl_abapgit_repo_online.
    DATA mt_branches TYPE Lif_abapgit_git_definitions=>ty_git_branch_list_tt.

    METHODS read_branches
      RAISING
        Lcx_abapgit_exception.

    METHODS get_form_schema
      RETURNING
        VALUE(ro_form) TYPE REF TO Lcl_abapgit_html_form
      RAISING
        Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_GUI_PAGE_MERGE_SEL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_RUNIT

*"* local type definitions
*include zcl_abapgit_gui_page_runit====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_RUNIT definition
*"* public declarations
*include zcl_abapgit_gui_page_runit====cu.
CLASS Lcl_abapgit_gui_page_runit DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler.
    INTERFACES Lif_abapgit_gui_renderable.
    INTERFACES Lif_abapgit_gui_menu_provider.

    CLASS-METHODS create
      IMPORTING
        !io_repo       TYPE REF TO Lcl_abapgit_repo
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

    METHODS constructor
      IMPORTING
        !io_repo TYPE REF TO Lcl_abapgit_repo
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_runit====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_runit====ci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_actions,
        rerun TYPE string VALUE 'rerun' ##NO_TEXT,
      END OF c_actions .

    TYPES:
      BEGIN OF ty_key,
        obj_name TYPE tadir-obj_name,
        obj_type TYPE tadir-object,
      END OF ty_key,
      ty_keys_tt TYPE STANDARD TABLE OF ty_key WITH DEFAULT KEY.

    DATA mo_repo TYPE REF TO Lcl_abapgit_repo.
    DATA mv_summary TYPE string.

    METHODS build_tadir
      RETURNING
        VALUE(rt_tadir) TYPE ty_keys_tt
      RAISING
        Lcx_abapgit_exception.

    METHODS run
      RETURNING
        VALUE(ro_result) TYPE REF TO object
      RAISING
        Lcx_abapgit_exception.

    METHODS get_text_for_method
      IMPORTING
        !is_method      TYPE any
        !it_indices     TYPE ANY TABLE
        !iv_program_ndx TYPE sy-tabix
        !iv_class_ndx   TYPE sy-tabix
        !iv_method_ndx  TYPE sy-tabix
      RETURNING
        VALUE(rv_text)  TYPE string.

endclass. "ZCL_ABAPGIT_GUI_PAGE_RUNIT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_RUN_BCKG

*"* local type definitions
*include zcl_abapgit_gui_page_run_bckg=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_RUN_BCKG definition
*"* public declarations
*include zcl_abapgit_gui_page_run_bckg=cu.
CLASS Lcl_abapgit_gui_page_run_bckg DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler .
    INTERFACES Lif_abapgit_gui_renderable .

    CLASS-METHODS create
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception .
    METHODS constructor
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_gui_page_run_bckg=co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_run_bckg=ci.
  PRIVATE SECTION.
    DATA: mt_text TYPE TABLE OF string.

    METHODS run.
endclass. "ZCL_ABAPGIT_GUI_PAGE_RUN_BCKG definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_SETT_GLOB

*"* local type definitions
*include zcl_abapgit_gui_page_sett_globccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_SETT_GLOB definition
*"* public declarations
*include zcl_abapgit_gui_page_sett_globcu.
CLASS Lcl_abapgit_gui_page_sett_glob DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler.
    INTERFACES Lif_abapgit_gui_renderable.

    CLASS-METHODS create
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.
    METHODS constructor
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_sett_globco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_sett_globci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_id,
        proxy_settings           TYPE string VALUE 'proxy_settings',
        proxy_url                TYPE string VALUE 'proxy_url',
        proxy_port               TYPE string VALUE 'proxy_port',
        proxy_auth               TYPE string VALUE 'proxy_auth',
        proxy_bypass             TYPE string VALUE 'proxy_bypass',
        commit_settings          TYPE string VALUE 'commit_settings',
        commitmsg_comment_length TYPE string VALUE 'commitmsg_comment_length',
        commitmsg_comment_deflt  TYPE string VALUE 'commitmsg_comment_deflt',
        commitmsg_body_size      TYPE string VALUE 'commitmsg_body_size',
        commitmsg_hide_author    TYPE string VALUE 'commitmsg_hide_author',
        devint_settings          TYPE string VALUE 'devint_settings',
        run_critical_tests       TYPE string VALUE 'run_critical_tests',
        experimental_features    TYPE string VALUE 'experimental_features',
        activate_wo_popup        TYPE string VALUE 'activate_wo_popup',
      END OF c_id.
    CONSTANTS:
      BEGIN OF c_event,
        proxy_bypass TYPE string VALUE 'proxy_bypass',
        save         TYPE string VALUE 'save',
      END OF c_event.

    DATA mo_form TYPE REF TO Lcl_abapgit_html_form.
    DATA mo_form_data TYPE REF TO Lcl_abapgit_string_map.
    DATA mo_validation_log TYPE REF TO Lcl_abapgit_string_map.

    DATA mo_settings TYPE REF TO Lcl_abapgit_settings.

    METHODS validate_form
      IMPORTING
        !io_form_data            TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(ro_validation_log) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception.
    METHODS get_form_schema
      RETURNING
        VALUE(ro_form) TYPE REF TO Lcl_abapgit_html_form.
    METHODS read_settings
      RETURNING
        VALUE(ro_form_data) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception.
    METHODS save_settings
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS read_proxy_bypass
      IMPORTING
        io_form_data TYPE REF TO Lcl_abapgit_string_map
        io_settings TYPE REF TO Lcl_abapgit_settings
      RAISING
        Lcx_abapgit_exception.
    METHODS save_proxy_bypass
      RAISING
        Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_GUI_PAGE_SETT_GLOB definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_SETT_REPO

*"* local type definitions
*include zcl_abapgit_gui_page_sett_repoccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_SETT_REPO definition
*"* public declarations
*include zcl_abapgit_gui_page_sett_repocu.
CLASS Lcl_abapgit_gui_page_sett_repo DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler .
    INTERFACES Lif_abapgit_gui_renderable .

    CLASS-METHODS create
      IMPORTING
        !io_repo       TYPE REF TO Lcl_abapgit_repo
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception .
    METHODS constructor
      IMPORTING
        !io_repo TYPE REF TO Lcl_abapgit_repo
      RAISING
        Lcx_abapgit_exception .

*"* protected declarations
*include zcl_abapgit_gui_page_sett_repoco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_sett_repoci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_id,
        dot              TYPE string VALUE 'dot',
        file_system      TYPE string VALUE 'file_system',
        abap_system      TYPE string VALUE 'abap_system',
        name             TYPE string VALUE 'name',
        i18n             TYPE string VALUE 'i18n',
        main_language    TYPE string VALUE 'main_language',
        i18n_langs       TYPE string VALUE 'i18n_langs',
        use_lxe          TYPE string VALUE 'use_lxe',
        starting_folder  TYPE string VALUE 'starting_folder',
        folder_logic     TYPE string VALUE 'folder_logic',
        ignore           TYPE string VALUE 'ignore',
        requirements     TYPE string VALUE 'requirements',
        version_constant TYPE string VALUE 'version_constant',
        version_value    TYPE string VALUE 'version_value',
        abap_langu_vers  TYPE string VALUE 'abap_langu_vers',
      END OF c_id.
    CONSTANTS:
      BEGIN OF c_event,
        save TYPE string VALUE 'save',
      END OF c_event .
    CONSTANTS c_empty_rows TYPE i VALUE 2 ##NO_TEXT.

    DATA mo_form TYPE REF TO Lcl_abapgit_html_form .
    DATA mo_form_data TYPE REF TO Lcl_abapgit_string_map .
    DATA mo_validation_log TYPE REF TO Lcl_abapgit_string_map .

    DATA mo_repo TYPE REF TO Lcl_abapgit_repo .
    DATA mv_requirements_count TYPE i .

    METHODS validate_form
      IMPORTING
        !io_form_data            TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(ro_validation_log) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception .
    METHODS get_form_schema
      RETURNING
        VALUE(ro_form) TYPE REF TO Lcl_abapgit_html_form
      RAISING
        Lcx_abapgit_exception .
    METHODS read_settings
      RETURNING
        VALUE(ro_form_data) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception .
    METHODS save_settings
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_GUI_PAGE_SETT_REPO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_TAGS

*"* local type definitions
*include zcl_abapgit_gui_page_tags=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_TAGS definition
*"* public declarations
*include zcl_abapgit_gui_page_tags=====cu.
CLASS Lcl_abapgit_gui_page_tags DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler.
    INTERFACES Lif_abapgit_gui_renderable.

    CLASS-METHODS create
      IMPORTING
        !ii_repo       TYPE REF TO Lif_abapgit_repo
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

    METHODS constructor
      IMPORTING
        !ii_repo TYPE REF TO Lif_abapgit_repo
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_tags=====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_tags=====ci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_id,
        tag_group    TYPE string VALUE 'tag_group',
        tag_type     TYPE string VALUE 'tag_type',
        tags         TYPE string VALUE 'tags',
        type         TYPE string VALUE 'type',
        name         TYPE string VALUE 'name',
        sha1         TYPE string VALUE 'sha1',
        anno_group   TYPE string VALUE 'anno_group',
        tagger       TYPE string VALUE 'tagger',
        tagger_name  TYPE string VALUE 'tagger_name',
        tagger_email TYPE string VALUE 'tagger_email',
        message      TYPE string VALUE 'message',
        body         TYPE string VALUE 'body',
      END OF c_id.

    CONSTANTS:
      BEGIN OF c_event,
        create        TYPE string VALUE 'create',
        choose_commit TYPE string VALUE 'choose_commit',
        change_type   TYPE string VALUE 'change_type',
      END OF c_event.

    DATA mo_form TYPE REF TO Lcl_abapgit_html_form.
    DATA mo_form_data TYPE REF TO Lcl_abapgit_string_map.
    DATA mo_validation_log TYPE REF TO Lcl_abapgit_string_map.
    DATA mo_repo TYPE REF TO Lcl_abapgit_repo_online.
    DATA mo_settings TYPE REF TO Lcl_abapgit_settings.
    DATA ms_tag TYPE Lif_abapgit_git_definitions=>ty_git_tag.

    METHODS get_form_schema
      IMPORTING
        io_form_data   TYPE REF TO Lcl_abapgit_string_map OPTIONAL
      RETURNING
        VALUE(ro_form) TYPE REF TO Lcl_abapgit_html_form
      RAISING
        Lcx_abapgit_exception.

    METHODS initialize_form_data
      RAISING
        Lcx_abapgit_exception.

    METHODS get_tagger_name
      RETURNING
        VALUE(rv_user) TYPE string
      RAISING
        Lcx_abapgit_exception.

    METHODS get_tagger_email
      RETURNING
        VALUE(rv_email) TYPE string
      RAISING
        Lcx_abapgit_exception.

    METHODS validate_form
      IMPORTING
        !io_form_data            TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(ro_validation_log) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception.

    METHODS choose_commit
      RETURNING
        VALUE(rv_commit) TYPE Lif_abapgit_git_definitions=>ty_commit-sha1
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_GUI_PAGE_TAGS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_TUTORIAL

*"* local type definitions
*include zcl_abapgit_gui_page_tutorial=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_TUTORIAL definition
*"* public declarations
*include zcl_abapgit_gui_page_tutorial=cu.
CLASS Lcl_abapgit_gui_page_tutorial DEFINITION
*public
  FINAL
  INHERITING FROM Lcl_abapgit_gui_component
  CREATE PUBLIC.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_gui_renderable.

    CLASS-METHODS create
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_tutorial=co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_gui_page_tutorial=ci.
  PRIVATE SECTION.

    CLASS-METHODS build_main_menu
      RETURNING
        VALUE(ro_menu) TYPE REF TO Lcl_abapgit_html_toolbar.

endclass. "ZCL_ABAPGIT_GUI_PAGE_TUTORIAL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PICKLIST

*"* local type definitions
*include zcl_abapgit_gui_picklist======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PICKLIST definition
*"* public declarations
*include zcl_abapgit_gui_picklist======cu.
CLASS Lcl_abapgit_gui_picklist DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler.
    INTERFACES Lif_abapgit_gui_renderable.
    INTERFACES Lif_abapgit_gui_page_title.

    METHODS constructor
      IMPORTING
        !it_list          TYPE STANDARD TABLE
        !iv_id            TYPE string OPTIONAL
        !iv_in_page       TYPE abap_bool DEFAULT abap_false
        !iv_title         TYPE string DEFAULT 'Choose from list'
        !iv_attr_name     TYPE abap_compname OPTIONAL
        !ii_item_renderer TYPE REF TO Lif_abapgit_gui_render_item OPTIONAL
      RAISING
        Lcx_abapgit_exception.
    METHODS get_result_idx
      RETURNING
        VALUE(rv_index) TYPE i.
    METHODS get_result_item
      CHANGING
        !cs_selected TYPE any.
    METHODS was_cancelled
      RETURNING
        VALUE(rv_yes) TYPE abap_bool.
    METHODS is_fulfilled
      RETURNING
        VALUE(rv_yes) TYPE abap_bool.
    METHODS id
      RETURNING
        VALUE(rv_id) TYPE string.
    METHODS is_in_page
      RETURNING
        VALUE(rv_yes) TYPE abap_bool.
    METHODS set_id
      IMPORTING
        iv_id        TYPE string
      RETURNING
        VALUE(ro_me) TYPE REF TO Lcl_abapgit_gui_picklist.
    METHODS set_in_page
      IMPORTING
        iv_in_page   TYPE abap_bool DEFAULT abap_true
      RETURNING
        VALUE(ro_me) TYPE REF TO Lcl_abapgit_gui_picklist.

*"* protected declarations
*include zcl_abapgit_gui_picklist======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_picklist======ci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_event,
        back   TYPE string VALUE 'back',
        choose TYPE string VALUE 'choose',
      END OF c_event.

    CONSTANTS c_radio_name TYPE string VALUE 'radio'.

    DATA mo_form TYPE REF TO Lcl_abapgit_html_form.
    DATA mo_form_data TYPE REF TO Lcl_abapgit_string_map.
    DATA mo_form_util TYPE REF TO Lcl_abapgit_html_form_utils.
    DATA mo_validation_log TYPE REF TO Lcl_abapgit_string_map.
    DATA mr_list TYPE REF TO data.
    DATA mv_selected TYPE i.
    DATA mv_cancelled TYPE abap_bool.
    DATA mv_fulfilled TYPE abap_bool.
    DATA mv_attr_name TYPE abap_compname.
    DATA mi_item_renderer TYPE REF TO Lif_abapgit_gui_render_item.
    DATA mv_in_page TYPE abap_bool.
    DATA mv_id TYPE string.
    DATA mv_title TYPE string.

    METHODS get_form_schema
      RETURNING
        VALUE(ro_form) TYPE REF TO Lcl_abapgit_html_form
      RAISING
        Lcx_abapgit_exception.
    METHODS return_state
      RETURNING
        VALUE(rv_state) TYPE Lif_abapgit_gui_event_handler=>ty_handling_result-state.

endclass. "ZCL_ABAPGIT_GUI_PICKLIST definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_ROUTER

*"* local type definitions
*include zcl_abapgit_gui_router========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_ROUTER definition
*"* public declarations
*include zcl_abapgit_gui_router========cu.
CLASS Lcl_abapgit_gui_router DEFINITION
*public
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler.

*"* protected declarations
*include zcl_abapgit_gui_router========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_router========ci.
  PRIVATE SECTION.

    METHODS general_page_routing
      IMPORTING
        !ii_event         TYPE REF TO Lif_abapgit_gui_event
      RETURNING
        VALUE(rs_handled) TYPE Lif_abapgit_gui_event_handler=>ty_handling_result
      RAISING
        Lcx_abapgit_exception .
    METHODS abapgit_services_actions
      IMPORTING
        !ii_event         TYPE REF TO Lif_abapgit_gui_event
      RETURNING
        VALUE(rs_handled) TYPE Lif_abapgit_gui_event_handler=>ty_handling_result
      RAISING
        Lcx_abapgit_exception .
    METHODS db_actions
      IMPORTING
        !ii_event         TYPE REF TO Lif_abapgit_gui_event
      RETURNING
        VALUE(rs_handled) TYPE Lif_abapgit_gui_event_handler=>ty_handling_result
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS file_download
      IMPORTING
        !iv_package TYPE devclass
        !iv_xstr    TYPE xstring
      RAISING
        Lcx_abapgit_exception .
    METHODS git_services
      IMPORTING
        !ii_event         TYPE REF TO Lif_abapgit_gui_event
      RETURNING
        VALUE(rs_handled) TYPE Lif_abapgit_gui_event_handler=>ty_handling_result
      RAISING
        Lcx_abapgit_exception .
    METHODS sap_gui_actions
      IMPORTING
        !ii_event         TYPE REF TO Lif_abapgit_gui_event
      RETURNING
        VALUE(rs_handled) TYPE Lif_abapgit_gui_event_handler=>ty_handling_result
      RAISING
        Lcx_abapgit_exception .
    METHODS other_utilities
      IMPORTING
        !ii_event         TYPE REF TO Lif_abapgit_gui_event
      RETURNING
        VALUE(rs_handled) TYPE Lif_abapgit_gui_event_handler=>ty_handling_result
      RAISING
        Lcx_abapgit_exception .
    METHODS zip_services
      IMPORTING
        !ii_event         TYPE REF TO Lif_abapgit_gui_event
      RETURNING
        VALUE(rs_handled) TYPE Lif_abapgit_gui_event_handler=>ty_handling_result
      RAISING
        Lcx_abapgit_exception .
    METHODS repository_services
      IMPORTING
        !ii_event         TYPE REF TO Lif_abapgit_gui_event
      RETURNING
        VALUE(rs_handled) TYPE Lif_abapgit_gui_event_handler=>ty_handling_result
      RAISING
        Lcx_abapgit_exception .
    METHODS get_page_diff
      IMPORTING
        !ii_event      TYPE REF TO Lif_abapgit_gui_event
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception .
    METHODS get_page_patch
      IMPORTING
        !ii_event      TYPE REF TO Lif_abapgit_gui_event
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception .
    METHODS get_page_stage
      IMPORTING
        !ii_event      TYPE REF TO Lif_abapgit_gui_event
        ii_obj_filter  TYPE REF TO Lif_abapgit_object_filter OPTIONAL
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS jump_object
      IMPORTING
        !iv_obj_type   TYPE string
        !iv_obj_name   TYPE string
        !iv_filename   TYPE string
        !iv_sub_type   TYPE string OPTIONAL
        !iv_sub_name   TYPE string OPTIONAL
        !iv_line       TYPE string OPTIONAL
        !iv_new_window TYPE string DEFAULT 'X'
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS jump_display_transport
      IMPORTING
        !iv_transport TYPE trkorr
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS jump_display_user
      IMPORTING
        !iv_username TYPE syuname
      RAISING
        Lcx_abapgit_exception .
    METHODS call_browser
      IMPORTING
        !iv_url TYPE csequence
      RAISING
        Lcx_abapgit_exception .
    METHODS get_state_settings
      IMPORTING
        !ii_event       TYPE REF TO Lif_abapgit_gui_event
      RETURNING
        VALUE(rv_state) TYPE i .
    METHODS get_state_diff
      IMPORTING
        !ii_event       TYPE REF TO Lif_abapgit_gui_event
      RETURNING
        VALUE(rv_state) TYPE i .
    METHODS main_page
      RETURNING VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING   Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_GUI_ROUTER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_UTILS

*"* local type definitions
*include zcl_abapgit_gui_utils=========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_UTILS definition
*"* public declarations
*include zcl_abapgit_gui_utils=========cu.
CLASS Lcl_abapgit_gui_utils DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS is_renderable
      IMPORTING
        !io_obj TYPE REF TO object
      RETURNING
        VALUE(rv_yes) TYPE abap_bool .
    CLASS-METHODS is_event_handler
      IMPORTING
        !io_obj TYPE REF TO object
      RETURNING
        VALUE(rv_yes) TYPE abap_bool .

*"* protected declarations
*include zcl_abapgit_gui_utils=========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_utils=========ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_GUI_UTILS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_HASH

*"* local type definitions
*include zcl_abapgit_hash==============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_HASH definition
*"* public declarations
*include zcl_abapgit_hash==============cu.
CLASS Lcl_abapgit_hash DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS adler32
      IMPORTING
        !iv_xstring        TYPE xstring
      RETURNING
        VALUE(rv_checksum) TYPE Lif_abapgit_git_definitions=>ty_adler32 .
    CLASS-METHODS sha1
      IMPORTING
        !iv_type       TYPE Lif_abapgit_git_definitions=>ty_type
        !iv_data       TYPE xstring
      RETURNING
        VALUE(rv_sha1) TYPE Lif_abapgit_git_definitions=>ty_sha1
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS sha1_commit
      IMPORTING
        !iv_data       TYPE xstring
      RETURNING
        VALUE(rv_sha1) TYPE Lif_abapgit_git_definitions=>ty_sha1
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS sha1_tree
      IMPORTING
        !iv_data       TYPE xstring
      RETURNING
        VALUE(rv_sha1) TYPE Lif_abapgit_git_definitions=>ty_sha1
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS sha1_tag
      IMPORTING
        !iv_data       TYPE xstring
      RETURNING
        VALUE(rv_sha1) TYPE Lif_abapgit_git_definitions=>ty_sha1
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS sha1_blob
      IMPORTING
        !iv_data       TYPE xstring
      RETURNING
        VALUE(rv_sha1) TYPE Lif_abapgit_git_definitions=>ty_sha1
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS sha1_raw
      IMPORTING
        !iv_data       TYPE xstring
      RETURNING
        VALUE(rv_sha1) TYPE Lif_abapgit_git_definitions=>ty_sha1
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS sha1_string
      IMPORTING
        !iv_data       TYPE string
      RETURNING
        VALUE(rv_sha1) TYPE Lif_abapgit_git_definitions=>ty_sha1
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_hash==============co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_hash==============ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_HASH definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_HTML

*"* local type definitions
*include zcl_abapgit_html==============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_HTML definition
*"* public declarations
*include zcl_abapgit_html==============cu.
CLASS Lcl_abapgit_html DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_html .

    CONSTANTS c_indent_size TYPE i VALUE 2 ##NO_TEXT.

    CLASS-METHODS class_constructor .
    CLASS-METHODS create
      IMPORTING
        !iv_initial_chunk  TYPE any OPTIONAL
      RETURNING
        VALUE(ri_instance) TYPE REF TO Lif_abapgit_html.

    CLASS-METHODS icon
      IMPORTING
        !iv_name      TYPE string
        !iv_hint      TYPE string OPTIONAL
        !iv_class     TYPE string OPTIONAL
        !iv_onclick   TYPE string OPTIONAL
      RETURNING
        VALUE(rv_str) TYPE string .
    CLASS-METHODS checkbox
      IMPORTING
        iv_id          TYPE string OPTIONAL
        iv_checked     TYPE abap_bool OPTIONAL
      RETURNING
        VALUE(rv_html) TYPE string .
*"* protected declarations
*include zcl_abapgit_html==============co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_html==============ci.
  PRIVATE SECTION.

    CONSTANTS c_max_indent TYPE i VALUE 200.

    TYPES:
      BEGIN OF ty_indent_context,
        no_indent_jscss TYPE abap_bool,
        within_style    TYPE abap_bool,
        within_js       TYPE abap_bool,
        within_textarea TYPE abap_bool,
        indent          TYPE i,
        indent_str      TYPE string,
      END OF ty_indent_context .
    TYPES:
      BEGIN OF ty_study_result,
        style_open     TYPE abap_bool,
        style_close    TYPE abap_bool,
        script_open    TYPE abap_bool,
        script_close   TYPE abap_bool,
        textarea_open  TYPE abap_bool,
        textarea_close TYPE abap_bool,
        tag_close      TYPE abap_bool,
        curly_close    TYPE abap_bool,
        openings       TYPE i,
        closings       TYPE i,
        singles        TYPE i,
      END OF ty_study_result .

    CLASS-DATA go_single_tags_re TYPE REF TO cl_abap_regex .
    DATA mt_buffer TYPE string_table .
    CLASS-DATA gv_spaces TYPE string .
    CLASS-DATA gv_debug_mode TYPE abap_bool .

    METHODS indent_line
      CHANGING
        !cs_context TYPE ty_indent_context
        !cv_line    TYPE string .
    METHODS study_line
      IMPORTING
        !iv_line         TYPE string
        !is_context      TYPE ty_indent_context
      RETURNING
        VALUE(rs_result) TYPE ty_study_result .
endclass. "ZCL_ABAPGIT_HTML definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_HTML_FORM

*"* local type definitions
*include zcl_abapgit_html_form=========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_HTML_FORM definition
*"* public declarations
*include zcl_abapgit_html_form=========cu.
CLASS Lcl_abapgit_html_form DEFINITION
*public
  FINAL
  INHERITING FROM Lcl_abapgit_gui_component
  CREATE PRIVATE .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_html_form .
    INTERFACES Lif_abapgit_gui_hotkeys .

    CLASS-METHODS create
      IMPORTING
        !iv_form_id    TYPE csequence OPTIONAL
        !iv_help_page  TYPE csequence OPTIONAL
      RETURNING
        VALUE(ro_form) TYPE REF TO Lcl_abapgit_html_form .
    METHODS render
      IMPORTING
        !iv_form_class     TYPE csequence DEFAULT 'dialog-form'
        !io_values         TYPE REF TO Lcl_abapgit_string_map
        !io_validation_log TYPE REF TO Lcl_abapgit_string_map OPTIONAL
      RETURNING
        VALUE(ri_html)     TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS command
      IMPORTING
        !iv_label      TYPE csequence
        !iv_action     TYPE csequence
        !iv_cmd_type   TYPE i DEFAULT Lif_abapgit_html_form=>c_cmd_type-input
      RETURNING
        VALUE(ro_self) TYPE REF TO Lcl_abapgit_html_form .
    METHODS text
      IMPORTING
        !iv_label       TYPE csequence
        !iv_name        TYPE csequence
        !iv_hint        TYPE csequence OPTIONAL
        !iv_required    TYPE abap_bool DEFAULT abap_false
        !iv_upper_case  TYPE abap_bool DEFAULT abap_false
        !iv_readonly    TYPE abap_bool DEFAULT abap_false
        !iv_password    TYPE abap_bool DEFAULT abap_false
        !iv_condense    TYPE abap_bool OPTIONAL
        !iv_placeholder TYPE csequence OPTIONAL
        !iv_side_action TYPE csequence OPTIONAL
        !iv_min         TYPE i DEFAULT cl_abap_math=>min_int4
        !iv_max         TYPE i DEFAULT cl_abap_math=>max_int4
      RETURNING
        VALUE(ro_self)  TYPE REF TO Lcl_abapgit_html_form .
    METHODS textarea
      IMPORTING
        !iv_label       TYPE csequence
        !iv_name        TYPE csequence
        !iv_hint        TYPE csequence OPTIONAL
        !iv_required    TYPE abap_bool DEFAULT abap_false
        !iv_readonly    TYPE abap_bool DEFAULT abap_false
        !iv_placeholder TYPE csequence OPTIONAL
        !iv_rows        TYPE i OPTIONAL
        !iv_cols        TYPE i OPTIONAL
        !iv_upper_case  TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ro_self)  TYPE REF TO Lcl_abapgit_html_form .
    METHODS number
      IMPORTING
        !iv_label      TYPE csequence
        !iv_name       TYPE csequence
        !iv_hint       TYPE csequence OPTIONAL
        !iv_required   TYPE abap_bool DEFAULT abap_false
        !iv_readonly   TYPE abap_bool DEFAULT abap_false
        !iv_min        TYPE i DEFAULT cl_abap_math=>min_int4
        !iv_max        TYPE i DEFAULT cl_abap_math=>max_int4
      RETURNING
        VALUE(ro_self) TYPE REF TO Lcl_abapgit_html_form .
    METHODS checkbox
      IMPORTING
        !iv_label      TYPE csequence
        !iv_name       TYPE csequence
        !iv_hint       TYPE csequence OPTIONAL
      RETURNING
        VALUE(ro_self) TYPE REF TO Lcl_abapgit_html_form .
    METHODS radio
      IMPORTING
        !iv_label         TYPE csequence
        !iv_name          TYPE csequence
        !iv_default_value TYPE csequence OPTIONAL
        !iv_hint          TYPE csequence OPTIONAL
        !iv_condense      TYPE abap_bool DEFAULT abap_false
        !iv_action        TYPE csequence OPTIONAL
      RETURNING
        VALUE(ro_self)    TYPE REF TO Lcl_abapgit_html_form .
    METHODS option
      IMPORTING
        !iv_label      TYPE csequence
        !iv_value      TYPE csequence
      RETURNING
        VALUE(ro_self) TYPE REF TO Lcl_abapgit_html_form .
    METHODS table
      IMPORTING
        !iv_label      TYPE csequence
        !iv_name       TYPE csequence
        !iv_hint       TYPE csequence OPTIONAL
      RETURNING
        VALUE(ro_self) TYPE REF TO Lcl_abapgit_html_form .
    METHODS column
      IMPORTING
        !iv_label      TYPE csequence
        !iv_width      TYPE csequence OPTIONAL
        !iv_readonly   TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ro_self) TYPE REF TO Lcl_abapgit_html_form .
    METHODS start_group
      IMPORTING
        !iv_label      TYPE csequence
        !iv_name       TYPE csequence
        !iv_hint       TYPE csequence OPTIONAL
      RETURNING
        VALUE(ro_self) TYPE REF TO Lcl_abapgit_html_form .
    METHODS hidden
      IMPORTING
        !iv_name       TYPE csequence
      RETURNING
        VALUE(ro_self) TYPE REF TO Lcl_abapgit_html_form .
    METHODS get_fields
      RETURNING
        VALUE(rt_fields) TYPE Lif_abapgit_html_form=>ty_fields .
*"* protected declarations
*include zcl_abapgit_html_form=========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_html_form=========ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_attr,
        value       TYPE string,
        error       TYPE string,
        hint        TYPE string,
        readonly    TYPE string,
        placeholder TYPE string,
        required    TYPE string,
        autofocus   TYPE string,
      END OF ty_attr .

    DATA mv_webgui TYPE abap_bool.
    DATA mt_fields TYPE Lif_abapgit_html_form=>ty_fields .
    DATA:
      mt_commands TYPE STANDARD TABLE OF Lif_abapgit_html_form=>ty_command .
    DATA mv_form_id TYPE string .
    DATA mv_help_page TYPE string .

    METHODS render_field
      IMPORTING
        !ii_html           TYPE REF TO Lif_abapgit_html
        !io_values         TYPE REF TO Lcl_abapgit_string_map
        !io_validation_log TYPE REF TO Lcl_abapgit_string_map
        !is_field          TYPE Lif_abapgit_html_form=>ty_field
        !iv_autofocus      TYPE abap_bool .
    METHODS render_field_text
      IMPORTING
        !ii_html  TYPE REF TO Lif_abapgit_html
        !is_field TYPE Lif_abapgit_html_form=>ty_field
        !is_attr  TYPE ty_attr .
    METHODS render_field_textarea
      IMPORTING
        !ii_html  TYPE REF TO Lif_abapgit_html
        !is_field TYPE Lif_abapgit_html_form=>ty_field
        !is_attr  TYPE ty_attr .
    METHODS render_field_checkbox
      IMPORTING
        !ii_html  TYPE REF TO Lif_abapgit_html
        !is_field TYPE Lif_abapgit_html_form=>ty_field
        !is_attr  TYPE ty_attr .
    METHODS render_field_radio
      IMPORTING
        !ii_html  TYPE REF TO Lif_abapgit_html
        !is_field TYPE Lif_abapgit_html_form=>ty_field
        !is_attr  TYPE ty_attr .
    METHODS render_field_table
      IMPORTING
        !ii_html   TYPE REF TO Lif_abapgit_html
        !is_field  TYPE Lif_abapgit_html_form=>ty_field
        !is_attr   TYPE ty_attr
        !io_values TYPE REF TO Lcl_abapgit_string_map .
    METHODS render_command
      IMPORTING
        !ii_html TYPE REF TO Lif_abapgit_html
        !is_cmd  TYPE Lif_abapgit_html_form=>ty_command .
    METHODS render_command_link
      IMPORTING
        !ii_html TYPE REF TO Lif_abapgit_html
        !is_cmd  TYPE Lif_abapgit_html_form=>ty_command .
    METHODS render_field_hidden
      IMPORTING
        !ii_html  TYPE REF TO Lif_abapgit_html
        !is_field TYPE Lif_abapgit_html_form=>ty_field
        !is_attr  TYPE ty_attr .
endclass. "ZCL_ABAPGIT_HTML_FORM definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_HTML_PARTS

*"* local type definitions
*include zcl_abapgit_html_parts========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_HTML_PARTS definition
*"* public declarations
*include zcl_abapgit_html_parts========cu.
CLASS Lcl_abapgit_html_parts DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS add_part
      IMPORTING
        !iv_collection TYPE string
        !ii_part TYPE REF TO Lif_abapgit_html .
    METHODS get_parts
      IMPORTING
        !iv_collection TYPE string
      RETURNING
        VALUE(rt_parts) TYPE Lif_abapgit_html=>ty_table_of .
    METHODS get_collection_names
      RETURNING
        VALUE(rt_list) TYPE string_table .
    METHODS get_collection_size
      IMPORTING
        !iv_collection TYPE string
      RETURNING
        VALUE(rv_size) TYPE i .
    METHODS clear.
*"* protected declarations
*include zcl_abapgit_html_parts========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_html_parts========ci.
  PRIVATE SECTION.
    TYPES:
      BEGIN OF ty_named_collection,
        name TYPE string,
        pile TYPE Lif_abapgit_html=>ty_table_of,
      END OF ty_named_collection.
    TYPES:
      ty_named_collections TYPE STANDARD TABLE OF ty_named_collection WITH KEY name.

    DATA mt_part_collections TYPE ty_named_collections.

    METHODS get_collection
      IMPORTING
        !iv_collection TYPE string
        !iv_create_if_missing TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(rr_collection) TYPE REF TO ty_named_collection .

endclass. "ZCL_ABAPGIT_HTML_PARTS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_HTML_TABLE

*"* local type definitions
*include zcl_abapgit_html_table========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_HTML_TABLE definition
*"* public declarations
*include zcl_abapgit_html_table========cu.
CLASS Lcl_abapgit_html_table DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS create
      IMPORTING
        !ii_renderer    TYPE REF TO Lif_abapgit_html_table
      RETURNING
        VALUE(ro_instance) TYPE REF TO Lcl_abapgit_html_table .
    " probably th css_class
    " maybe auto class for td
    METHODS define_column
      IMPORTING
        !iv_column_id  TYPE string
        !iv_column_title TYPE string OPTIONAL
        !iv_from_field TYPE abap_compname OPTIONAL
      RETURNING
        VALUE(ro_self)  TYPE REF TO Lcl_abapgit_html_table .
    " Maybe also data_provider
    " Record Limit
    METHODS render
      IMPORTING
        !iv_id         TYPE csequence OPTIONAL
        !iv_css_class  TYPE csequence OPTIONAL
        !it_data       TYPE ANY TABLE
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .

*"* protected declarations
*include zcl_abapgit_html_table========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_html_table========ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_column,
        column_id TYPE string,
        column_title TYPE string,
        from_field  TYPE abap_compname,
      END OF ty_column,
      ty_columns TYPE STANDARD TABLE OF ty_column WITH KEY column_id.


    DATA mi_renderer TYPE REF TO Lif_abapgit_html_table.
    DATA mt_columns TYPE ty_columns.
    DATA mi_html TYPE REF TO Lif_abapgit_html.

    METHODS render_thead
      RAISING
        Lcx_abapgit_exception .

    METHODS render_tbody
      IMPORTING
        it_data TYPE ANY TABLE
      RAISING
        Lcx_abapgit_exception .

    METHODS render_row
      IMPORTING
        iv_row_index TYPE i
        is_row TYPE any
      RAISING
        Lcx_abapgit_exception .

endclass. "ZCL_ABAPGIT_HTML_TABLE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_HTML_TOOLBAR

*"* local type definitions
*include zcl_abapgit_html_toolbar======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_HTML_TOOLBAR definition
*"* public declarations
*include zcl_abapgit_html_toolbar======cu.
CLASS Lcl_abapgit_html_toolbar DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS create
      IMPORTING
        !iv_id TYPE string OPTIONAL
      RETURNING
        VALUE(ro_instance) TYPE REF TO Lcl_abapgit_html_toolbar.
    METHODS constructor
      IMPORTING
        !iv_id TYPE string OPTIONAL .
    METHODS add
      IMPORTING
        !iv_txt        TYPE string
        !io_sub        TYPE REF TO Lcl_abapgit_html_toolbar OPTIONAL
        !iv_typ        TYPE c DEFAULT Lif_abapgit_html=>c_action_type-sapevent
        !iv_act        TYPE string OPTIONAL
        !iv_ico        TYPE string OPTIONAL
        !iv_cur        TYPE abap_bool OPTIONAL
        !iv_opt        TYPE c OPTIONAL
        !iv_chk        TYPE abap_bool DEFAULT abap_undefined
        !iv_aux        TYPE string OPTIONAL
        !iv_id         TYPE string OPTIONAL
        !iv_title      TYPE string OPTIONAL
        !iv_class      TYPE string OPTIONAL
        !iv_li_class   TYPE string OPTIONAL
      RETURNING
        VALUE(ro_self) TYPE REF TO Lcl_abapgit_html_toolbar .
    METHODS count_items
      RETURNING
        VALUE(rv_count) TYPE i .
    METHODS render
      IMPORTING
        !iv_right      TYPE abap_bool OPTIONAL
        !iv_sort       TYPE abap_bool OPTIONAL
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS render_as_droplist
      IMPORTING
        !iv_label      TYPE string
        !iv_right      TYPE abap_bool OPTIONAL
        !iv_sort       TYPE abap_bool OPTIONAL
        !iv_corner     TYPE abap_bool OPTIONAL
        !iv_action     TYPE string OPTIONAL
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
*"* protected declarations
*include zcl_abapgit_html_toolbar======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_html_toolbar======ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_item,
        txt      TYPE string,
        act      TYPE string,
        ico      TYPE string,
        sub      TYPE REF TO Lcl_abapgit_html_toolbar,
        opt      TYPE c LENGTH 1,
        typ      TYPE c LENGTH 1,
        cur      TYPE abap_bool,
        chk      TYPE abap_bool,
        aux      TYPE string,
        id       TYPE string,
        title    TYPE string,
        class    TYPE string,
        li_class TYPE string,
      END OF ty_item .
    TYPES:
      ty_items TYPE STANDARD TABLE OF ty_item .

    DATA mt_items TYPE ty_items .
    DATA mv_id TYPE string .

    METHODS render_items
      IMPORTING
        !iv_sort       TYPE abap_bool OPTIONAL
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
endclass. "ZCL_ABAPGIT_HTML_TOOLBAR definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_HTML_VIEWER_GUI

*"* local type definitions
*include zcl_abapgit_html_viewer_gui===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_HTML_VIEWER_GUI definition
*"* public declarations
*include zcl_abapgit_html_viewer_gui===cu.
CLASS Lcl_abapgit_html_viewer_gui DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_html_viewer .

    METHODS constructor
      IMPORTING
        !io_container           TYPE REF TO cl_gui_container DEFAULT cl_gui_container=>screen0
        !iv_disable_query_table TYPE abap_bool DEFAULT abap_true .
*"* protected declarations
*include zcl_abapgit_html_viewer_gui===co.
  PROTECTED SECTION.

    DATA mo_html_viewer TYPE REF TO cl_gui_html_viewer .

    METHODS on_event
        FOR EVENT sapevent OF cl_gui_html_viewer
      IMPORTING
        !action
        !frame
        !getdata
        !postdata
        !query_table .

*"* private declarations
*include zcl_abapgit_html_viewer_gui===ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_HTML_VIEWER_GUI definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_HTTP

*"* local type definitions
*include zcl_abapgit_http==============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_HTTP definition
*"* public declarations
*include zcl_abapgit_http==============cu.
CLASS Lcl_abapgit_http DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    CONSTANTS:
      BEGIN OF c_scheme,
        digest TYPE string VALUE 'Digest',
      END OF c_scheme .

    CLASS-METHODS get_agent
      RETURNING
        VALUE(rv_agent) TYPE string .

    TYPES: BEGIN OF ty_key_value,
             key   TYPE string,
             value TYPE string,
           END OF ty_key_value.
    TYPES ty_headers TYPE STANDARD TABLE OF ty_key_value WITH DEFAULT KEY.

    CLASS-METHODS create_by_url
      IMPORTING
        !iv_url          TYPE string
        !iv_service      TYPE string
        it_headers       TYPE ty_headers OPTIONAL
      RETURNING
        VALUE(ro_client) TYPE REF TO Lcl_abapgit_http_client
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_http==============co.
  PROTECTED SECTION.

    CLASS-METHODS check_auth_requested
      IMPORTING
        !ii_client               TYPE REF TO if_http_client
      RETURNING
        VALUE(rv_auth_requested) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS is_local_system
      IMPORTING
        !iv_url        TYPE string
      RETURNING
        VALUE(rv_bool) TYPE abap_bool .
    CLASS-METHODS acquire_login_details
      IMPORTING
        !ii_client       TYPE REF TO if_http_client
        !io_client       TYPE REF TO Lcl_abapgit_http_client
        !iv_url          TYPE string
      RETURNING
        VALUE(rv_scheme) TYPE string
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_http==============ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_HTTP definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_HTTP_CLIENT

*"* local type definitions
*include zcl_abapgit_http_client=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_HTTP_CLIENT definition
*"* public declarations
*include zcl_abapgit_http_client=======cu.
CLASS Lcl_abapgit_http_client DEFINITION  CREATE PUBLIC.

  PUBLIC SECTION.

    METHODS:
      constructor
        IMPORTING ii_client TYPE REF TO if_http_client,
      close,
      set_digest
        IMPORTING io_digest TYPE REF TO Lcl_abapgit_http_digest,
      send_receive_close
        IMPORTING iv_data        TYPE xstring
        RETURNING VALUE(rv_data) TYPE xstring
        RAISING   Lcx_abapgit_exception,
      get_cdata
        RETURNING VALUE(rv_value) TYPE string,
      check_http_200
        RAISING Lcx_abapgit_exception,
      check_smart_response
        IMPORTING iv_expected_content_type TYPE string
                  iv_content_regex         TYPE string
        RAISING   Lcx_abapgit_exception,
      send_receive
        RAISING Lcx_abapgit_exception,
      set_headers
        IMPORTING iv_url     TYPE string
                  iv_service TYPE string
        RAISING   Lcx_abapgit_exception.

    METHODS set_header
      IMPORTING
        iv_key   TYPE string
        iv_value TYPE string
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_http_client=======co.
protected section.
*"* private declarations
*include zcl_abapgit_http_client=======ci.
  PRIVATE SECTION.
    DATA: mi_client TYPE REF TO if_http_client,
          mo_digest TYPE REF TO Lcl_abapgit_http_digest.

endclass. "ZCL_ABAPGIT_HTTP_CLIENT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_HTTP_DIGEST

*"* local type definitions
*include zcl_abapgit_http_digest=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_HTTP_DIGEST definition
*"* public declarations
*include zcl_abapgit_http_digest=======cu.
CLASS Lcl_abapgit_http_digest DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS constructor
      IMPORTING
        !ii_client   TYPE REF TO if_http_client
        !iv_username TYPE string
        !iv_password TYPE string
      RAISING
        Lcx_abapgit_exception.
    METHODS run
      IMPORTING
        !ii_client TYPE REF TO if_http_client
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_http_digest=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_http_digest=======ci.
  PRIVATE SECTION.
    DATA: mv_ha1      TYPE string,
          mv_username TYPE string,
          mv_realm    TYPE string,
          mv_qop      TYPE string,
          mv_nonce    TYPE string.

    CLASS-DATA: gv_nc TYPE n LENGTH 8.

    CLASS-METHODS:
      md5
        IMPORTING
                  iv_data        TYPE string
        RETURNING
                  VALUE(rv_hash) TYPE string
        RAISING   Lcx_abapgit_exception.

    METHODS:
      hash
        IMPORTING
                  iv_qop             TYPE string
                  iv_nonce           TYPE string
                  iv_uri             TYPE string
                  iv_method          TYPE string
                  iv_cnonse          TYPE string
        RETURNING
                  VALUE(rv_response) TYPE string
        RAISING   Lcx_abapgit_exception,
      parse
        IMPORTING
          ii_client TYPE REF TO if_http_client.

endclass. "ZCL_ABAPGIT_HTTP_DIGEST definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_LOGIN_MANAGER

*"* local type definitions
*include zcl_abapgit_login_manager=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_LOGIN_MANAGER definition
*"* public declarations
*include zcl_abapgit_login_manager=====cu.
CLASS Lcl_abapgit_login_manager DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS load
      IMPORTING
        !iv_uri                 TYPE string
      RETURNING
        VALUE(rv_authorization) TYPE string
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS save
      IMPORTING
        !iv_uri           TYPE string
        !iv_authorization TYPE string
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS clear .
    CLASS-METHODS set
      IMPORTING
        !iv_uri        TYPE string
        !iv_username   TYPE string
        !iv_password   TYPE string
      RETURNING
        VALUE(rv_auth) TYPE string
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS get
      IMPORTING
        !iv_uri        TYPE string
      RETURNING
        VALUE(rv_auth) TYPE string
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_login_manager=====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_login_manager=====ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_auth,
        uri           TYPE string,
        authorization TYPE string,
      END OF ty_auth .

    CLASS-DATA:
      gt_auth TYPE TABLE OF ty_auth WITH DEFAULT KEY .

    CLASS-METHODS append
      IMPORTING
        !iv_uri  TYPE string
        !iv_auth TYPE string
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_LOGIN_MANAGER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_LOG_VIEWER

*"* local type definitions
*include zcl_abapgit_log_viewer========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_LOG_VIEWER definition
*"* public declarations
*include zcl_abapgit_log_viewer========cu.
CLASS Lcl_abapgit_log_viewer DEFINITION
*public
  FINAL
  CREATE PRIVATE .

  PUBLIC SECTION.

    CLASS-METHODS show_log
      IMPORTING
        !ii_log TYPE REF TO Lif_abapgit_log .
    CLASS-METHODS to_html
      IMPORTING
        !ii_log        TYPE REF TO Lif_abapgit_log
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    CLASS-METHODS write_log
      IMPORTING
        !ii_log TYPE REF TO Lif_abapgit_log .
*"* protected declarations
*include zcl_abapgit_log_viewer========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_log_viewer========ci.
  PRIVATE SECTION.
    TYPES:
      BEGIN OF ty_log_out,
        type      TYPE icon_d,
        msg       TYPE string,
        obj_type  TYPE trobjtype,
        obj_name  TYPE sobj_name,
        exception TYPE REF TO cx_root,
        longtext  TYPE icon_d,
        t100      TYPE icon_d,
        source    TYPE icon_d,
        callstack TYPE icon_d,
        cell_type TYPE salv_t_int4_column,
      END OF ty_log_out.
    TYPES:
      ty_log_outs TYPE STANDARD TABLE OF ty_log_out
                                WITH NON-UNIQUE DEFAULT KEY.

    CLASS-METHODS:
      prepare_log_for_display
        IMPORTING
          ii_log            TYPE REF TO Lif_abapgit_log
        RETURNING
          VALUE(rt_log_out) TYPE ty_log_outs,

      show_longtext
        IMPORTING
          is_log TYPE ty_log_out
        RAISING
          Lcx_abapgit_exception,

      goto_source
        IMPORTING
          is_log TYPE ty_log_out
        RAISING
          Lcx_abapgit_exception,

      goto_callstack
        IMPORTING
          is_log TYPE ty_log_out
        RAISING
          Lcx_abapgit_exception,

      goto_t100_message
        IMPORTING
          is_log TYPE ty_log_out
        RAISING
          Lcx_abapgit_exception,

      on_link_click FOR EVENT link_click OF cl_salv_events_table
        IMPORTING row column,

      dispatch
        IMPORTING
          is_log    TYPE ty_log_out
          iv_column TYPE salv_de_column
        RAISING
          Lcx_abapgit_exception,

      calculate_cell_type,

      get_exception_viewer
        IMPORTING
          is_log                     TYPE ty_log_out
        RETURNING
          VALUE(ro_exception_viewer) TYPE REF TO Lcl_abapgit_exception_viewer.

    CLASS-DATA:
      gt_log TYPE ty_log_outs.

endclass. "ZCL_ABAPGIT_LOG_VIEWER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_MIGRATIONS

*"* local type definitions
*include zcl_abapgit_migrations========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_MIGRATIONS definition
*"* public declarations
*include zcl_abapgit_migrations========cu.
CLASS Lcl_abapgit_migrations DEFINITION
   FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    CLASS-METHODS run
      RAISING
        Lcx_abapgit_exception
        Lcx_abapgit_not_found.

*"* protected declarations
*include zcl_abapgit_migrations========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_migrations========ci.
  PRIVATE SECTION.

    CLASS-METHODS migrate_offline_repos.
endclass. "ZCL_ABAPGIT_MIGRATIONS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_NEWS

*"* local type definitions
*include zcl_abapgit_news==============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_NEWS definition
*"* public declarations
*include zcl_abapgit_news==============cu.
CLASS Lcl_abapgit_news DEFINITION
*public
  FINAL
  CREATE PRIVATE


.

  PUBLIC SECTION.

    TYPES:
      BEGIN OF ty_log,
        version      TYPE string,
        pos_to_cur   TYPE i,
        is_header    TYPE abap_bool,
        is_important TYPE abap_bool,
        text         TYPE string,
      END OF ty_log .
    TYPES:
      ty_logs TYPE STANDARD TABLE OF ty_log WITH DEFAULT KEY .

    CONSTANTS c_tail_length TYPE i VALUE 5 ##NO_TEXT.     " Number of versions to display if no updates

    CLASS-METHODS create     " TODO REFACTOR
      IMPORTING
        !io_repo           TYPE REF TO Lcl_abapgit_repo
      RETURNING
        VALUE(ro_instance) TYPE REF TO Lcl_abapgit_news
      RAISING
        Lcx_abapgit_exception .
    METHODS get_log
      RETURNING
        VALUE(rt_log) TYPE ty_logs .
    METHODS has_news
      RETURNING
        VALUE(rv_boolean) TYPE abap_bool .
    METHODS has_important
      RETURNING
        VALUE(rv_boolean) TYPE abap_bool .
    METHODS has_updates
      RETURNING
        VALUE(rv_boolean) TYPE abap_bool .
    METHODS has_unseen
      RETURNING
        VALUE(rv_boolean) TYPE abap_bool .
    METHODS constructor
      IMPORTING
        !iv_rawdata          TYPE xstring
        !iv_lastseen_version TYPE string
        !iv_current_version  TYPE string
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_news==============co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_news==============ci.
  PRIVATE SECTION.

    DATA mt_log TYPE ty_logs .
    DATA mv_current_version TYPE string .
    DATA mv_lastseen_version TYPE string .
    DATA mv_latest_version TYPE string .

    METHODS latest_version
      RETURNING
        VALUE(rv_version) TYPE string .
    CLASS-METHODS parse_line
      IMPORTING
        !iv_line            TYPE string
        !iv_current_version TYPE string
      RETURNING
        VALUE(rs_log)       TYPE ty_log .
    CLASS-METHODS parse
      IMPORTING
        !it_lines           TYPE string_table
        !iv_current_version TYPE string
      RETURNING
        VALUE(rt_log)       TYPE ty_logs .
endclass. "ZCL_ABAPGIT_NEWS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECTS_CI_TESTS

*"* local type definitions
*include zcl_abapgit_objects_ci_tests==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECTS_CI_TESTS definition
*"* public declarations
*include zcl_abapgit_objects_ci_tests==cu.
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECTS_FACTORY

*"* local type definitions
*include zcl_abapgit_objects_factory===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECTS_FACTORY definition
*"* public declarations
*include zcl_abapgit_objects_factory===cu.
CLASS Lcl_abapgit_objects_factory DEFINITION
*public
  CREATE PRIVATE
  friends Lcl_abapgit_objects_injector .

  PUBLIC SECTION.
    CLASS-METHODS get_gui_jumper
      RETURNING
        VALUE(ri_gui_jumper) TYPE REF TO Lif_abapgit_gui_jumper .
*"* protected declarations
*include zcl_abapgit_objects_factory===co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_objects_factory===ci.
  PRIVATE SECTION.

    CLASS-DATA gi_gui_jumper TYPE REF TO Lif_abapgit_gui_jumper .
endclass. "ZCL_ABAPGIT_OBJECTS_FACTORY definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ENHO_CLIF

*"* local type definitions
*include zcl_abapgit_object_enho_clif==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ENHO_CLIF definition
*"* public declarations
*include zcl_abapgit_object_enho_clif==cu.
CLASS Lcl_abapgit_object_enho_clif DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS deserialize
      IMPORTING
        !io_xml  TYPE REF TO Lif_abapgit_xml_input
        !io_clif TYPE REF TO cl_enh_tool_clif
      RAISING
        Lcx_abapgit_exception
        cx_enh_root .
    CLASS-METHODS serialize
      IMPORTING
        !io_xml  TYPE REF TO Lif_abapgit_xml_output
        !io_clif TYPE REF TO cl_enh_tool_clif
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_object_enho_clif==co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_enho_clif==ci.
  PRIVATE SECTION.

endclass. "ZCL_ABAPGIT_OBJECT_ENHO_CLIF definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ENHS_BADI_D

*"* local type definitions
*include zcl_abapgit_object_enhs_badi_dccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ENHS_BADI_D definition
*"* public declarations
*include zcl_abapgit_object_enhs_badi_dcu.
CLASS Lcl_abapgit_object_enhs_badi_d DEFINITION .

  PUBLIC SECTION.
    INTERFACES: Lif_abapgit_object_enhs.

*"* protected declarations
*include zcl_abapgit_object_enhs_badi_dco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_enhs_badi_dci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_ENHS_BADI_D definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ENHS_HOOK_D

*"* local type definitions
*include zcl_abapgit_object_enhs_hook_dccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ENHS_HOOK_D definition
*"* public declarations
*include zcl_abapgit_object_enhs_hook_dcu.
CLASS Lcl_abapgit_object_enhs_hook_d DEFINITION .

  PUBLIC SECTION.
    INTERFACES: Lif_abapgit_object_enhs.

*"* protected declarations
*include zcl_abapgit_object_enhs_hook_dco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_enhs_hook_dci.
  PRIVATE SECTION.
    TYPES: BEGIN OF ty_hook_defifnition,
             pgmid     TYPE pgmid,
             obj_name  TYPE trobj_name,
             obj_type  TYPE trobjtype,
             main_type TYPE trobjtype,
             main_name TYPE eu_aname,
             program   TYPE progname,
             def_hooks TYPE enh_hook_def_ext_it,
           END OF ty_hook_defifnition.

endclass. "ZCL_ABAPGIT_OBJECT_ENHS_HOOK_D definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_TABL_COMPAR

*"* local type definitions
*include zcl_abapgit_object_tabl_comparccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_TABL_COMPAR definition
*"* public declarations
*include zcl_abapgit_object_tabl_comparcu.
CLASS Lcl_abapgit_object_tabl_compar DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_comparator .

    METHODS constructor
      IMPORTING
        !ii_local TYPE REF TO Lif_abapgit_xml_input.
*"* protected declarations
*include zcl_abapgit_object_tabl_comparco.
  PROTECTED SECTION.

    TYPES:
      ty_founds  TYPE STANDARD TABLE OF rsfindlst
                           WITH NON-UNIQUE DEFAULT KEY .
    TYPES:
      ty_seu_obj TYPE STANDARD TABLE OF seu_obj
                           WITH NON-UNIQUE DEFAULT KEY .

    DATA mi_local TYPE REF TO Lif_abapgit_xml_input.

    METHODS get_where_used_recursive
      IMPORTING
        !iv_object_name      TYPE csequence
        !iv_depth            TYPE i
        !iv_object_type      TYPE euobj-id
        !it_scope            TYPE ty_seu_obj
      RETURNING
        VALUE(rt_founds_all) TYPE ty_founds
      RAISING
        Lcx_abapgit_exception .
    METHODS is_structure_used_in_db_table
      IMPORTING
        !iv_object_name                       TYPE dd02v-tabname
      RETURNING
        VALUE(rv_is_structure_used_in_db_tab) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS validate
      IMPORTING
        !ii_remote_version TYPE REF TO Lif_abapgit_xml_input
        !ii_local_version  TYPE REF TO Lif_abapgit_xml_input
        !ii_log            TYPE REF TO Lif_abapgit_log
      RETURNING
        VALUE(rv_message)  TYPE string
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_object_tabl_comparci.
  PRIVATE SECTION.

endclass. "ZCL_ABAPGIT_OBJECT_TABL_COMPAR definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OO_FACTORY

*"* local type definitions
*include zcl_abapgit_oo_factory========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OO_FACTORY definition
*"* public declarations
*include zcl_abapgit_oo_factory========cu.
CLASS Lcl_abapgit_oo_factory DEFINITION .

  PUBLIC SECTION.
    CLASS-METHODS:
      make
        IMPORTING
          iv_object_type                   TYPE tadir-object
        RETURNING
          VALUE(ri_object_oriented_object) TYPE REF TO Lif_abapgit_oo_object_fnc.
*"* protected declarations
*include zcl_abapgit_oo_factory========co.
protected section.
*"* private declarations
*include zcl_abapgit_oo_factory========ci.
  PRIVATE SECTION.

    CLASS-DATA gi_object_oriented_object TYPE REF TO Lif_abapgit_oo_object_fnc .
endclass. "ZCL_ABAPGIT_OO_FACTORY definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_PASSWORD_DIALOG

*"* local type definitions
*include zcl_abapgit_password_dialog===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_PASSWORD_DIALOG definition
*"* public declarations
*include zcl_abapgit_password_dialog===cu.
CLASS Lcl_abapgit_password_dialog DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS popup
      IMPORTING
        !iv_repo_url TYPE string
      CHANGING
        !cv_user     TYPE string
        !cv_pass     TYPE string
      RAISING
        Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_password_dialog===co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_password_dialog===ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_PASSWORD_DIALOG definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_PERSIST_FACTORY

*"* local type definitions
*include zcl_abapgit_persist_factory===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_PERSIST_FACTORY definition
*"* public declarations
*include zcl_abapgit_persist_factory===cu.
CLASS Lcl_abapgit_persist_factory DEFINITION
*public
  CREATE PRIVATE
     .

  PUBLIC SECTION.

    CLASS-METHODS get_repo
      RETURNING
        VALUE(ri_repo) TYPE REF TO Lif_abapgit_persist_repo .
    CLASS-METHODS get_repo_cs
      RETURNING
        VALUE(ri_repo_cs) TYPE REF TO Lif_abapgit_persist_repo_cs .
    CLASS-METHODS get_settings
      RETURNING
        VALUE(ri_settings) TYPE REF TO Lif_abapgit_persist_settings .
*"* protected declarations
*include zcl_abapgit_persist_factory===co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_persist_factory===ci.
  PRIVATE SECTION.

    CLASS-DATA gi_repo TYPE REF TO Lif_abapgit_persist_repo .
    CLASS-DATA gi_repo_cs TYPE REF TO Lif_abapgit_persist_repo_cs .
    CLASS-DATA gi_settings TYPE REF TO Lif_abapgit_persist_settings .
endclass. "ZCL_ABAPGIT_PERSIST_FACTORY definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_PERSIST_PACKAGES

*"* local type definitions
*include zcl_abapgit_persist_packages==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_PERSIST_PACKAGES definition
*"* public declarations
*include zcl_abapgit_persist_packages==cu.
CLASS Lcl_abapgit_persist_packages DEFINITION
*public
  CREATE PRIVATE .

  PUBLIC SECTION.

    TYPES:
      BEGIN OF ty_package,
        devclass   TYPE scompkdtln-devclass,
        component  TYPE scompkdtln-component,
        comp_posid TYPE scompkdtln-comp_posid,
      END OF ty_package .
    TYPES:
      ty_packages TYPE HASHED TABLE OF ty_package WITH UNIQUE KEY devclass .

    METHODS init .
    METHODS modify
      IMPORTING
        !iv_package    TYPE scompkdtln-devclass
        !iv_component  TYPE scompkdtln-component OPTIONAL
        !iv_comp_posid TYPE scompkdtln-comp_posid OPTIONAL
      RAISING
        Lcx_abapgit_exception .
    METHODS read
      IMPORTING
        !iv_package       TYPE scompkdtln-devclass
      RETURNING
        VALUE(rs_package) TYPE ty_package .
    CLASS-METHODS get_instance
      RETURNING
        VALUE(ro_persist) TYPE REF TO Lcl_abapgit_persist_packages .
*"* protected declarations
*include zcl_abapgit_persist_packages==co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_persist_packages==ci.
  PRIVATE SECTION.

    CLASS-DATA go_persist TYPE REF TO Lcl_abapgit_persist_packages.
    DATA mt_packages TYPE ty_packages.

    METHODS from_xml
      IMPORTING
        iv_xml             TYPE string
      RETURNING
        VALUE(rt_packages) TYPE ty_packages
      RAISING
        Lcx_abapgit_exception.
    METHODS to_xml
      IMPORTING
        it_packages   TYPE ty_packages
      RETURNING
        VALUE(rv_xml) TYPE string
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_PERSIST_PACKAGES definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_PERSIST_SETTINGS

*"* local type definitions
*include zcl_abapgit_persist_settings==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_PERSIST_SETTINGS definition
*"* public declarations
*include zcl_abapgit_persist_settings==cu.
CLASS Lcl_abapgit_persist_settings DEFINITION
*public
  CREATE PRIVATE
  friends Lcl_abapgit_persist_factory .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_persist_settings .
*"* protected declarations
*include zcl_abapgit_persist_settings==co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_persist_settings==ci.
  PRIVATE SECTION.
    DATA mo_settings TYPE REF TO Lcl_abapgit_settings .

endclass. "ZCL_ABAPGIT_PERSIST_SETTINGS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_POPUP_BRANCH_LIST

*"* local type definitions
*include zcl_abapgit_popup_branch_list=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_POPUP_BRANCH_LIST definition
*"* public declarations
*include zcl_abapgit_popup_branch_list=cu.
CLASS Lcl_abapgit_popup_branch_list DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_render_item.
    INTERFACES Lif_abapgit_html_popup.

    CLASS-METHODS create
      IMPORTING
        !iv_url             TYPE string
        !iv_default_branch  TYPE string OPTIONAL
        !iv_show_new_option TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ri_popup)     TYPE REF TO Lif_abapgit_html_popup.

    METHODS constructor
      IMPORTING
        !iv_url             TYPE string
        !iv_default_branch  TYPE string OPTIONAL
        !iv_show_new_option TYPE abap_bool DEFAULT abap_false.

*"* protected declarations
*include zcl_abapgit_popup_branch_list=co.
protected section.
*"* private declarations
*include zcl_abapgit_popup_branch_list=ci.
  PRIVATE SECTION.

    DATA mv_repo_url TYPE string.
    DATA mv_default_branch TYPE string.
    DATA mv_show_new_option TYPE abap_bool.

    METHODS fetch_branch_list
      RETURNING
        VALUE(rt_branches) TYPE Lif_abapgit_git_definitions=>ty_git_branch_list_tt
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_POPUP_BRANCH_LIST definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_POPUP_CODE_INSP

*"* local type definitions
*include zcl_abapgit_popup_code_insp===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_POPUP_CODE_INSP definition
*"* public declarations
*include zcl_abapgit_popup_code_insp===cu.
CLASS Lcl_abapgit_popup_code_insp DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_render_item .
    INTERFACES Lif_abapgit_html_popup .

    CLASS-METHODS create
      RETURNING
        VALUE(ri_popup) TYPE REF TO Lif_abapgit_html_popup .
*"* protected declarations
*include zcl_abapgit_popup_code_insp===co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_popup_code_insp===ci.
  PRIVATE SECTION.

    METHODS fetch_list
      RETURNING
        VALUE(rt_list) TYPE Lif_abapgit_code_inspector=>ty_variants
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_POPUP_CODE_INSP definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_POPUP_PULL_REQUEST

*"* local type definitions
*include zcl_abapgit_popup_pull_requestccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_POPUP_PULL_REQUEST definition
*"* public declarations
*include zcl_abapgit_popup_pull_requestcu.
CLASS Lcl_abapgit_popup_pull_request DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_render_item.
    INTERFACES Lif_abapgit_html_popup.

    CLASS-METHODS create
      IMPORTING
        iv_url          TYPE string
      RETURNING
        VALUE(ri_popup) TYPE REF TO Lif_abapgit_html_popup.

    METHODS constructor
      IMPORTING
        iv_url TYPE string.

*"* protected declarations
*include zcl_abapgit_popup_pull_requestco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_popup_pull_requestci.
  PRIVATE SECTION.

    DATA mv_repo_url TYPE string.

    METHODS fetch_pull_request_list
      RETURNING
        VALUE(rt_pulls) TYPE Lif_abapgit_pr_enum_provider=>ty_pull_requests
      RAISING
        Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_POPUP_PULL_REQUEST definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_POPUP_TAG_LIST

*"* local type definitions
*include zcl_abapgit_popup_tag_list====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_POPUP_TAG_LIST definition
*"* public declarations
*include zcl_abapgit_popup_tag_list====cu.
CLASS Lcl_abapgit_popup_tag_list DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_render_item.
    INTERFACES Lif_abapgit_html_popup.

    CLASS-METHODS create
      IMPORTING
        iv_url          TYPE string
      RETURNING
        VALUE(ri_popup) TYPE REF TO Lif_abapgit_html_popup.

    METHODS constructor
      IMPORTING
        iv_url TYPE string.

*"* protected declarations
*include zcl_abapgit_popup_tag_list====co.
protected section.
*"* private declarations
*include zcl_abapgit_popup_tag_list====ci.
  PRIVATE SECTION.

    DATA mv_repo_url TYPE string.

    METHODS fetch_tag_list
      RETURNING
        VALUE(rt_tags) TYPE Lif_abapgit_git_definitions=>ty_git_branch_list_tt
      RAISING
        Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_POPUP_TAG_LIST definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_PROGRESS

*"* local type definitions
*include zcl_abapgit_progress==========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_PROGRESS definition
*"* public declarations
*include zcl_abapgit_progress==========cu.
CLASS Lcl_abapgit_progress DEFINITION
*public
  FINAL
  CREATE PROTECTED .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_progress .

    CLASS-METHODS set_instance
      IMPORTING
        !ii_progress TYPE REF TO Lif_abapgit_progress .
    CLASS-METHODS get_instance
      IMPORTING
        !iv_total          TYPE i
      RETURNING
        VALUE(ri_progress) TYPE REF TO Lif_abapgit_progress .
*"* protected declarations
*include zcl_abapgit_progress==========co.
  PROTECTED SECTION.

    DATA mv_total TYPE i .
    CLASS-DATA gi_progress TYPE REF TO Lif_abapgit_progress .

    METHODS calc_pct
      IMPORTING
        !iv_current   TYPE i
      RETURNING
        VALUE(rv_pct) TYPE i .
*"* private declarations
*include zcl_abapgit_progress==========ci.
  PRIVATE SECTION.

    DATA mv_cv_time_next TYPE sy-uzeit .
    DATA mv_cv_datum_next TYPE sy-datum .
endclass. "ZCL_ABAPGIT_PROGRESS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_PROXY_AUTH

*"* local type definitions
*include zcl_abapgit_proxy_auth========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_PROXY_AUTH definition
*"* public declarations
*include zcl_abapgit_proxy_auth========cu.
CLASS Lcl_abapgit_proxy_auth DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    CLASS-METHODS:
      run
        IMPORTING ii_client TYPE REF TO if_http_client
        RAISING   Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_proxy_auth========co.
protected section.
*"* private declarations
*include zcl_abapgit_proxy_auth========ci.
  PRIVATE SECTION.
    CLASS-DATA: gv_username TYPE string,
                gv_password TYPE string.

    CLASS-METHODS: enter RAISING Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_PROXY_AUTH definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_PROXY_CONFIG

*"* local type definitions
*include zcl_abapgit_proxy_config======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_PROXY_CONFIG definition
*"* public declarations
*include zcl_abapgit_proxy_config======cu.
CLASS Lcl_abapgit_proxy_config DEFINITION  FINAL CREATE PUBLIC.

  PUBLIC SECTION.
    METHODS:
      constructor,

      get_proxy_url
        IMPORTING
          iv_repo_url         TYPE csequence OPTIONAL
        RETURNING
          VALUE(rv_proxy_url) TYPE string,

      get_proxy_port
        IMPORTING
          iv_repo_url    TYPE csequence OPTIONAL
        RETURNING
          VALUE(rv_port) TYPE string,

      get_proxy_authentication
        IMPORTING
          iv_repo_url    TYPE csequence OPTIONAL
        RETURNING
          VALUE(rv_auth) TYPE abap_bool.

*"* protected declarations
*include zcl_abapgit_proxy_config======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_proxy_config======ci.
  PRIVATE SECTION.
    DATA: mo_settings TYPE REF TO Lcl_abapgit_settings,
          mi_exit     TYPE REF TO Lif_abapgit_exit.

    METHODS:
      bypass_proxy
        IMPORTING
          iv_repo_url            TYPE csequence OPTIONAL
        RETURNING
          VALUE(rv_bypass_proxy) TYPE abap_bool.

endclass. "ZCL_ABAPGIT_PROXY_CONFIG definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_PR_ENUMERATOR

*"* local type definitions
*include zcl_abapgit_pr_enumerator=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_PR_ENUMERATOR definition
*"* public declarations
*include zcl_abapgit_pr_enumerator=====cu.
CLASS Lcl_abapgit_pr_enumerator DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS constructor
      IMPORTING
        iv_url TYPE string
      RAISING
        Lcx_abapgit_exception.

    METHODS get_pulls
      RETURNING
        VALUE(rt_pulls) TYPE Lif_abapgit_pr_enum_provider=>ty_pull_requests
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS new
      IMPORTING
        iv_url             TYPE string
      RETURNING
        VALUE(ro_instance) TYPE REF TO Lcl_abapgit_pr_enumerator
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_pr_enumerator=====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_pr_enumerator=====ci.
  PRIVATE SECTION.
    DATA mv_repo_url TYPE string.
    DATA mi_enum_provider TYPE REF TO Lif_abapgit_pr_enum_provider.

    CLASS-METHODS create_provider
      IMPORTING
        iv_repo_url        TYPE string
      RETURNING
        VALUE(ri_provider) TYPE REF TO Lif_abapgit_pr_enum_provider
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_PR_ENUMERATOR definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SERVICES_ABAPGIT

*"* local type definitions
*include zcl_abapgit_services_abapgit==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SERVICES_ABAPGIT definition
*"* public declarations
*include zcl_abapgit_services_abapgit==cu.
CLASS Lcl_abapgit_services_abapgit DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CONSTANTS c_abapgit_repo TYPE string VALUE 'https://github.com/abapGit/abapGit' ##NO_TEXT.
    CONSTANTS c_abapgit_homepage TYPE string VALUE 'https://www.abapgit.org' ##NO_TEXT.
    CONSTANTS c_abapgit_wikipage TYPE string VALUE 'https://docs.abapgit.org' ##NO_TEXT.
    CONSTANTS c_dotabap_homepage TYPE string VALUE 'https://dotabap.org' ##NO_TEXT.
    CONSTANTS c_abapgit_class TYPE seoclsname VALUE `ZCX_ABAPGIT_EXCEPTION` ##NO_TEXT.
    CONSTANTS c_changelog_path TYPE string VALUE '/blob/main/changelog.txt' ##NO_TEXT.

    CLASS-METHODS open_abapgit_homepage
      IMPORTING
        iv_page TYPE string OPTIONAL
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS open_abapgit_wikipage
      IMPORTING
        iv_page TYPE string OPTIONAL
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS open_dotabap_homepage
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS open_abapgit_changelog
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS is_installed
      RETURNING
        VALUE(rv_devclass) TYPE tadir-devclass .
    CLASS-METHODS prepare_gui_startup
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS get_abapgit_tcode
      RETURNING
        VALUE(rv_tcode) TYPE tcode .
*"* protected declarations
*include zcl_abapgit_services_abapgit==co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_services_abapgit==ci.
  PRIVATE SECTION.

    CLASS-METHODS set_start_repo_from_package
      IMPORTING
        !iv_package TYPE devclass
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS get_package_from_adt
      RETURNING
        VALUE(rv_package) TYPE devclass .
    CLASS-METHODS check_sapgui
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS open_url_in_browser
      IMPORTING
        !iv_url TYPE string
      RAISING
        Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_SERVICES_ABAPGIT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SOTS_HANDLER

*"* local type definitions
*include zcl_abapgit_sots_handler======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SOTS_HANDLER definition
*"* public declarations
*include zcl_abapgit_sots_handler======cu.
CLASS Lcl_abapgit_sots_handler DEFINITION
*public
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    TYPES:
      BEGIN OF ty_sots,
        header  TYPE sotr_headu,
        entries TYPE sotr_textl_tt,
      END OF ty_sots.
    TYPES:
      ty_sots_tt TYPE STANDARD TABLE OF ty_sots WITH DEFAULT KEY.
    TYPES:
      ty_sots_use_tt TYPE STANDARD TABLE OF sotr_useu WITH DEFAULT KEY.

    CLASS-METHODS read_sots
      IMPORTING
        !iv_pgmid    TYPE pgmid DEFAULT 'R3TR'
        !iv_object   TYPE trobjtype
        !iv_obj_name TYPE csequence
        !io_xml      TYPE REF TO Lif_abapgit_xml_output OPTIONAL
        !io_i18n_params TYPE REF TO Lcl_abapgit_i18n_params
      EXPORTING
        !et_sots     TYPE ty_sots_tt
        !et_sots_use TYPE ty_sots_use_tt
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS create_sots
      IMPORTING
        !iv_package TYPE devclass
        !io_xml     TYPE REF TO Lif_abapgit_xml_input OPTIONAL
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS create_sots_from_data
      IMPORTING
        !iv_package  TYPE devclass
        !it_sots     TYPE ty_sots_tt OPTIONAL
        !it_sots_use TYPE ty_sots_use_tt OPTIONAL
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS delete_sots
      IMPORTING
        !iv_pgmid    TYPE pgmid DEFAULT 'R3TR'
        !iv_object   TYPE trobjtype
        !iv_obj_name TYPE csequence
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_sots_handler======co.
  PROTECTED SECTION.

    CLASS-METHODS get_sots_usage
      IMPORTING
        !iv_pgmid          TYPE pgmid
        !iv_object         TYPE trobjtype
        !iv_obj_name       TYPE csequence
      RETURNING
        VALUE(rt_sots_use) TYPE ty_sots_use_tt.

    CLASS-METHODS get_sots_4_concept
      IMPORTING
        !iv_concept    TYPE sotr_conc
      RETURNING
        VALUE(rs_sots) TYPE ty_sots.

*"* private declarations
*include zcl_abapgit_sots_handler======ci.
  PRIVATE SECTION.

endclass. "ZCL_ABAPGIT_SOTS_HANDLER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_STRING_MAP

*"* local type definitions
*include zcl_abapgit_string_map========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_STRING_MAP definition
*"* public declarations
*include zcl_abapgit_string_map========cu.
CLASS Lcl_abapgit_string_map DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    TYPES:
      BEGIN OF ty_entry,
        k TYPE string,
        v TYPE string,
      END OF ty_entry .
    TYPES:
      ty_entries TYPE SORTED TABLE OF ty_entry WITH UNIQUE KEY k .

    DATA mt_entries TYPE ty_entries READ-ONLY .

    CLASS-METHODS create
      IMPORTING
        !iv_case_insensitive TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ro_instance)   TYPE REF TO Lcl_abapgit_string_map .
    METHODS constructor
      IMPORTING
        !iv_case_insensitive TYPE abap_bool DEFAULT abap_false .
    METHODS get
      IMPORTING
        !iv_key       TYPE string
      RETURNING
        VALUE(rv_val) TYPE string .
    METHODS has
      IMPORTING
        !iv_key       TYPE string
      RETURNING
        VALUE(rv_has) TYPE abap_bool .
    METHODS set
      IMPORTING
        !iv_key       TYPE string
        !iv_val       TYPE csequence OPTIONAL
      RETURNING
        VALUE(ro_map) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception .
    METHODS size
      RETURNING
        VALUE(rv_size) TYPE i .
    METHODS is_empty
      RETURNING
        VALUE(rv_yes) TYPE abap_bool .
    METHODS delete
      IMPORTING
        !iv_key TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS clear
      RAISING
        Lcx_abapgit_exception .
    METHODS to_abap
      CHANGING
        !cs_container TYPE any
      RAISING
        Lcx_abapgit_exception .
    METHODS strict
      IMPORTING
        !iv_strict         TYPE abap_bool DEFAULT abap_true
      RETURNING
        VALUE(ro_instance) TYPE REF TO Lcl_abapgit_string_map .
    METHODS freeze .
    METHODS merge
      IMPORTING
        !io_string_map TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(ro_instance) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception .

*"* protected declarations
*include zcl_abapgit_string_map========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_string_map========ci.
  PRIVATE SECTION.
    DATA mv_read_only TYPE abap_bool.
    DATA mv_is_strict TYPE abap_bool.
    DATA mv_case_insensitive TYPE abap_bool.

endclass. "ZCL_ABAPGIT_STRING_MAP definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SYNTAX_HIGHLIGHTER

*"* local type definitions
*include zcl_abapgit_syntax_highlighterccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SYNTAX_HIGHLIGHTER definition
*"* public declarations
*include zcl_abapgit_syntax_highlightercu.
CLASS Lcl_abapgit_syntax_highlighter DEFINITION
*public
  ABSTRACT
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS process_line
      IMPORTING
        !iv_line       TYPE string
      RETURNING
        VALUE(rv_line) TYPE string .
    METHODS set_hidden_chars
      IMPORTING
        !iv_hidden_chars TYPE abap_bool .
*"* protected declarations
*include zcl_abapgit_syntax_highlighterco.
  PROTECTED SECTION.

    TYPES:
      BEGIN OF ty_match,
        token    TYPE c LENGTH 1,  " Type of matches
        offset   TYPE i,      " Beginning position of the string that should be formatted
        length   TYPE i,      " Length of the string that should be formatted
        text_tag TYPE string, " Type of text tag
      END OF ty_match .
    TYPES:
      ty_match_tt  TYPE STANDARD TABLE OF ty_match WITH DEFAULT KEY .
    TYPES:
      BEGIN OF ty_rule,
        regex             TYPE REF TO cl_abap_regex,
        token             TYPE c LENGTH 1,
        style             TYPE string,
        relevant_submatch TYPE i,
      END OF ty_rule .

    CONSTANTS c_token_none TYPE c VALUE '.' ##NO_TEXT.
    DATA:
      mt_rules TYPE STANDARD TABLE OF ty_rule .
    DATA mv_hidden_chars TYPE abap_bool .

    METHODS add_rule
      IMPORTING
        !iv_regex    TYPE string
        !iv_token    TYPE c
        !iv_style    TYPE string
        !iv_submatch TYPE i OPTIONAL .
    METHODS parse_line
      IMPORTING
        !iv_line          TYPE string
      RETURNING
        VALUE(rt_matches) TYPE ty_match_tt .
    METHODS order_matches
      IMPORTING
        !iv_line    TYPE string
      CHANGING
        !ct_matches TYPE ty_match_tt .
    METHODS extend_matches
      IMPORTING
        !iv_line    TYPE string
      CHANGING
        !ct_matches TYPE ty_match_tt .
    METHODS format_line
      IMPORTING
        !iv_line       TYPE string
        !it_matches    TYPE ty_match_tt
      RETURNING
        VALUE(rv_line) TYPE string .
    METHODS apply_style
      IMPORTING
        !iv_line       TYPE string
        !iv_class      TYPE string
      RETURNING
        VALUE(rv_line) TYPE string .
    METHODS is_whitespace
      IMPORTING
        !iv_string       TYPE string
      RETURNING
        VALUE(rv_result) TYPE abap_bool .
    METHODS show_hidden_chars
      IMPORTING
        !iv_line       TYPE string
      RETURNING
        VALUE(rv_line) TYPE string .
*"* private declarations
*include zcl_abapgit_syntax_highlighterci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_SYNTAX_HIGHLIGHTER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SYNTAX_JS

*"* local type definitions
*include zcl_abapgit_syntax_js=========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SYNTAX_JS definition
*"* public declarations
*include zcl_abapgit_syntax_js=========cu.
CLASS Lcl_abapgit_syntax_js DEFINITION
*public
  INHERITING FROM Lcl_abapgit_syntax_highlighter
  CREATE PUBLIC .

  PUBLIC SECTION.

    CONSTANTS:
      " JavaScript
      " 1) General keywords
      " 2) Variable types
      " 3) HTML Tags
      BEGIN OF c_css,
        keyword   TYPE string VALUE 'keyword',
        text      TYPE string VALUE 'text',
        comment   TYPE string VALUE 'comment',
        variables TYPE string VALUE 'variables',
      END OF c_css .
    CONSTANTS:
      BEGIN OF c_token,
        keyword   TYPE c VALUE 'K',
        text      TYPE c VALUE 'T',
        comment   TYPE c VALUE 'C',
        variables TYPE c VALUE 'V',
      END OF c_token .
    CONSTANTS:
      BEGIN OF c_regex,
        " comments /* ... */ or //
        comment TYPE string VALUE '\/\*.*\*\/|\/\*|\*\/|\/\/',
        " single or double quoted strings
        text    TYPE string VALUE '"|''|`',
        " in general keywords don't contain numbers (except -ms-scrollbar-3dlight-color)
        keyword TYPE string VALUE '\b[a-z-]+\b',
      END OF c_regex .

    CLASS-METHODS class_constructor .
    METHODS constructor .
*"* protected declarations
*include zcl_abapgit_syntax_js=========co.
  PROTECTED SECTION.
    TYPES: ty_token TYPE c LENGTH 1.

    TYPES: BEGIN OF ty_keyword,
             keyword TYPE string,
             token   TYPE ty_token,
           END OF ty_keyword.

    CLASS-DATA gt_keywords TYPE HASHED TABLE OF ty_keyword WITH UNIQUE KEY keyword.
    CLASS-DATA gv_comment TYPE abap_bool.

    CLASS-METHODS init_keywords.
    CLASS-METHODS insert_keywords
      IMPORTING
        iv_keywords TYPE string
        iv_token    TYPE ty_token.
    CLASS-METHODS is_keyword
      IMPORTING iv_chunk      TYPE string
      RETURNING VALUE(rv_yes) TYPE abap_bool.

    METHODS order_matches REDEFINITION.
    METHODS parse_line REDEFINITION.

*"* private declarations
*include zcl_abapgit_syntax_js=========ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_SYNTAX_JS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SYNTAX_JSON

*"* local type definitions
*include zcl_abapgit_syntax_json=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SYNTAX_JSON definition
*"* public declarations
*include zcl_abapgit_syntax_json=======cu.
CLASS Lcl_abapgit_syntax_json DEFINITION
*public
  INHERITING FROM Lcl_abapgit_syntax_highlighter
  CREATE PUBLIC.

  PUBLIC SECTION.

    CONSTANTS:
      " JSON... This was easy :-)
      " JSONC... With comments
      BEGIN OF c_css,
        keyword TYPE string VALUE 'selectors',              "#EC NOTEXT
        text    TYPE string VALUE 'text',                   "#EC NOTEXT
        values  TYPE string VALUE 'properties',             "#EC NOTEXT
        comment TYPE string VALUE 'comment',                "#EC NOTEXT
      END OF c_css.
    CONSTANTS:
      BEGIN OF c_token,
        keyword TYPE c VALUE 'K',                           "#EC NOTEXT
        text    TYPE c VALUE 'T',                           "#EC NOTEXT
        values  TYPE c VALUE 'V',                           "#EC NOTEXT
        comment TYPE c VALUE 'C',                           "#EC NOTEXT
      END OF c_token.
    CONSTANTS:
      BEGIN OF c_regex,
        " comments /* ... */ or //
        comment TYPE string VALUE '\/\*.*\*\/|\/\*|\*\/|\/\/', "#EC NOTEXT
        " not much here
        keyword TYPE string VALUE 'true|false|null',        "#EC NOTEXT
        " double quoted strings
        text    TYPE string VALUE '"',                      "#EC NOTEXT
      END OF c_regex.

    METHODS constructor.
*"* protected declarations
*include zcl_abapgit_syntax_json=======co.
  PROTECTED SECTION.

    METHODS order_matches REDEFINITION.

*"* private declarations
*include zcl_abapgit_syntax_json=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_SYNTAX_JSON definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SYNTAX_TXT

*"* local type definitions
*include zcl_abapgit_syntax_txt========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SYNTAX_TXT definition
*"* public declarations
*include zcl_abapgit_syntax_txt========cu.
CLASS Lcl_abapgit_syntax_txt DEFINITION
*public
  INHERITING FROM Lcl_abapgit_syntax_highlighter
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS constructor .

    METHODS process_line
        REDEFINITION .
*"* protected declarations
*include zcl_abapgit_syntax_txt========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_syntax_txt========ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_SYNTAX_TXT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SYNTAX_XML

*"* local type definitions
*include zcl_abapgit_syntax_xml========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SYNTAX_XML definition
*"* public declarations
*include zcl_abapgit_syntax_xml========cu.
CLASS Lcl_abapgit_syntax_xml DEFINITION
*public
  INHERITING FROM Lcl_abapgit_syntax_highlighter
  CREATE PUBLIC


.

  PUBLIC SECTION.

    CONSTANTS:
      BEGIN OF c_css,
        xml_tag  TYPE string VALUE 'xml_tag',
        attr     TYPE string VALUE 'attr',
        attr_val TYPE string VALUE 'attr_val',
        comment  TYPE string VALUE 'comment',
      END OF c_css .
    CONSTANTS:
      BEGIN OF c_token,
        xml_tag  TYPE c VALUE 'X',
        attr     TYPE c VALUE 'A',
        attr_val TYPE c VALUE 'V',
        comment  TYPE c VALUE 'C',
      END OF c_token .
    CONSTANTS:
      BEGIN OF c_regex,
        "for XML tags, we will use a submatch
        " main pattern includes quoted strings so we can ignore < and > in attr values
        xml_tag  TYPE string VALUE '(?:"[^"]*")|(?:''[^'']*'')|(?:`[^`]*`)|([<>])',
        attr     TYPE string VALUE '(?:^|\s)[-a-z:_0-9]+\s*(?==\s*["|''|`])',
        attr_val TYPE string VALUE '("[^"]*")|(''[^'']*'')|(`[^`]*`)',
        " comments <!-- ... -->
        comment  TYPE string VALUE '[\<]!--.*--[\>]|[\<]!--|--[\>]',
      END OF c_regex .

    METHODS constructor .
*"* protected declarations
*include zcl_abapgit_syntax_xml========co.
  PROTECTED SECTION.
    CLASS-DATA gv_comment TYPE abap_bool.

    METHODS order_matches REDEFINITION.

*"* private declarations
*include zcl_abapgit_syntax_xml========ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_SYNTAX_XML definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_UI_FACTORY

*"* local type definitions
*include zcl_abapgit_ui_factory========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_UI_FACTORY definition
*"* public declarations
*include zcl_abapgit_ui_factory========cu.
CLASS Lcl_abapgit_ui_factory DEFINITION
*public
  CREATE PRIVATE
  friends Lcl_abapgit_ui_injector .

  PUBLIC SECTION.

    CLASS-METHODS get_asset_manager
      RETURNING
        VALUE(ri_asset_man) TYPE REF TO Lif_abapgit_gui_asset_manager
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS get_popups
      RETURNING
        VALUE(ri_popups) TYPE REF TO Lif_abapgit_popups .
    CLASS-METHODS get_gui
      RETURNING
        VALUE(ro_gui) TYPE REF TO Lcl_abapgit_gui
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS get_gui_services
      RETURNING
        VALUE(ri_gui_services) TYPE REF TO Lif_abapgit_gui_services
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS get_frontend_services
      RETURNING
        VALUE(ri_fe_serv) TYPE REF TO Lif_abapgit_frontend_services .
    CLASS-METHODS get_html_viewer
      IMPORTING
        !io_container           TYPE REF TO cl_gui_container DEFAULT cl_gui_container=>screen0
        !iv_disable_query_table TYPE abap_bool DEFAULT abap_true
      RETURNING
        VALUE(ri_viewer)        TYPE REF TO Lif_abapgit_html_viewer .
*"* protected declarations
*include zcl_abapgit_ui_factory========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_ui_factory========ci.
  PRIVATE SECTION.

    CLASS-DATA gi_popups TYPE REF TO Lif_abapgit_popups .
    CLASS-DATA gi_html_viewer TYPE REF TO Lif_abapgit_html_viewer .
    CLASS-DATA go_gui TYPE REF TO Lcl_abapgit_gui .
    CLASS-DATA gi_fe_services TYPE REF TO Lif_abapgit_frontend_services .
    CLASS-DATA gi_gui_services TYPE REF TO Lif_abapgit_gui_services .
endclass. "ZCL_ABAPGIT_UI_FACTORY definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_URL

*"* local type definitions
*include zcl_abapgit_url===============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_URL definition
*"* public declarations
*include zcl_abapgit_url===============cu.
CLASS Lcl_abapgit_url DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS validate
      IMPORTING
        !iv_url TYPE string
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS host
      IMPORTING
        !iv_url        TYPE string
      RETURNING
        VALUE(rv_host) TYPE string
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS name
      IMPORTING
        !iv_url        TYPE string
        !iv_validate   TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(rv_name) TYPE string
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS path_name
      IMPORTING
        !iv_url             TYPE string
      RETURNING
        VALUE(rv_path_name) TYPE string
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS is_abapgit_repo
      IMPORTING
        !iv_url           TYPE string
      RETURNING
        VALUE(rv_abapgit) TYPE abap_bool .
    CLASS-METHODS url_address
      IMPORTING
        !iv_url          TYPE string
      RETURNING
        VALUE(rv_adress) TYPE string
      RAISING
        Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_url===============co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_url===============ci.
  PRIVATE SECTION.

    CLASS-METHODS regex
      IMPORTING
        !iv_url  TYPE string
      EXPORTING
        !ev_host TYPE string
        !ev_path TYPE string
        !ev_name TYPE string
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_URL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_USER_RECORD

*"* local type definitions
*include zcl_abapgit_user_record=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_USER_RECORD definition
*"* public declarations
*include zcl_abapgit_user_record=======cu.
CLASS Lcl_abapgit_user_record DEFINITION
*public
  FINAL
  CREATE PRIVATE


.

  PUBLIC SECTION.
    CLASS-METHODS reset.
    CLASS-METHODS get_instance
      IMPORTING
        !iv_user       TYPE sy-uname
      RETURNING
        VALUE(ro_user) TYPE REF TO Lcl_abapgit_user_record.
    METHODS constructor
      IMPORTING
        !iv_user TYPE sy-uname.
    METHODS get_name
      RETURNING
        VALUE(rv_name) TYPE string.
    METHODS get_email
      RETURNING
        VALUE(rv_email) TYPE string.
    CLASS-METHODS get_title
      IMPORTING
        iv_username     TYPE sy-uname
      RETURNING
        VALUE(rv_title) TYPE string.
*"* protected declarations
*include zcl_abapgit_user_record=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_user_record=======ci.
  PRIVATE SECTION.
    TYPES:
      BEGIN OF ty_user,
        user   TYPE sy-uname,
        o_user TYPE REF TO Lcl_abapgit_user_record,
      END OF ty_user.

    CLASS-DATA gt_user TYPE HASHED TABLE OF ty_user WITH UNIQUE KEY user.

    DATA: BEGIN OF ms_user,
            name  TYPE string,
            email TYPE string,
          END OF ms_user .

    METHODS check_user_exists
      IMPORTING
        iv_user     TYPE sy-uname
      EXPORTING
        ev_fullname TYPE string
        ev_email    TYPE string
      RAISING
        Lcx_abapgit_exception.

    METHODS get_user_dtls_from_other_clnt
      IMPORTING
        iv_user TYPE sy-uname.
endclass. "ZCL_ABAPGIT_USER_RECORD definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_UTILS

*"* local type definitions
*include zcl_abapgit_utils=============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_UTILS definition
*"* public declarations
*include zcl_abapgit_utils=============cu.
CLASS Lcl_abapgit_utils DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS is_binary
      IMPORTING
        !iv_data            TYPE xstring
      RETURNING
        VALUE(rv_is_binary) TYPE abap_bool.
    CLASS-METHODS is_valid_email
      IMPORTING
        iv_email        TYPE string
      RETURNING
        VALUE(rv_valid) TYPE abap_bool.
*"* protected declarations
*include zcl_abapgit_utils=============co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_utils=============ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_UTILS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_XML_PRETTY

*"* local type definitions
*include zcl_abapgit_xml_pretty========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_XML_PRETTY definition
*"* public declarations
*include zcl_abapgit_xml_pretty========cu.
CLASS Lcl_abapgit_xml_pretty DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS print
      IMPORTING
        !iv_xml           TYPE string
        !iv_ignore_errors TYPE abap_bool DEFAULT abap_true
        !iv_unpretty      TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(rv_xml)     TYPE string
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_xml_pretty========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_xml_pretty========ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_XML_PRETTY definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ZLIB

*"* local type definitions
*include zcl_abapgit_zlib==============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ZLIB definition
*"* public declarations
*include zcl_abapgit_zlib==============cu.
CLASS Lcl_abapgit_zlib DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    TYPES:
      BEGIN OF ty_decompress,
        raw            TYPE xstring,
        compressed_len TYPE i,
      END OF ty_decompress .

    CLASS-METHODS decompress
      IMPORTING
        !iv_compressed TYPE xsequence
      RETURNING
        VALUE(rs_data) TYPE ty_decompress .

*"* protected declarations
*include zcl_abapgit_zlib==============co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_zlib==============ci.
  PRIVATE SECTION.
    CONSTANTS: c_maxdcodes TYPE i VALUE 30.

    CLASS-DATA: gv_out      TYPE xstring,
                go_lencode  TYPE REF TO Lcl_abapgit_zlib_huffman,
                go_distcode TYPE REF TO Lcl_abapgit_zlib_huffman,
                go_stream   TYPE REF TO Lcl_abapgit_zlib_stream.

    TYPES: BEGIN OF ty_pair,
             length   TYPE i,
             distance TYPE i,
           END OF ty_pair.

    CLASS-METHODS:
      decode
        IMPORTING io_huffman       TYPE REF TO Lcl_abapgit_zlib_huffman
        RETURNING VALUE(rv_symbol) TYPE i,
      map_length
        IMPORTING iv_code          TYPE i
        RETURNING VALUE(rv_length) TYPE i,
      map_distance
        IMPORTING iv_code            TYPE i
        RETURNING VALUE(rv_distance) TYPE i,
      dynamic,
      fixed,
      not_compressed,
      decode_loop,
      read_pair
        IMPORTING iv_length      TYPE i
        RETURNING VALUE(rs_pair) TYPE ty_pair,
      copy_out
        IMPORTING is_pair TYPE ty_pair.

endclass. "ZCL_ABAPGIT_ZLIB definition
*class-pool .
*"* class pool for class ZCX_ABAPGIT_AJSON_ERROR

*"* local type definitions
*include zcx_abapgit_ajson_error=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCX_ABAPGIT_AJSON_ERROR definition
*"* public declarations
*include zcx_abapgit_ajson_error=======cu.
class Lcx_abapgit_ajson_error definition
*public
  inheriting from CX_STATIC_CHECK
  final
  create public .

public section.

  interfaces IF_T100_MESSAGE .

  types:
    ty_rc type c length 4 .

  constants:
    begin of ZCX_AJSON_ERROR,
      msgid type symsgid value '00',
      msgno type symsgno value '001',
      attr1 type scx_attrname value 'A1',
      attr2 type scx_attrname value 'A2',
      attr3 type scx_attrname value 'A3',
      attr4 type scx_attrname value 'A4',
    end of ZCX_AJSON_ERROR .
  data RC type TY_RC read-only .
  data MESSAGE type STRING read-only .
  data LOCATION type STRING read-only .
  data A1 type SYMSGV read-only .
  data A2 type SYMSGV read-only .
  data A3 type SYMSGV read-only .
  data A4 type SYMSGV read-only .

  methods CONSTRUCTOR
    importing
      !TEXTID like IF_T100_MESSAGE=>T100KEY optional
      !PREVIOUS like PREVIOUS optional
      !RC type TY_RC optional
      !MESSAGE type STRING optional
      !LOCATION type STRING optional
      !A1 type SYMSGV optional
      !A2 type SYMSGV optional
      !A3 type SYMSGV optional
      !A4 type SYMSGV optional .
  class-methods RAISE
    importing
      !IV_MSG type STRING
      !IV_LOCATION type STRING optional
      !IS_NODE type ANY optional
    raising
      Lcx_abapgit_ajson_error .
  methods SET_LOCATION
    importing
      !IV_LOCATION type STRING optional
      !IS_NODE type ANY optional
    preferred parameter IV_LOCATION .
*"* protected declarations
*include zcx_abapgit_ajson_error=======co.
protected section.
*"* private declarations
*include zcx_abapgit_ajson_error=======ci.
private section.
  types:
    begin of ty_message_parts,
      a1 like a1,
      a2 like a1,
      a3 like a1,
      a4 like a1,
    end of ty_message_parts.
endclass. "ZCX_ABAPGIT_AJSON_ERROR definition
*class-pool .
*"* class pool for class ZCX_ABAPGIT_CANCEL

*"* local type definitions
*include zcx_abapgit_cancel============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCX_ABAPGIT_CANCEL definition
*"* public declarations
*include zcx_abapgit_cancel============cu.
CLASS Lcx_abapgit_cancel DEFINITION
*public
  INHERITING FROM Lcx_abapgit_exception
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    METHODS constructor
      IMPORTING
        !textid   LIKE if_t100_message=>t100key OPTIONAL
        !previous LIKE previous OPTIONAL
        !log      TYPE REF TO Lif_abapgit_log OPTIONAL
        !msgv1    TYPE symsgv OPTIONAL
        !msgv2    TYPE symsgv OPTIONAL
        !msgv3    TYPE symsgv OPTIONAL
        !msgv4    TYPE symsgv OPTIONAL
        !longtext TYPE csequence OPTIONAL.
*"* protected declarations
*include zcx_abapgit_cancel============co.
  PROTECTED SECTION.
*"* private declarations
*include zcx_abapgit_cancel============ci.
  PRIVATE SECTION.
endclass. "ZCX_ABAPGIT_CANCEL definition
*"* class pool for interface ZIF_ABAPGIT_AFF_OO_TYPES_V1

INTERFACE Lif_abapgit_aff_oo_types_v1
  .

  TYPES:
    BEGIN OF ty_component_description,
      name        TYPE Lif_abapgit_aff_types_v1=>ty_object_name_30,
      description TYPE Lif_abapgit_aff_types_v1=>ty_description_60,
    END OF ty_component_description,

    ty_component_descriptions TYPE SORTED TABLE OF ty_component_description WITH UNIQUE KEY name.


  TYPES:
    BEGIN OF ty_method,
      name        TYPE Lif_abapgit_aff_types_v1=>ty_object_name_30,
      description TYPE Lif_abapgit_aff_types_v1=>ty_description_60,
      parameters  TYPE ty_component_descriptions,
      exceptions  TYPE ty_component_descriptions,
    END OF ty_method,
    ty_methods TYPE SORTED TABLE OF ty_method WITH UNIQUE KEY name.

  TYPES:
    BEGIN OF ty_event,
      name        TYPE Lif_abapgit_aff_types_v1=>ty_object_name_30,
      description TYPE Lif_abapgit_aff_types_v1=>ty_description_60,
      parameters  TYPE ty_component_descriptions,
    END OF ty_event,
    ty_events TYPE SORTED TABLE OF ty_event WITH UNIQUE KEY name.

  TYPES:
    BEGIN OF ty_descriptions,
      types      TYPE ty_component_descriptions,
      attributes TYPE ty_component_descriptions,
      events     TYPE ty_events,
      methods    TYPE ty_methods,
    END OF ty_descriptions.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_AJSON

INTERFACE Lif_abapgit_ajson
  .

  CONSTANTS version TYPE string VALUE 'v1.1.9'. "#EC NOTEXT
  CONSTANTS origin TYPE string VALUE 'https://github.com/sbcgua/ajson'. "#EC NOTEXT
  CONSTANTS license TYPE string VALUE 'MIT'. "#EC NOTEXT

  TYPES:
    BEGIN OF ty_opts,
      read_only TYPE abap_bool,
      keep_item_order TYPE abap_bool,
      format_datetime TYPE abap_bool,
      to_abap_corresponding_only TYPE abap_bool,
    END OF ty_opts.

  " DATA

  DATA mt_json_tree TYPE Lif_abapgit_ajson_types=>ty_nodes_ts READ-ONLY.

  " CLONING

  METHODS clone
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson
    RAISING
      Lcx_abapgit_ajson_error.
  METHODS filter
    IMPORTING
      ii_filter TYPE REF TO Lif_abapgit_ajson_filter
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson
    RAISING
      Lcx_abapgit_ajson_error.
  METHODS map
    IMPORTING
      ii_mapper TYPE REF TO Lif_abapgit_ajson_mapping
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson
    RAISING
      Lcx_abapgit_ajson_error.

  " METHODS

  METHODS freeze.
  METHODS keep_item_order
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson.
  METHODS format_datetime
    IMPORTING
      iv_use_iso TYPE abap_bool DEFAULT abap_true
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson.
  METHODS to_abap_corresponding_only
    IMPORTING
      iv_enable TYPE abap_bool DEFAULT abap_true
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson.
  METHODS opts
    RETURNING
      VALUE(rs_opts) TYPE ty_opts.

  " METHODS ex.reader

  METHODS is_empty
    RETURNING
      VALUE(rv_yes) TYPE abap_bool.

  METHODS exists
    IMPORTING
      iv_path TYPE string
    RETURNING
      VALUE(rv_exists) TYPE abap_bool.

  METHODS members
    IMPORTING
      iv_path TYPE string
    RETURNING
      VALUE(rt_members) TYPE string_table.

  METHODS get
    IMPORTING
      iv_path TYPE string
    RETURNING
      VALUE(rv_value) TYPE string.

  METHODS get_node_type
    IMPORTING
      iv_path TYPE string
    RETURNING
      VALUE(rv_node_type) TYPE Lif_abapgit_ajson_types=>ty_node_type.

  METHODS get_boolean
    IMPORTING
      iv_path TYPE string
    RETURNING
      VALUE(rv_value) TYPE abap_bool.

  METHODS get_integer
    IMPORTING
      iv_path TYPE string
    RETURNING
      VALUE(rv_value) TYPE i.

  METHODS get_number
    IMPORTING
      iv_path TYPE string
    RETURNING
      VALUE(rv_value) TYPE f.

  METHODS get_date
    IMPORTING
      iv_path TYPE string
    RETURNING
      VALUE(rv_value) TYPE d.

  METHODS get_timestamp
    IMPORTING
      iv_path TYPE string
    RETURNING
      VALUE(rv_value) TYPE timestamp.

  METHODS get_string
    IMPORTING
      iv_path TYPE string
    RETURNING
      VALUE(rv_value) TYPE string.

  METHODS slice
    IMPORTING
      iv_path TYPE string
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson.

  METHODS to_abap
    IMPORTING
      iv_corresponding TYPE abap_bool DEFAULT abap_false
    EXPORTING
      ev_container TYPE any
    RAISING
      Lcx_abapgit_ajson_error.

  METHODS array_to_string_table
    IMPORTING
      iv_path TYPE string
    RETURNING
      VALUE(rt_string_table) TYPE string_table
    RAISING
      Lcx_abapgit_ajson_error.

  " METHODS ex.writer

  METHODS clear
    RAISING
      Lcx_abapgit_ajson_error.

  METHODS set
    IMPORTING
      iv_path TYPE string
      iv_val TYPE any
      iv_ignore_empty TYPE abap_bool DEFAULT abap_true
      iv_node_type TYPE Lif_abapgit_ajson_types=>ty_node_type OPTIONAL
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson
    RAISING
      Lcx_abapgit_ajson_error.

  METHODS setx
    IMPORTING
      iv_param TYPE string
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson
    RAISING
      Lcx_abapgit_ajson_error.

  METHODS set_boolean
    IMPORTING
      iv_path TYPE string
      iv_val TYPE any
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson
    RAISING
      Lcx_abapgit_ajson_error.

  METHODS set_string
    IMPORTING
      iv_path TYPE string
      iv_val TYPE clike
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson
    RAISING
      Lcx_abapgit_ajson_error.

  METHODS set_integer
    IMPORTING
      iv_path TYPE string
      iv_val TYPE i
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson
    RAISING
      Lcx_abapgit_ajson_error.

  METHODS set_date
    IMPORTING
      iv_path TYPE string
      iv_val TYPE d
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson
    RAISING
      Lcx_abapgit_ajson_error.

  METHODS set_timestamp
    IMPORTING
      iv_path TYPE string
      iv_val TYPE timestamp
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson
    RAISING
      Lcx_abapgit_ajson_error.

  METHODS set_null
    IMPORTING
      iv_path TYPE string
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson
    RAISING
      Lcx_abapgit_ajson_error.

  METHODS delete
    IMPORTING
      iv_path TYPE string
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson
    RAISING
      Lcx_abapgit_ajson_error.

  METHODS touch_array
    IMPORTING
      iv_path TYPE string
      iv_clear TYPE abap_bool DEFAULT abap_false
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson
    RAISING
      Lcx_abapgit_ajson_error.

  METHODS push
    IMPORTING
      iv_path TYPE string
      iv_val TYPE any
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson
    RAISING
      Lcx_abapgit_ajson_error.

  METHODS stringify
    IMPORTING
      iv_indent TYPE i DEFAULT 0
    RETURNING
      VALUE(rv_json) TYPE string
    RAISING
      Lcx_abapgit_ajson_error.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_AJSON_FILTER

INTERFACE Lif_abapgit_ajson_filter
  .

  TYPES ty_filter_tab TYPE STANDARD TABLE OF REF TO Lif_abapgit_ajson_filter WITH KEY table_line.
  TYPES ty_visit_type TYPE i.

  CONSTANTS:
    BEGIN OF visit_type,
      value TYPE ty_visit_type VALUE 0,
      open  TYPE ty_visit_type VALUE 1,
      close TYPE ty_visit_type VALUE 2,
    END OF visit_type.

  METHODS keep_node
    IMPORTING
      is_node TYPE Lif_abapgit_ajson_types=>ty_node
      iv_visit TYPE ty_visit_type DEFAULT visit_type-value
    RETURNING
      VALUE(rv_keep) TYPE abap_bool
    RAISING
      Lcx_abapgit_ajson_error.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_AJSON_MAPPING

INTERFACE Lif_abapgit_ajson_mapping
  .

  TYPES:
    BEGIN OF ty_mapping_field, " deprecated, will be removed
      abap TYPE string,
      json TYPE string,
    END OF ty_mapping_field,
    ty_mapping_fields TYPE STANDARD TABLE OF ty_mapping_field
      WITH UNIQUE SORTED KEY abap COMPONENTS abap
      WITH UNIQUE SORTED KEY json COMPONENTS json.

  TYPES:
    BEGIN OF ty_rename,
      from TYPE string,
      to TYPE string,
    END OF ty_rename,
    tty_rename_map TYPE STANDARD TABLE OF ty_rename
      WITH UNIQUE SORTED KEY by_name COMPONENTS from.

  TYPES:
    ty_table_of TYPE STANDARD TABLE OF REF TO Lif_abapgit_ajson_mapping.

  METHODS to_abap " deprecated, will be removed
    IMPORTING
      !iv_path         TYPE string
      !iv_name         TYPE string
    RETURNING
      VALUE(rv_result) TYPE string.

  METHODS to_json " deprecated, will be removed
    IMPORTING
      !iv_path         TYPE string
      !iv_name         TYPE string
    RETURNING
      VALUE(rv_result) TYPE string.

  METHODS rename_node
    IMPORTING
      !is_node TYPE Lif_abapgit_ajson_types=>ty_node
    CHANGING
      !cv_name TYPE Lif_abapgit_ajson_types=>ty_node-name.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_DATA_CONFIG

INTERFACE Lif_abapgit_data_config
   .


  TYPES:
    ty_data_type TYPE c LENGTH 4 .
  TYPES:
    BEGIN OF ty_config,
      type         TYPE ty_data_type,
      name         TYPE tadir-obj_name,
      skip_initial TYPE abap_bool,
      where        TYPE string_table,
    END OF ty_config .
  TYPES:
    ty_config_tt TYPE SORTED TABLE OF ty_config WITH UNIQUE KEY type name .

  CONSTANTS c_default_path TYPE string VALUE '/data/' ##NO_TEXT.
  CONSTANTS c_default_format TYPE string VALUE 'json' ##NO_TEXT.
  CONSTANTS c_config TYPE string VALUE 'conf' ##NO_TEXT.
  CONSTANTS:
    BEGIN OF c_data_type,
      tabu TYPE ty_data_type VALUE 'TABU',
      vdat TYPE ty_data_type VALUE 'VDAT',
      cdat TYPE ty_data_type VALUE 'CDAT',
      tdat TYPE ty_data_type VALUE 'TDAT',
    END OF c_data_type .

  METHODS add_config
    IMPORTING
      !is_config TYPE ty_config
    RAISING
      Lcx_abapgit_exception .
  METHODS from_json
    IMPORTING
      !it_files TYPE Lif_abapgit_git_definitions=>ty_files_tt
    RAISING
      Lcx_abapgit_exception .
  METHODS get_configs
    RETURNING
      VALUE(rt_configs) TYPE ty_config_tt .
  METHODS remove_config
    IMPORTING
      !is_config TYPE ty_config
    RAISING
      Lcx_abapgit_exception .
  METHODS to_json
    RETURNING
      VALUE(rt_files) TYPE Lif_abapgit_git_definitions=>ty_files_tt
    RAISING
      Lcx_abapgit_exception .
  METHODS update_config
    IMPORTING
      !is_config TYPE ty_config
    RAISING
      Lcx_abapgit_exception .
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_DATA_SERIALIZER

INTERFACE Lif_abapgit_data_serializer
   .


  METHODS serialize
    IMPORTING
      !ii_config      TYPE REF TO Lif_abapgit_data_config
    RETURNING
      VALUE(rt_files) TYPE Lif_abapgit_git_definitions=>ty_files_tt
    RAISING
      Lcx_abapgit_exception .
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_DATA_SUPPORTER

INTERFACE Lif_abapgit_data_supporter
  .

  TYPES:
    BEGIN OF ty_object,
      type TYPE Lif_abapgit_data_config=>ty_config-type,
      name TYPE Lif_abapgit_data_config=>ty_config-name,
    END OF ty_object.
  TYPES:
    ty_objects TYPE SORTED TABLE OF ty_object WITH UNIQUE KEY type name.

  METHODS is_object_supported
    IMPORTING
      !iv_type            TYPE ty_object-type
      !iv_name            TYPE ty_object-name
    RETURNING
      VALUE(rv_supported) TYPE abap_bool.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_DEFINITIONS

INTERFACE Lif_abapgit_definitions
   .

  TYPES:
    ty_string_tt TYPE STANDARD TABLE OF string WITH DEFAULT KEY .
  TYPES:
    BEGIN OF ty_item_signature,
      obj_type TYPE tadir-object,
      obj_name TYPE tadir-obj_name,
      devclass TYPE devclass,
    END OF ty_item_signature .
  TYPES:
    BEGIN OF ty_obj_namespace,
      namespace             TYPE trnspace-namespace,
      obj_without_namespace TYPE tadir-obj_name,
    END OF ty_obj_namespace.
  TYPES:
    BEGIN OF ty_item.
      INCLUDE TYPE ty_item_signature.
  TYPES:
      srcsystem             TYPE tadir-srcsystem,
      origlang              TYPE tadir-masterlang,
      inactive              TYPE abap_bool,
      abap_language_version TYPE Lif_abapgit_aff_types_v1=>ty_abap_language_version,
    END OF ty_item .
  TYPES:
    ty_items_tt TYPE STANDARD TABLE OF ty_item WITH DEFAULT KEY .
  TYPES:
    ty_items_ts TYPE SORTED TABLE OF ty_item WITH UNIQUE KEY obj_type obj_name .
  TYPES:
    BEGIN OF ty_file_item,
      file TYPE Lif_abapgit_git_definitions=>ty_file,
      item TYPE ty_item,
    END OF ty_file_item .
  TYPES:
    ty_files_item_tt TYPE STANDARD TABLE OF ty_file_item WITH DEFAULT KEY .
  TYPES:
    ty_files_item_by_file_tt TYPE SORTED TABLE OF ty_file_item WITH UNIQUE KEY file-path file-filename.
  TYPES:
    ty_yes_no         TYPE c LENGTH 1,
    ty_yes_no_partial TYPE c LENGTH 1.
  TYPES:
    BEGIN OF ty_overwrite.
      INCLUDE TYPE ty_item.
  TYPES:
      state    TYPE c LENGTH 2,
      action   TYPE i,
      icon     TYPE icon_d,
      text     TYPE string,
      decision TYPE ty_yes_no,
    END OF ty_overwrite .
  TYPES:
    ty_overwrite_tt TYPE STANDARD TABLE OF ty_overwrite WITH DEFAULT KEY
                              WITH UNIQUE HASHED KEY object_type_and_name
                                   COMPONENTS obj_type obj_name .
  TYPES:
    BEGIN OF ty_requirements,
      met      TYPE ty_yes_no,
      decision TYPE ty_yes_no,
    END OF ty_requirements .
  TYPES:
    BEGIN OF ty_dependencies,
      met      TYPE ty_yes_no,
      decision TYPE ty_yes_no,
    END OF ty_dependencies .
  TYPES:
    BEGIN OF ty_transport_type,
      request TYPE trfunction,
      task    TYPE trfunction,
    END OF ty_transport_type .
  TYPES:
    BEGIN OF ty_transport,
      required  TYPE abap_bool,
      transport TYPE trkorr,
      type      TYPE ty_transport_type,
    END OF ty_transport .
  TYPES:
    BEGIN OF ty_deserialize_checks,
      overwrite       TYPE ty_overwrite_tt,
      warning_package TYPE ty_overwrite_tt,
      requirements    TYPE ty_requirements,
      dependencies    TYPE ty_dependencies,
      transport       TYPE ty_transport,
      customizing     TYPE ty_transport,
    END OF ty_deserialize_checks .
  TYPES:
    BEGIN OF ty_delete_checks,
      transport TYPE ty_transport,
    END OF ty_delete_checks .
  TYPES:
    BEGIN OF ty_metadata,
      class   TYPE string,
      version TYPE string,
    END OF ty_metadata .
  TYPES:
    BEGIN OF ty_repo_file,
      path       TYPE string,
      filename   TYPE string,
      is_changed TYPE abap_bool,
      rstate     TYPE Lif_abapgit_git_definitions=>ty_item_state,
      lstate     TYPE Lif_abapgit_git_definitions=>ty_item_state,
    END OF ty_repo_file .
  TYPES:
    ty_repo_file_tt TYPE STANDARD TABLE OF ty_repo_file WITH DEFAULT KEY .
  TYPES:
    BEGIN OF ty_object,
      sha1    TYPE Lif_abapgit_git_definitions=>ty_sha1,
      type    TYPE Lif_abapgit_git_definitions=>ty_type,
      data    TYPE xstring,
      adler32 TYPE Lif_abapgit_git_definitions=>ty_adler32,
      index   TYPE i,
    END OF ty_object .
  TYPES:
    ty_objects_tt TYPE STANDARD TABLE OF ty_object WITH DEFAULT KEY
      WITH NON-UNIQUE SORTED KEY sha COMPONENTS sha1
      WITH NON-UNIQUE SORTED KEY type COMPONENTS type sha1 .
  TYPES:
    BEGIN OF ty_tadir,
      pgmid      TYPE tadir-pgmid,
      object     TYPE tadir-object,
      obj_name   TYPE tadir-obj_name,
      devclass   TYPE tadir-devclass,
      korrnum    TYPE tadir-korrnum, " used by ZCL_ABAPGIT_DEPENDENCIES->RESOLVE
      delflag    TYPE tadir-delflag,
      genflag    TYPE tadir-genflag,
      path       TYPE string,
      srcsystem  TYPE tadir-srcsystem,
      masterlang TYPE tadir-masterlang,
    END OF ty_tadir .
  TYPES:
    ty_tadir_tt TYPE STANDARD TABLE OF ty_tadir WITH DEFAULT KEY .
  TYPES:
    BEGIN OF ty_result,
      obj_type  TYPE tadir-object,
      obj_name  TYPE tadir-obj_name,
      inactive  TYPE abap_bool,
      path      TYPE string,
      filename  TYPE string,
      package   TYPE devclass,
      match     TYPE abap_bool,
      lstate    TYPE Lif_abapgit_git_definitions=>ty_item_state,
      rstate    TYPE Lif_abapgit_git_definitions=>ty_item_state,
      packmove  TYPE abap_bool,
      srcsystem TYPE tadir-srcsystem,
      origlang  TYPE tadir-masterlang,
    END OF ty_result .
  TYPES:
    ty_results_tt TYPE STANDARD TABLE OF ty_result WITH DEFAULT KEY
                       WITH NON-UNIQUE SORTED KEY sec_key
                       COMPONENTS obj_type obj_name.
  TYPES:
    ty_results_ts_path TYPE HASHED TABLE OF ty_result WITH UNIQUE KEY path filename .
  TYPES:
    BEGIN OF ty_stage_files,
      local  TYPE ty_files_item_tt,
      remote TYPE Lif_abapgit_git_definitions=>ty_files_tt,
      status TYPE ty_results_ts_path,
    END OF ty_stage_files .
  TYPES:
    BEGIN OF ty_tpool.
      INCLUDE TYPE textpool.
  TYPES: split TYPE c LENGTH 8.
  TYPES: END OF ty_tpool .
  TYPES:
    ty_tpool_tt TYPE STANDARD TABLE OF ty_tpool WITH DEFAULT KEY .
  TYPES:
    BEGIN OF ty_obj_attribute,
      cmpname   TYPE seocmpname,
      attkeyfld TYPE seokeyfld,
      attbusobj TYPE seobusobj,
      exposure  TYPE seoexpose,
    END OF ty_obj_attribute .
  TYPES:
    ty_obj_attribute_tt TYPE STANDARD TABLE OF ty_obj_attribute WITH DEFAULT KEY
                             WITH NON-UNIQUE SORTED KEY cmpname COMPONENTS cmpname .
  TYPES:
    BEGIN OF ty_transport_to_branch,
      branch_name TYPE string,
      commit_text TYPE string,
    END OF ty_transport_to_branch .

  TYPES:
    BEGIN OF ty_diff,
      patch_flag TYPE abap_bool,
      new_num    TYPE c LENGTH 6,
      new        TYPE string,
      result     TYPE c LENGTH 1,
      old_num    TYPE c LENGTH 6,
      old        TYPE string,
      short      TYPE abap_bool,
      beacon     TYPE i,
    END OF ty_diff .
  TYPES:
    ty_diffs_tt TYPE STANDARD TABLE OF ty_diff
                     WITH DEFAULT KEY
                     WITH NON-UNIQUE SORTED KEY new_num COMPONENTS new_num
                     WITH NON-UNIQUE SORTED KEY old_num COMPONENTS old_num.
  TYPES:
    BEGIN OF ty_count,
      insert TYPE i,
      delete TYPE i,
      update TYPE i,
    END OF ty_count .
  TYPES:
    BEGIN OF ty_ancestor,
      commit TYPE Lif_abapgit_git_definitions=>ty_sha1,
      tree   TYPE Lif_abapgit_git_definitions=>ty_sha1,
      time   TYPE string,
      body   TYPE string,
    END OF ty_ancestor .
  TYPES:
    BEGIN OF ty_repo_item,
      obj_type   TYPE tadir-object,
      obj_name   TYPE tadir-obj_name,
      inactive   TYPE abap_bool,
      sortkey    TYPE i,
      path       TYPE string,
      is_dir     TYPE abap_bool,
      changes    TYPE i,
      lstate     TYPE Lif_abapgit_git_definitions=>ty_item_state,
      rstate     TYPE Lif_abapgit_git_definitions=>ty_item_state,
      files      TYPE ty_repo_file_tt,
      changed_by TYPE syuname,
      transport  TYPE trkorr,
      packmove   TYPE abap_bool,
      srcsystem  TYPE tadir-srcsystem,
      origlang   TYPE tadir-masterlang,
    END OF ty_repo_item .
  TYPES:
    ty_repo_item_tt TYPE STANDARD TABLE OF ty_repo_item WITH DEFAULT KEY .
  TYPES:
    BEGIN OF ty_s_user_settings,
      max_lines              TYPE i,
      adt_jump_enabled       TYPE abap_bool,
      show_default_repo      TYPE abap_bool,
      link_hints_enabled     TYPE abap_bool,
      link_hint_key          TYPE c LENGTH 1,
      parallel_proc_disabled TYPE abap_bool,
      icon_scaling           TYPE c LENGTH 1,
      ui_theme               TYPE string,
      hide_sapgui_hint       TYPE abap_bool,
      activate_wo_popup      TYPE abap_bool,
      label_colors           TYPE string,
    END OF ty_s_user_settings .
  TYPES:
    BEGIN OF ty_list_settings,
      filter           TYPE string,
      only_favorites   TYPE abap_bool,
      show_details     TYPE abap_bool,
      order_by         TYPE string,
      order_descending TYPE abap_bool,
    END OF ty_list_settings.
  TYPES:
    ty_dokil_tt TYPE STANDARD TABLE OF dokil
                         WITH NON-UNIQUE DEFAULT KEY .
  TYPES:
    BEGIN OF ty_col_spec,
      tech_name      TYPE string,
      display_name   TYPE string,
      css_class      TYPE string,
      add_tz         TYPE abap_bool,
      title          TYPE string,
      allow_order_by TYPE abap_bool,
    END OF ty_col_spec,
    ty_col_spec_tt TYPE STANDARD TABLE OF ty_col_spec
                      WITH NON-UNIQUE KEY tech_name.
  TYPES:
    ty_proxy_bypass_url       TYPE c LENGTH 255,
    ty_range_proxy_bypass_url TYPE RANGE OF ty_proxy_bypass_url.
  TYPES:
    BEGIN OF ty_version,
      major           TYPE i,
      minor           TYPE i,
      patch           TYPE i,
      prerelase       TYPE string,
      prerelase_patch TYPE i,
    END OF ty_version.
  TYPES:
    ty_deserialization_step TYPE string.
  TYPES:
    ty_deserialization_step_tt TYPE STANDARD TABLE OF ty_deserialization_step
                                          WITH DEFAULT KEY .
  TYPES ty_sci_result TYPE c LENGTH 1.
  CONSTANTS:
    BEGIN OF c_sci_result,
      no_run  TYPE ty_sci_result VALUE '',
      failed  TYPE ty_sci_result VALUE 'F',
      warning TYPE ty_sci_result VALUE 'W',
      passed  TYPE ty_sci_result VALUE 'P',
    END OF c_sci_result.
  CONSTANTS:
    BEGIN OF c_diff,
      unchanged TYPE c LENGTH 1 VALUE ' ',
      insert    TYPE c LENGTH 1 VALUE 'I',
      delete    TYPE c LENGTH 1 VALUE 'D',
      update    TYPE c LENGTH 1 VALUE 'U',
    END OF c_diff .
  CONSTANTS:
    BEGIN OF c_state, " https://git-scm.com/docs/git-status
      unchanged TYPE Lif_abapgit_git_definitions=>ty_item_state VALUE '',
      added     TYPE Lif_abapgit_git_definitions=>ty_item_state VALUE 'A',
      modified  TYPE Lif_abapgit_git_definitions=>ty_item_state VALUE 'M',
      deleted   TYPE Lif_abapgit_git_definitions=>ty_item_state VALUE 'D',
      mixed     TYPE Lif_abapgit_git_definitions=>ty_item_state VALUE '*',
    END OF c_state .
  CONSTANTS c_english TYPE spras VALUE 'E' ##NO_TEXT.
  CONSTANTS c_root_dir TYPE string VALUE '/' ##NO_TEXT.
  CONSTANTS c_dot_abapgit TYPE string VALUE '.abapgit.xml' ##NO_TEXT.
  CONSTANTS c_author_regex TYPE string VALUE '^(.+) <(.*)> (\d{10})\s?.\d{4}$' ##NO_TEXT.
  CONSTANTS:
    BEGIN OF c_action,
      abapgit_home                  TYPE string VALUE 'abapgit_home',
      bg_update                     TYPE string VALUE 'bg_update',
      change_order_by               TYPE string VALUE 'change_order_by',
      changelog                     TYPE string VALUE 'changelog',
      clipboard                     TYPE string VALUE 'clipboard',
      db_display                    TYPE string VALUE 'db_display',
      db_edit                       TYPE string VALUE 'db_edit',
      direction                     TYPE string VALUE 'direction',
      documentation                 TYPE string VALUE 'documentation',
      flow                          TYPE string VALUE 'flow',
      git_branch_create             TYPE string VALUE 'git_branch_create',
      git_branch_delete             TYPE string VALUE 'git_branch_delete',
      git_branch_merge              TYPE string VALUE 'git_branch_merge',
      git_branch_switch             TYPE string VALUE 'git_branch_switch',
      git_commit                    TYPE string VALUE 'git_commit',
      git_pull                      TYPE string VALUE 'git_pull',
      git_tag_create                TYPE string VALUE 'git_tag_create',
      git_tag_delete                TYPE string VALUE 'git_tag_delete',
      git_tag_switch                TYPE string VALUE 'git_tag_switch',
      go_back                       TYPE string VALUE 'go_back',
      go_background                 TYPE string VALUE 'go_background',
      go_background_run             TYPE string VALUE 'go_background_run',
      go_commit                     TYPE string VALUE 'go_commit',
      go_db                         TYPE string VALUE 'go_db',
      go_debuginfo                  TYPE string VALUE 'go_debuginfo',
      go_explore                    TYPE string VALUE 'go_explore',
      go_file_diff                  TYPE string VALUE 'go_file_diff',
      go_home                       TYPE string VALUE 'go_home',
      go_patch                      TYPE string VALUE 'go_patch',
      go_repo                       TYPE string VALUE 'go_repo',
      go_repo_diff                  TYPE string VALUE 'go_repo_diff',
      go_settings                   TYPE string VALUE 'go_settings',
      go_settings_personal          TYPE string VALUE 'go_settings_personal',
      go_stage                      TYPE string VALUE 'go_stage',
      go_stage_transport            TYPE string VALUE 'go_stage_transport',
      go_tutorial                   TYPE string VALUE 'go_tutorial',
      goto_message                  TYPE string VALUE 'goto_message',
      goto_source                   TYPE string VALUE 'goto_source',
      homepage                      TYPE string VALUE 'homepage',
      ie_devtools                   TYPE string VALUE 'ie_devtools',
      jump                          TYPE string VALUE 'jump',
      jump_transport                TYPE string VALUE 'jump_transport',
      jump_user                     TYPE string VALUE 'jump_user',
      performance_test              TYPE string VALUE 'performance_test',
      repo_activate_objects         TYPE string VALUE 'repo_activate_objects',
      repo_add_all_obj_to_trans_req TYPE string VALUE 'repo_add_all_obj_to_trans_req',
      repo_background               TYPE string VALUE 'repo_background',
      repo_code_inspector           TYPE string VALUE 'repo_code_inspector',
      repo_delete_objects           TYPE string VALUE 'repo_delete_objects',
      repo_infos                    TYPE string VALUE 'repo_infos',
      repo_local_settings           TYPE string VALUE 'repo_local_settings',
      repo_log                      TYPE string VALUE 'repo_log',
      repo_newoffline               TYPE string VALUE 'repo_newoffline',
      repo_newonline                TYPE string VALUE 'repo_newonline',
      repo_open_in_master_lang      TYPE string VALUE 'repo_open_in_master_lang',
      repo_purge                    TYPE string VALUE 'repo_purge',
      repo_refresh                  TYPE string VALUE 'repo_refresh',
      repo_refresh_checksums        TYPE string VALUE 'repo_refresh_checksums',
      repo_remote_settings          TYPE string VALUE 'repo_remote_settings',
      repo_remove                   TYPE string VALUE 'repo_remove',
      repo_settings                 TYPE string VALUE 'repo_settings',
      repo_syntax_check             TYPE string VALUE 'repo_syntax_check',
      repo_toggle_fav               TYPE string VALUE 'repo_toggle_fav',
      repo_transport_to_branch      TYPE string VALUE 'repo_transport_to_branch',
      rfc_compare                   TYPE string VALUE 'rfc_compare',
      show_callstack                TYPE string VALUE 'show_callstack',
      show_hotkeys                  TYPE string VALUE 'show_hotkeys',
      sponsor                       TYPE string VALUE 'sponsor',
      toggle_favorites              TYPE string VALUE 'toggle_favorites',
      url                           TYPE string VALUE 'url',
      yank_to_clipboard             TYPE string VALUE 'yank_to_clipboard',
      zip_export                    TYPE string VALUE 'zip_export',
      zip_export_transport          TYPE string VALUE 'zip_export_transport',
      zip_import                    TYPE string VALUE 'zip_import',
      zip_object                    TYPE string VALUE 'zip_object',
      zip_package                   TYPE string VALUE 'zip_package',
      zip_transport                 TYPE string VALUE 'zip_transport',
    END OF c_action.
  CONSTANTS c_spagpa_param_repo_key TYPE c LENGTH 20 VALUE 'REPO_KEY' ##NO_TEXT.
  CONSTANTS c_spagpa_param_package TYPE c LENGTH 20 VALUE 'PACKAGE' ##NO_TEXT.
  CONSTANTS c_yes TYPE ty_yes_no VALUE 'Y'.
  CONSTANTS c_no TYPE ty_yes_no VALUE 'N'.
  CONSTANTS c_partial TYPE ty_yes_no_partial VALUE 'P'.

  TYPES:
    ty_method TYPE c LENGTH 1 .
  TYPES:
    BEGIN OF ty_stage,
      file   TYPE Lif_abapgit_git_definitions=>ty_file,
      method TYPE ty_method,
      status TYPE ty_result,
    END OF ty_stage .
  TYPES:
    ty_stage_tt TYPE SORTED TABLE OF ty_stage
          WITH UNIQUE KEY file-path file-filename .

  CONSTANTS:
    BEGIN OF c_method,
      add    TYPE ty_method VALUE 'A',
      rm     TYPE ty_method VALUE 'R',
      ignore TYPE ty_method VALUE 'I',
      skip   TYPE ty_method VALUE '?',
    END OF c_method .

  TYPES:
    ty_sap_langu_tab TYPE STANDARD TABLE OF langu WITH DEFAULT KEY.
  TYPES:
    ty_languages TYPE STANDARD TABLE OF laiso WITH DEFAULT KEY.
  TYPES:
    BEGIN OF ty_i18n_params,
      main_language         TYPE sy-langu,
      main_language_only    TYPE abap_bool,
      translation_languages TYPE ty_languages,
      use_lxe               TYPE abap_bool,
    END OF ty_i18n_params .
  TYPES ty_trrngtrkor_tt TYPE RANGE OF trkorr.
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_DOT_ABAPGIT

INTERFACE Lif_abapgit_dot_abapgit .

  TYPES:
    BEGIN OF ty_requirement,
      component   TYPE tdevc-dlvunit,
      min_release TYPE saprelease,
      min_patch   TYPE sappatchlv,
    END OF ty_requirement .
  TYPES:
    ty_requirement_tt TYPE STANDARD TABLE OF ty_requirement WITH DEFAULT KEY .

  TYPES:
    BEGIN OF ty_dot_abapgit,
      name                  TYPE string,
      master_language       TYPE spras,
      i18n_languages        TYPE Lif_abapgit_definitions=>ty_languages,
      use_lxe               TYPE abap_bool,
      starting_folder       TYPE string,
      folder_logic          TYPE string,
      ignore                TYPE STANDARD TABLE OF string WITH DEFAULT KEY,
      requirements          TYPE ty_requirement_tt,
      version_constant      TYPE string,
      abap_language_version TYPE string,
    END OF ty_dot_abapgit .

  CONSTANTS:
    BEGIN OF c_folder_logic,
      prefix TYPE string VALUE 'PREFIX',
      full   TYPE string VALUE 'FULL',
      mixed  TYPE string VALUE 'MIXED',
    END OF c_folder_logic,

    BEGIN OF c_abap_language_version,
      standard          TYPE string VALUE 'standard',
      key_user          TYPE string VALUE 'keyUser',
      cloud_development TYPE string VALUE 'cloudDevelopment',
      undefined         TYPE string VALUE 'undefined',
    END OF c_abap_language_version.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_GITV2_PORCELAIN

INTERFACE Lif_abapgit_gitv2_porcelain
   .

  METHODS list_branches
    IMPORTING
      !iv_url        TYPE string
      !iv_prefix     TYPE string OPTIONAL
    RETURNING
      VALUE(ro_list) TYPE REF TO Lcl_abapgit_git_branch_list
    RAISING
      Lcx_abapgit_exception .
  METHODS list_no_blobs
    IMPORTING
      !iv_url            TYPE string
      !iv_sha1           TYPE Lif_abapgit_git_definitions=>ty_sha1
    RETURNING
      VALUE(rt_expanded) TYPE Lif_abapgit_git_definitions=>ty_expanded_tt
    RAISING
      Lcx_abapgit_exception .
  METHODS list_no_blobs_multi
    IMPORTING
      !iv_url           TYPE string
      !it_sha1          TYPE Lif_abapgit_git_definitions=>ty_sha1_tt
    RETURNING
      VALUE(rt_objects) TYPE Lif_abapgit_definitions=>ty_objects_tt
    RAISING
      Lcx_abapgit_exception .
  METHODS commits_last_year
    IMPORTING
      !iv_url           TYPE string
      !it_sha1          TYPE Lif_abapgit_git_definitions=>ty_sha1_tt
    RETURNING
      VALUE(rt_objects) TYPE Lif_abapgit_definitions=>ty_objects_tt
    RAISING
      Lcx_abapgit_exception .

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_GUI_EVENT

INTERFACE Lif_abapgit_gui_event
   .

  DATA mv_action   TYPE string READ-ONLY.
  DATA mv_getdata  TYPE string READ-ONLY.
  DATA mt_postdata TYPE Lif_abapgit_html_viewer=>ty_post_data READ-ONLY.
  DATA mi_gui_services TYPE REF TO Lif_abapgit_gui_services READ-ONLY.
  DATA mv_current_page_name TYPE string.

  METHODS query
    RETURNING
      VALUE(ro_string_map) TYPE REF TO Lcl_abapgit_string_map
    RAISING
      Lcx_abapgit_exception.

  METHODS form_data
    RETURNING
      VALUE(ro_string_map) TYPE REF TO Lcl_abapgit_string_map
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_HTTP_RESPONSE

INTERFACE Lif_abapgit_http_response
   .


  METHODS data
    RETURNING
      VALUE(rv_data) TYPE xstring .
  METHODS cdata
    RETURNING
      VALUE(rv_data) TYPE string .
  METHODS json
    RETURNING
      VALUE(ri_json) TYPE REF TO Lif_abapgit_ajson
    RAISING
      Lcx_abapgit_ajson_error .
  METHODS is_ok
    RETURNING
      VALUE(rv_yes) TYPE abap_bool .
  METHODS code
    RETURNING
      VALUE(rv_code) TYPE i .
  METHODS error
    RETURNING
      VALUE(rv_message) TYPE string .
  METHODS headers
    RETURNING
      VALUE(ro_headers) TYPE REF TO Lcl_abapgit_string_map
    RAISING
      Lcx_abapgit_exception .
  METHODS close .
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_I18N_FILE

INTERFACE Lif_abapgit_i18n_file
  .

  TYPES: ty_table_of TYPE STANDARD TABLE OF REF TO Lif_abapgit_i18n_file WITH DEFAULT KEY.

  METHODS render
    RETURNING
      VALUE(rv_data) TYPE xstring
    RAISING
      Lcx_abapgit_exception.
  METHODS translate
    CHANGING
      ct_text_pairs TYPE Lif_abapgit_lxe_texts=>ty_text_pairs
    RAISING
      Lcx_abapgit_exception.

  METHODS ext
    RETURNING
      VALUE(rv_ext) TYPE string.
  METHODS lang
    RETURNING
      VALUE(rv_lang) TYPE string.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_LANG_DEFINITIONS

INTERFACE Lif_abapgit_lang_definitions
   .

  TYPES: BEGIN OF ty_i18n_tpool,
           language TYPE langu,
           textpool TYPE Lif_abapgit_definitions=>ty_tpool_tt,
         END OF ty_i18n_tpool,
         ty_i18n_tpools TYPE STANDARD TABLE OF ty_i18n_tpool.

  TYPES: BEGIN OF ty_i18n_line,
           language TYPE langu,
           lines    TYPE tlinetab,
         END OF ty_i18n_line,
         ty_i18n_lines TYPE STANDARD TABLE OF ty_i18n_line WITH KEY language.

  TYPES: ty_langus TYPE STANDARD TABLE OF langu.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_LOG

INTERFACE Lif_abapgit_log
   .

  CONSTANTS:
    BEGIN OF c_status,
      ok      TYPE sy-msgty VALUE 'S',
      error   TYPE sy-msgty VALUE 'E',
      warning TYPE sy-msgty VALUE 'W',
    END OF c_status.

  CONSTANTS:
    BEGIN OF c_log_level,
      empty   TYPE i VALUE 0,
      info    TYPE i VALUE 1,
      warning TYPE i VALUE 2,
      error   TYPE i VALUE 3,
    END OF c_log_level.

  TYPES:
    BEGIN OF ty_log_out,
      type      TYPE sy-msgty,
      text      TYPE string,
      obj_type  TYPE tadir-object,
      obj_name  TYPE tadir-obj_name,
      exception TYPE REF TO cx_root,
    END OF ty_log_out .
  TYPES:
    ty_log_outs TYPE STANDARD TABLE OF ty_log_out
                WITH NON-UNIQUE DEFAULT KEY .
  TYPES:
    BEGIN OF ty_msg,
      text TYPE string,
      type TYPE sy-msgty,
      level TYPE i,
    END OF ty_msg .
  TYPES:
    ty_msgs TYPE STANDARD TABLE OF ty_msg
                          WITH NON-UNIQUE DEFAULT KEY .
  TYPES:
    BEGIN OF ty_item_status_out,
      item     TYPE Lif_abapgit_definitions=>ty_item,
      status   TYPE sy-msgty,
      messages TYPE ty_msgs,
    END OF ty_item_status_out .
  TYPES:
    ty_item_status_outs TYPE SORTED TABLE OF ty_item_status_out
                        WITH UNIQUE KEY item-obj_type item-obj_name .

  METHODS add
    IMPORTING
      !iv_msg  TYPE csequence
      !iv_type TYPE sy-msgty DEFAULT 'E'
      !is_item TYPE Lif_abapgit_definitions=>ty_item OPTIONAL
      !ix_exc  TYPE REF TO cx_root OPTIONAL .
  METHODS add_error
    IMPORTING
      !iv_msg  TYPE csequence
      !is_item TYPE Lif_abapgit_definitions=>ty_item OPTIONAL .
  METHODS add_info
    IMPORTING
      !iv_msg  TYPE csequence
      !is_item TYPE Lif_abapgit_definitions=>ty_item OPTIONAL .
  METHODS add_warning
    IMPORTING
      !iv_msg  TYPE csequence
      !is_item TYPE Lif_abapgit_definitions=>ty_item OPTIONAL .
  METHODS add_success
    IMPORTING
      !iv_msg  TYPE csequence
      !is_item TYPE Lif_abapgit_definitions=>ty_item OPTIONAL .
  METHODS add_exception
    IMPORTING
      !ix_exc  TYPE REF TO cx_root
      !is_item TYPE Lif_abapgit_definitions=>ty_item OPTIONAL .
  METHODS clear .
  METHODS count
    RETURNING
      VALUE(rv_count) TYPE i .
  METHODS get_messages
    RETURNING
      VALUE(rt_msg) TYPE ty_log_outs .
  METHODS get_item_status
    RETURNING
      VALUE(rt_item_status) TYPE ty_item_status_outs .
  METHODS get_status
    RETURNING
      VALUE(rv_status) TYPE sy-msgty .
  METHODS get_log_level
    RETURNING
      VALUE(rv_level) TYPE i .
  METHODS get_title
    RETURNING
      VALUE(rv_title) TYPE string .
  METHODS set_title
    IMPORTING
      !iv_title TYPE csequence
    RETURNING
      VALUE(ri_log) TYPE REF TO Lif_abapgit_log.
  METHODS merge_with
    IMPORTING
      ii_log TYPE REF TO Lif_abapgit_log
      iv_min_level TYPE i DEFAULT 0
    RETURNING
      VALUE(ri_log) TYPE REF TO Lif_abapgit_log.
  METHODS clone
    RETURNING
      VALUE(ri_log) TYPE REF TO Lif_abapgit_log.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_LONGTEXTS

INTERFACE Lif_abapgit_longtexts
   .

  TYPES:
    BEGIN OF ty_longtext,
      dokil TYPE dokil,
      head  TYPE thead,
      lines TYPE tline_tab,
    END OF ty_longtext .
  TYPES:
    ty_longtexts TYPE STANDARD TABLE OF ty_longtext WITH NON-UNIQUE DEFAULT KEY .

  METHODS changed_by
    IMPORTING
      !iv_object_name TYPE tadir-obj_name
      !iv_longtext_id TYPE dokil-id
      !it_dokil       TYPE Lif_abapgit_definitions=>ty_dokil_tt OPTIONAL
    RETURNING
      VALUE(rv_user)  TYPE syuname
    RAISING
      Lcx_abapgit_exception .
  METHODS serialize
    IMPORTING
      !iv_longtext_name   TYPE string DEFAULT 'LONGTEXTS'
      !iv_object_name     TYPE clike
      !iv_longtext_id     TYPE dokil-id
      !it_dokil           TYPE Lif_abapgit_definitions=>ty_dokil_tt OPTIONAL
      !ii_xml             TYPE REF TO Lif_abapgit_xml_output
      !io_i18n_params     TYPE REF TO Lcl_abapgit_i18n_params
    RETURNING
      VALUE(rt_longtexts) TYPE ty_longtexts
    RAISING
      Lcx_abapgit_exception .
  METHODS deserialize
    IMPORTING
      !iv_longtext_name TYPE string DEFAULT 'LONGTEXTS'
      !iv_object_name   TYPE clike
      !iv_longtext_id   TYPE dokil-id
      !ii_xml           TYPE REF TO Lif_abapgit_xml_input
      !iv_main_language TYPE sy-langu
    RAISING
      Lcx_abapgit_exception .
  METHODS delete
    IMPORTING
      !iv_object_name TYPE tadir-obj_name
      !iv_longtext_id TYPE dokil-id
    RAISING
      Lcx_abapgit_exception .
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_MERGE

INTERFACE Lif_abapgit_merge  .

  TYPES:
    BEGIN OF ty_merge,
      repo     TYPE REF TO Lcl_abapgit_repo_online,
      source   TYPE Lif_abapgit_git_definitions=>ty_git_branch,
      target   TYPE Lif_abapgit_git_definitions=>ty_git_branch,
      common   TYPE Lif_abapgit_definitions=>ty_ancestor,
      stree    TYPE Lif_abapgit_git_definitions=>ty_expanded_tt,
      ttree    TYPE Lif_abapgit_git_definitions=>ty_expanded_tt,
      ctree    TYPE Lif_abapgit_git_definitions=>ty_expanded_tt,
      result   TYPE Lif_abapgit_git_definitions=>ty_expanded_tt,
      stage    TYPE REF TO Lcl_abapgit_stage,
      conflict TYPE string,
    END OF ty_merge .
  TYPES:
    BEGIN OF ty_merge_conflict,
      path        TYPE string,
      filename    TYPE string,
      source_sha1 TYPE Lif_abapgit_git_definitions=>ty_sha1,
      source_data TYPE xstring,
      target_sha1 TYPE Lif_abapgit_git_definitions=>ty_sha1,
      target_data TYPE xstring,
      result_sha1 TYPE Lif_abapgit_git_definitions=>ty_sha1,
      result_data TYPE xstring,
    END OF ty_merge_conflict .
  TYPES:
    ty_merge_conflict_tt TYPE STANDARD TABLE OF ty_merge_conflict WITH DEFAULT KEY .

  METHODS get_conflicts
    RETURNING
      VALUE(rt_conflicts) TYPE ty_merge_conflict_tt .
  METHODS get_result
    RETURNING
      VALUE(rs_merge) TYPE ty_merge .
  METHODS get_source_branch
    RETURNING
      VALUE(rv_source_branch) TYPE string .
  METHODS has_conflicts
    RETURNING
      VALUE(rv_conflicts_exists) TYPE abap_bool .
  METHODS resolve_conflict
    IMPORTING
      !is_conflict TYPE ty_merge_conflict
    RAISING
      Lcx_abapgit_exception .
  METHODS run
    RAISING
      Lcx_abapgit_exception .

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_OBJECT

INTERFACE Lif_abapgit_object
   .

  DATA mo_files TYPE REF TO Lcl_abapgit_objects_files .

  CONSTANTS:
    BEGIN OF gc_step_id,
      early TYPE Lif_abapgit_definitions=>ty_deserialization_step VALUE `EARLY`,
      abap  TYPE Lif_abapgit_definitions=>ty_deserialization_step VALUE `ABAP`,
      ddic  TYPE Lif_abapgit_definitions=>ty_deserialization_step VALUE `DDIC`,
      late  TYPE Lif_abapgit_definitions=>ty_deserialization_step VALUE `LATE`,
    END OF gc_step_id.

  METHODS serialize
    IMPORTING
      !io_xml TYPE REF TO Lif_abapgit_xml_output
    RAISING
      Lcx_abapgit_exception .

  METHODS deserialize
    IMPORTING
      !iv_package   TYPE devclass
      !io_xml       TYPE REF TO Lif_abapgit_xml_input
      !iv_step      TYPE Lif_abapgit_definitions=>ty_deserialization_step
      !ii_log       TYPE REF TO Lif_abapgit_log
      !iv_transport TYPE trkorr
    RAISING
      Lcx_abapgit_exception .

  METHODS delete
    IMPORTING
      !iv_package   TYPE devclass
      !iv_transport TYPE trkorr
    RAISING
      Lcx_abapgit_exception .

  METHODS exists
    RETURNING
      VALUE(rv_bool) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception .

  METHODS is_locked
    RETURNING
      VALUE(rv_is_locked) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception .

  METHODS is_active
    RETURNING
      VALUE(rv_active) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception .

  METHODS changed_by
    IMPORTING
      !iv_extra      TYPE string OPTIONAL
    RETURNING
      VALUE(rv_user) TYPE syuname
    RAISING
      Lcx_abapgit_exception .

  METHODS jump
    IMPORTING
      !iv_extra      TYPE string OPTIONAL
    RETURNING
      VALUE(rv_exit) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception .

  METHODS get_metadata
    RETURNING
      VALUE(rs_metadata) TYPE Lif_abapgit_definitions=>ty_metadata .

  METHODS get_comparator
    RETURNING
      VALUE(ri_comparator) TYPE REF TO Lif_abapgit_comparator
    RAISING
      Lcx_abapgit_exception .

  METHODS get_deserialize_steps
    RETURNING
      VALUE(rt_steps) TYPE Lif_abapgit_definitions=>ty_deserialization_step_tt .

  METHODS get_deserialize_order
    IMPORTING
      !it_all_objects          TYPE Lif_abapgit_definitions=>ty_items_tt
    RETURNING
      VALUE(rt_objects_before) TYPE Lif_abapgit_definitions=>ty_items_tt.

  CLASS-METHODS map_filename_to_object
    IMPORTING
      !iv_filename TYPE string
      !iv_path     TYPE string OPTIONAL
      !io_dot      TYPE REF TO Lcl_abapgit_dot_abapgit OPTIONAL
      !iv_package  TYPE devclass OPTIONAL
    CHANGING
      cs_item      TYPE Lif_abapgit_definitions=>ty_item
    RAISING
      Lcx_abapgit_exception.

  CLASS-METHODS map_object_to_filename
    IMPORTING
      !is_item    TYPE Lif_abapgit_definitions=>ty_item
    CHANGING
      cv_filename TYPE string
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_OBJECTS

INTERFACE Lif_abapgit_objects
  .

  TYPES:
    BEGIN OF ty_serialization,
      files TYPE Lif_abapgit_git_definitions=>ty_files_tt,
      item  TYPE Lif_abapgit_definitions=>ty_item,
    END OF ty_serialization .
  TYPES:
    BEGIN OF ty_deserialization,
      obj     TYPE REF TO Lif_abapgit_object,
      xml     TYPE REF TO Lif_abapgit_xml_input,
      package TYPE devclass,
      item    TYPE Lif_abapgit_definitions=>ty_item,
    END OF ty_deserialization .
  TYPES:
    ty_deserialization_tt TYPE STANDARD TABLE OF ty_deserialization WITH DEFAULT KEY .
  TYPES:
    BEGIN OF ty_step_data,
      step_id      TYPE Lif_abapgit_definitions=>ty_deserialization_step,
      order        TYPE i,
      descr        TYPE string,
      syntax_check TYPE abap_bool,
      objects      TYPE ty_deserialization_tt,
    END OF ty_step_data .
  TYPES:
    ty_step_data_tt TYPE STANDARD TABLE OF ty_step_data
                                WITH DEFAULT KEY .

  CONSTANTS:
    BEGIN OF c_deserialize_action,
      " also used to determine priority if object has multiple changes, so don't change order
      no_support TYPE i VALUE -1,
      none       TYPE i VALUE 0,
      add        TYPE i VALUE 1,
      update     TYPE i VALUE 2,
      overwrite  TYPE i VALUE 3,
      delete     TYPE i VALUE 4,
      delete_add TYPE i VALUE 5,
      packmove   TYPE i VALUE 6,
    END OF c_deserialize_action.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_OBJECT_FILTER

INTERFACE Lif_abapgit_object_filter
   .

  METHODS get_filter
    RETURNING
      VALUE(rt_filter) TYPE Lif_abapgit_definitions=>ty_tadir_tt
    RAISING
      Lcx_abapgit_exception.
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_OO_OBJECT_FNC

INTERFACE Lif_abapgit_oo_object_fnc .

  CONSTANTS:
    BEGIN OF c_parts,
      locals_def  TYPE string VALUE 'locals_def',
      locals_imp  TYPE string VALUE 'locals_imp',
      macros      TYPE string VALUE 'macros',
      testclasses TYPE string VALUE 'testclasses',
    END OF c_parts.

  TYPES: BEGIN OF ty_includes,
           programm TYPE syrepid,
         END OF ty_includes,
         ty_includes_tt TYPE STANDARD TABLE OF ty_includes WITH DEFAULT KEY.

  TYPES:
    ty_seocompotx_tt TYPE STANDARD TABLE OF seocompotx WITH DEFAULT KEY .
  TYPES:
    ty_seosubcotx_tt TYPE STANDARD TABLE OF seosubcotx WITH DEFAULT KEY .

  METHODS:
    create
      IMPORTING
        iv_check      TYPE abap_bool
        iv_package    TYPE devclass
        it_attributes TYPE Lif_abapgit_definitions=>ty_obj_attribute_tt OPTIONAL
      CHANGING
        cg_properties TYPE any
      RAISING
        Lcx_abapgit_exception,
    generate_locals
      IMPORTING
        is_key                   TYPE seoclskey
        it_local_definitions     TYPE seop_source_string OPTIONAL
        it_local_implementations TYPE seop_source_string OPTIONAL
        it_local_macros          TYPE seop_source_string OPTIONAL
        it_local_test_classes    TYPE seop_source_string OPTIONAL
        iv_package               TYPE devclass
        iv_version               TYPE uccheck
      RAISING
        Lcx_abapgit_exception,
    deserialize_source
      IMPORTING
        is_key     TYPE seoclskey
        it_source  TYPE Lif_abapgit_definitions=>ty_string_tt
        iv_package TYPE devclass
        iv_version TYPE uccheck
      RAISING
        Lcx_abapgit_exception
        cx_sy_dyn_call_error,
    insert_text_pool
      IMPORTING
        iv_class_name TYPE seoclsname
        it_text_pool  TYPE textpool_table
        iv_language   TYPE spras
        iv_state      TYPE c DEFAULT 'I'
      RAISING
        Lcx_abapgit_exception,
    update_descriptions
      IMPORTING
        is_key          TYPE seoclskey
        it_descriptions TYPE ty_seocompotx_tt,
    update_descriptions_sub
      IMPORTING
        is_key          TYPE seoclskey
        it_descriptions TYPE ty_seosubcotx_tt,
    add_to_activation_list
      IMPORTING
        is_item TYPE Lif_abapgit_definitions=>ty_item
      RAISING
        Lcx_abapgit_exception,
    create_sotr
      IMPORTING
        iv_object_name TYPE sobj_name
        iv_package     TYPE devclass
        ii_xml         TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception,
    create_documentation
      IMPORTING
        it_lines         TYPE tlinetab
        iv_id            TYPE dokhl-id
        iv_object_name   TYPE dokhl-object
        iv_language      TYPE spras
        iv_no_masterlang TYPE abap_bool OPTIONAL
      RAISING
        Lcx_abapgit_exception,
    delete_documentation
      IMPORTING
        iv_id          TYPE dokhl-id
        iv_object_name TYPE dokhl-object
        iv_language    TYPE spras
      RAISING
        Lcx_abapgit_exception,
    get_includes
      IMPORTING
        iv_object_name     TYPE sobj_name
      RETURNING
        VALUE(rt_includes) TYPE ty_includes_tt
      RAISING
        Lcx_abapgit_exception,
    exists
      IMPORTING
        is_object_name   TYPE seoclskey
      RETURNING
        VALUE(rv_exists) TYPE abap_bool,
    serialize_abap
      IMPORTING
        is_class_key     TYPE seoclskey
        iv_type          TYPE seop_include_ext_app OPTIONAL
      RETURNING
        VALUE(rt_source) TYPE Lif_abapgit_definitions=>ty_string_tt
      RAISING
        Lcx_abapgit_exception
        cx_sy_dyn_call_error,
    get_skip_test_classes
      RETURNING
        VALUE(rv_skip) TYPE abap_bool,
    get_class_properties
      IMPORTING
        is_class_key               TYPE seoclskey
      RETURNING
        VALUE(rs_class_properties) TYPE vseoclass
      RAISING
        Lcx_abapgit_exception,
    get_interface_properties
      IMPORTING
        is_interface_key               TYPE seoclskey
      RETURNING
        VALUE(rs_interface_properties) TYPE vseointerf
      RAISING
        Lcx_abapgit_exception,
    read_text_pool
      IMPORTING
        iv_class_name       TYPE seoclsname
        iv_language         TYPE spras
      RETURNING
        VALUE(rt_text_pool) TYPE textpool_table,
    read_documentation
      IMPORTING
        iv_id           TYPE dokhl-id
        iv_object_name  TYPE dokhl-object
        iv_language     TYPE spras
      RETURNING
        VALUE(rt_lines) TYPE tlinetab,
    read_sotr
      IMPORTING
        iv_object_name TYPE sobj_name
        ii_xml         TYPE REF TO Lif_abapgit_xml_output
        io_i18n_params TYPE REF TO Lcl_abapgit_i18n_params
      RAISING
        Lcx_abapgit_exception,
    read_descriptions
      IMPORTING
        iv_object_name         TYPE seoclsname
        iv_language            TYPE spras OPTIONAL
      RETURNING
        VALUE(rt_descriptions) TYPE ty_seocompotx_tt,
    read_descriptions_sub
      IMPORTING
        iv_object_name         TYPE seoclsname
        iv_language            TYPE spras OPTIONAL
      RETURNING
        VALUE(rt_descriptions) TYPE ty_seosubcotx_tt,
    delete
      IMPORTING
        is_deletion_key TYPE seoclskey
      RAISING
        Lcx_abapgit_exception,
    read_superclass
      IMPORTING
        iv_classname         TYPE seoclsname
      RETURNING
        VALUE(rv_superclass) TYPE seoclsname,
    read_attributes
      IMPORTING
        iv_object_name       TYPE seoclsname
      RETURNING
        VALUE(rt_attributes) TYPE Lif_abapgit_definitions=>ty_obj_attribute_tt.
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_PERSISTENCE

INTERFACE Lif_abapgit_persistence .

  TYPES:
    ty_type  TYPE c LENGTH 12 .
  TYPES:
    ty_value TYPE c LENGTH 12 .
  TYPES:
    BEGIN OF ty_content,
      type     TYPE ty_type,
      value    TYPE ty_value,
      data_str TYPE string,
    END OF ty_content .
  TYPES:
    ty_contents TYPE SORTED TABLE OF ty_content WITH UNIQUE KEY type value .

  TYPES: BEGIN OF ty_local_checksum,
           item  TYPE Lif_abapgit_definitions=>ty_item_signature,
           files TYPE Lif_abapgit_git_definitions=>ty_file_signatures_tt,
         END OF ty_local_checksum.

  TYPES:
    BEGIN OF ty_local_settings,
      display_name                 TYPE string,
      ignore_subpackages           TYPE abap_bool,
      write_protected              TYPE abap_bool,
      only_local_objects           TYPE abap_bool,
      code_inspector_check_variant TYPE sci_chkv,
      block_commit                 TYPE abap_bool,
      main_language_only           TYPE abap_bool,
      labels                       TYPE string,
      transport_request            TYPE trkorr,
      customizing_request          TYPE trkorr,
      flow                         TYPE abap_bool,
    END OF ty_local_settings.

  TYPES: ty_local_checksum_tt TYPE STANDARD TABLE OF ty_local_checksum WITH DEFAULT KEY.
  TYPES: ty_local_checksum_by_item_tt TYPE SORTED TABLE OF ty_local_checksum
    WITH NON-UNIQUE KEY item-obj_type item-obj_name.

  TYPES: BEGIN OF ty_repo_xml,
           url             TYPE string,
           branch_name     TYPE string,
           selected_commit TYPE Lif_abapgit_git_definitions=>ty_sha1,
           package         TYPE devclass,
           created_by      TYPE syuname,
           created_at      TYPE timestampl,
           deserialized_by TYPE syuname,
           deserialized_at TYPE timestampl,
           offline         TYPE abap_bool,
           switched_origin TYPE string,
           dot_abapgit     TYPE Lif_abapgit_dot_abapgit=>ty_dot_abapgit,
           head_branch     TYPE string,   " HEAD symref of the repo, master branch
           local_settings  TYPE ty_local_settings,
         END OF ty_repo_xml.

  TYPES:
    BEGIN OF ty_repo_meta_mask,
      url             TYPE abap_bool,
      branch_name     TYPE abap_bool,
      selected_commit TYPE abap_bool,
      package         TYPE abap_bool,
      created_by      TYPE abap_bool,
      created_at      TYPE abap_bool,
      deserialized_by TYPE abap_bool,
      deserialized_at TYPE abap_bool,
      offline         TYPE abap_bool,
      switched_origin TYPE abap_bool,
      dot_abapgit     TYPE abap_bool,
      head_branch     TYPE abap_bool,
      local_settings  TYPE abap_bool,
    END OF ty_repo_meta_mask.

  TYPES: BEGIN OF ty_repo,
           key TYPE ty_value.
      INCLUDE TYPE ty_repo_xml.
  TYPES: END OF ty_repo.
  TYPES: ty_repos TYPE STANDARD TABLE OF ty_repo WITH DEFAULT KEY.
  TYPES: ty_repo_keys TYPE STANDARD TABLE OF ty_repo-key WITH DEFAULT KEY.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_PERSIST_REPO

INTERFACE Lif_abapgit_persist_repo
   .


  METHODS add
    IMPORTING
      !iv_url          TYPE string OPTIONAL
      !iv_branch_name  TYPE string OPTIONAL
      !iv_branch       TYPE Lif_abapgit_git_definitions=>ty_sha1 OPTIONAL
      !iv_display_name TYPE string OPTIONAL
      !iv_package      TYPE devclass
      !iv_offline      TYPE abap_bool DEFAULT abap_false
      !is_dot_abapgit  TYPE Lif_abapgit_dot_abapgit=>ty_dot_abapgit
    RETURNING
      VALUE(rv_key)    TYPE Lif_abapgit_persistence=>ty_repo-key
    RAISING
      Lcx_abapgit_exception .
  METHODS delete
    IMPORTING
      !iv_key TYPE Lif_abapgit_persistence=>ty_repo-key
    RAISING
      Lcx_abapgit_exception .
  METHODS exists
    IMPORTING
      !iv_key       TYPE Lif_abapgit_persistence=>ty_repo-key
    RETURNING
      VALUE(rv_yes) TYPE abap_bool.
  METHODS list
    RETURNING
      VALUE(rt_repos) TYPE Lif_abapgit_persistence=>ty_repos
    RAISING
      Lcx_abapgit_exception .
  METHODS list_by_keys
    IMPORTING
      it_keys         TYPE Lif_abapgit_persistence=>ty_repo_keys
    RETURNING
      VALUE(rt_repos) TYPE Lif_abapgit_persistence=>ty_repos
    RAISING
      Lcx_abapgit_exception .
  METHODS lock
    IMPORTING
      !iv_mode TYPE enqmode
      !iv_key  TYPE Lif_abapgit_persistence=>ty_repo-key
    RAISING
      Lcx_abapgit_exception .
  METHODS read
    IMPORTING
      !iv_key        TYPE Lif_abapgit_persistence=>ty_repo-key
    RETURNING
      VALUE(rs_repo) TYPE Lif_abapgit_persistence=>ty_repo
    RAISING
      Lcx_abapgit_exception
      Lcx_abapgit_not_found .
  METHODS update_metadata
    IMPORTING
      !iv_key         TYPE Lif_abapgit_persistence=>ty_repo-key
      !is_meta        TYPE Lif_abapgit_persistence=>ty_repo_xml
      !is_change_mask TYPE Lif_abapgit_persistence=>ty_repo_meta_mask
    RAISING
      Lcx_abapgit_exception .
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_PERSIST_REPO_CS

INTERFACE Lif_abapgit_persist_repo_cs
   .

  METHODS update
    IMPORTING
      !iv_key TYPE Lif_abapgit_persistence=>ty_repo-key
      !iv_cs_blob TYPE Lif_abapgit_persistence=>ty_content-data_str
    RAISING
      Lcx_abapgit_exception .
  METHODS delete
    IMPORTING
      !iv_key TYPE Lif_abapgit_persistence=>ty_repo-key
    RAISING
      Lcx_abapgit_exception .
  METHODS read
    IMPORTING
      !iv_key        TYPE Lif_abapgit_persistence=>ty_repo-key
    RETURNING
      VALUE(rv_cs_blob) TYPE Lif_abapgit_persistence=>ty_content-data_str
    RAISING
      Lcx_abapgit_exception
      Lcx_abapgit_not_found .
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_PERSIST_USER

INTERFACE Lif_abapgit_persist_user
   .

  TYPES ty_favorites TYPE Lif_abapgit_persistence=>ty_repo_keys .

  METHODS get_changes_only
    RETURNING
      VALUE(rv_changes_only) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception .
  METHODS get_default_git_user_email
    RETURNING
      VALUE(rv_email) TYPE string
    RAISING
      Lcx_abapgit_exception .
  METHODS get_default_git_user_name
    RETURNING
      VALUE(rv_username) TYPE string
    RAISING
      Lcx_abapgit_exception .
  METHODS get_diff_unified
    RETURNING
      VALUE(rv_diff_unified) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception .
  METHODS get_favorites
    RETURNING
      VALUE(rt_favorites) TYPE ty_favorites
    RAISING
      Lcx_abapgit_exception .
  METHODS get_hide_files
    RETURNING
      VALUE(rv_hide) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception .
  METHODS get_show_folders
    RETURNING
      VALUE(rv_folders) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception .
  METHODS get_repo_git_user_email
    IMPORTING
      !iv_url         TYPE Lif_abapgit_persistence=>ty_repo-url
    RETURNING
      VALUE(rv_email) TYPE string
    RAISING
      Lcx_abapgit_exception .
  METHODS get_repo_git_user_name
    IMPORTING
      !iv_url            TYPE Lif_abapgit_persistence=>ty_repo-url
    RETURNING
      VALUE(rv_username) TYPE string
    RAISING
      Lcx_abapgit_exception .
  METHODS get_repo_last_change_seen
    IMPORTING
      !iv_url           TYPE Lif_abapgit_persistence=>ty_repo-url
    RETURNING
      VALUE(rv_version) TYPE string
    RAISING
      Lcx_abapgit_exception .
  METHODS get_repo_login
    IMPORTING
      !iv_url         TYPE Lif_abapgit_persistence=>ty_repo-url
    RETURNING
      VALUE(rv_login) TYPE string
    RAISING
      Lcx_abapgit_exception .
  METHODS get_repo_show
    RETURNING
      VALUE(rv_key) TYPE Lif_abapgit_persistence=>ty_repo-key
    RAISING
      Lcx_abapgit_exception .
  METHODS is_favorite_repo
    IMPORTING
      !iv_repo_key  TYPE Lif_abapgit_persistence=>ty_repo-key
    RETURNING
      VALUE(rv_yes) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception .
  METHODS set_default_git_user_email
    IMPORTING
      !iv_email TYPE string
    RAISING
      Lcx_abapgit_exception .
  METHODS set_default_git_user_name
    IMPORTING
      !iv_username TYPE string
    RAISING
      Lcx_abapgit_exception .
  METHODS set_repo_git_user_email
    IMPORTING
      !iv_url   TYPE Lif_abapgit_persistence=>ty_repo-url
      !iv_email TYPE string
    RAISING
      Lcx_abapgit_exception .
  METHODS set_repo_git_user_name
    IMPORTING
      !iv_url      TYPE Lif_abapgit_persistence=>ty_repo-url
      !iv_username TYPE string
    RAISING
      Lcx_abapgit_exception .
  METHODS set_repo_last_change_seen
    IMPORTING
      !iv_url     TYPE Lif_abapgit_persistence=>ty_repo-url
      !iv_version TYPE string
    RAISING
      Lcx_abapgit_exception .
  METHODS set_repo_login
    IMPORTING
      !iv_url   TYPE Lif_abapgit_persistence=>ty_repo-url
      !iv_login TYPE string
    RAISING
      Lcx_abapgit_exception .
  METHODS set_repo_show
    IMPORTING
      !iv_key TYPE Lif_abapgit_persistence=>ty_repo-key
    RAISING
      Lcx_abapgit_exception .
  METHODS toggle_changes_only
    RETURNING
      VALUE(rv_changes_only) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception .
  METHODS get_order_by
    RETURNING
      VALUE(rv_order_by) TYPE string
    RAISING
      Lcx_abapgit_exception.
  METHODS set_order_by
    IMPORTING
      iv_order_by        TYPE string
    RETURNING
      VALUE(rv_order_by) TYPE string
    RAISING
      Lcx_abapgit_exception.
  METHODS get_order_descending
    RETURNING
      VALUE(rv_order_descending) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception.
  METHODS set_order_descending
    IMPORTING
      iv_order_descending        TYPE abap_bool
    RETURNING
      VALUE(rv_order_descending) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception.
  METHODS get_diff_first
    RETURNING
      VALUE(rv_diff_first) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception.
  METHODS set_diff_first
    IMPORTING
      iv_diff_first        TYPE abap_bool
    RETURNING
      VALUE(rv_diff_first) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception.
  METHODS toggle_diff_unified
    RETURNING
      VALUE(rv_diff_unified) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception .
  METHODS toggle_favorite
    IMPORTING
      !iv_repo_key TYPE Lif_abapgit_persistence=>ty_repo-key
    RAISING
      Lcx_abapgit_exception .
  METHODS toggle_hide_files
    RETURNING
      VALUE(rv_hide) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception .
  METHODS toggle_show_folders
    RETURNING
      VALUE(rv_folders) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception.
  METHODS get_settings
    RETURNING
      VALUE(rs_user_settings) TYPE Lif_abapgit_definitions=>ty_s_user_settings
    RAISING
      Lcx_abapgit_exception.
  METHODS set_settings
    IMPORTING
      is_user_settings TYPE Lif_abapgit_definitions=>ty_s_user_settings
    RAISING
      Lcx_abapgit_exception.
  METHODS get_list_settings
    RETURNING
      VALUE(rs_list_settings) TYPE Lif_abapgit_definitions=>ty_list_settings
    RAISING
      Lcx_abapgit_exception.
  METHODS set_list_settings
    IMPORTING
      is_list_settings TYPE Lif_abapgit_definitions=>ty_list_settings
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_POPUPS

INTERFACE Lif_abapgit_popups
   .


  TYPES ty_rows TYPE SORTED TABLE OF i WITH UNIQUE KEY table_line.

  TYPES:
    BEGIN OF ty_alv_column,
      name      TYPE string,
      text      TYPE string,
      length    TYPE lvc_outlen,
      show_icon TYPE abap_bool,
      center    TYPE abap_bool,
    END OF ty_alv_column,
    ty_alv_column_tt TYPE TABLE OF ty_alv_column WITH DEFAULT KEY.

  TYPES:
    BEGIN OF ty_popup_position,
      start_column LIKE  sy-cucol,
      start_row    LIKE  sy-curow,
      end_column   LIKE  sy-cucol,
      end_row      LIKE  sy-curow,
    END OF ty_popup_position.

  CONSTANTS c_new_branch_label TYPE string VALUE '+ create new ...' ##NO_TEXT.

  METHODS popup_search_help
    IMPORTING
      !iv_tab_field   TYPE string
    RETURNING
      VALUE(rv_value) TYPE ddshretval-fieldval
    RAISING
      Lcx_abapgit_exception .
  METHODS popup_folder_logic
    RETURNING
      VALUE(rv_folder_logic) TYPE string
    RAISING
      Lcx_abapgit_exception .
  METHODS create_branch_popup
    IMPORTING
      !iv_source_branch_name TYPE string
    EXPORTING
      !ev_name               TYPE string
      !ev_cancel             TYPE abap_bool
    RAISING
      Lcx_abapgit_exception .
  METHODS branch_list_popup
    IMPORTING
      !iv_url             TYPE string
      !iv_default_branch  TYPE string OPTIONAL
      !iv_show_new_option TYPE abap_bool OPTIONAL
      !iv_hide_branch     TYPE Lif_abapgit_persistence=>ty_repo-branch_name OPTIONAL
      !iv_hide_head       TYPE abap_bool OPTIONAL
    RETURNING
      VALUE(rs_branch)    TYPE Lif_abapgit_git_definitions=>ty_git_branch
    RAISING
      Lcx_abapgit_exception .
  METHODS tag_list_popup
    IMPORTING
      !iv_url       TYPE string
    RETURNING
      VALUE(rs_tag) TYPE Lif_abapgit_git_definitions=>ty_git_tag
    RAISING
      Lcx_abapgit_exception .
  METHODS commit_list_popup
    IMPORTING
      !iv_repo_url     TYPE string
      !iv_branch_name  TYPE string OPTIONAL
    RETURNING
      VALUE(rs_commit) TYPE Lif_abapgit_git_definitions=>ty_commit
    RAISING
      Lcx_abapgit_exception .
  TYPES ty_char1 TYPE c LENGTH 1.
  TYPES ty_icon TYPE c LENGTH 30.
  METHODS popup_to_confirm
    IMPORTING
      !iv_titlebar              TYPE clike
      !iv_text_question         TYPE clike
      !iv_text_button_1         TYPE clike DEFAULT 'Yes'
      !iv_icon_button_1         TYPE ty_icon DEFAULT space
      !iv_text_button_2         TYPE clike DEFAULT 'No'
      !iv_icon_button_2         TYPE ty_icon DEFAULT space
      !iv_default_button        TYPE ty_char1 DEFAULT '1'
      !iv_display_cancel_button TYPE ty_char1 DEFAULT abap_true
      !iv_popup_type            TYPE clike DEFAULT 'ICON_MESSAGE_QUESTION'
    RETURNING
      VALUE(rv_answer)          TYPE ty_char1
    RAISING
      Lcx_abapgit_exception .
  METHODS popup_to_create_package
    EXPORTING
      !es_package_data TYPE scompkdtln
      !ev_create       TYPE abap_bool
    RAISING
      Lcx_abapgit_exception .
  METHODS popup_to_create_transp_branch
    IMPORTING
      !iv_trkorr                 TYPE trkorr
    RETURNING
      VALUE(rs_transport_branch) TYPE Lif_abapgit_definitions=>ty_transport_to_branch
    RAISING
      Lcx_abapgit_exception .
  METHODS popup_to_select_transport
    RETURNING
      VALUE(rv_trkorr) TYPE trkorr .
  METHODS popup_to_select_from_list
    IMPORTING
      !it_list               TYPE STANDARD TABLE
      !iv_title              TYPE lvc_title DEFAULT space
      !iv_header_text        TYPE csequence DEFAULT space
      !iv_start_column       TYPE i DEFAULT 10
      !iv_end_column         TYPE i DEFAULT 125
      !iv_start_line         TYPE i DEFAULT 10
      !iv_end_line           TYPE i DEFAULT 30
      !iv_striped_pattern    TYPE abap_bool DEFAULT abap_false
      !iv_optimize_col_width TYPE abap_bool DEFAULT abap_true
      !iv_selection_mode     TYPE salv_de_constant DEFAULT if_salv_c_selection_mode=>multiple
      !iv_select_column_text TYPE csequence DEFAULT space
      !it_columns_to_display TYPE ty_alv_column_tt
      !it_preselected_rows   TYPE ty_rows OPTIONAL
    EXPORTING
      VALUE(et_list)         TYPE STANDARD TABLE
    RAISING
      Lcx_abapgit_exception .
  METHODS popup_transport_request
    IMPORTING
      !is_transport_type        TYPE Lif_abapgit_definitions=>ty_transport_type OPTIONAL
      !iv_use_default_transport TYPE abap_bool DEFAULT abap_false
      PREFERRED PARAMETER is_transport_type
    RETURNING
      VALUE(rv_transport)       TYPE trkorr
    RAISING
      Lcx_abapgit_exception .
  METHODS popup_select_tr_requests
    IMPORTING is_selection        TYPE trwbo_selection
              iv_title            TYPE trwbo_title
              iv_username_pattern TYPE any DEFAULT sy-uname
    RETURNING VALUE(rt_r_trkorr)  TYPE Lif_abapgit_definitions=>ty_trrngtrkor_tt
    RAISING   Lcx_abapgit_exception.
  METHODS popup_select_wb_tc_tr_and_tsk
    RETURNING VALUE(rt_r_trkorr) TYPE Lif_abapgit_definitions=>ty_trrngtrkor_tt
    RAISING   Lcx_abapgit_exception.
  METHODS popup_to_select_labels
    IMPORTING iv_labels        TYPE string OPTIONAL
    RETURNING VALUE(rv_labels) TYPE string
    RAISING   Lcx_abapgit_exception.
  METHODS choose_code_insp_check_variant
    RETURNING VALUE(rv_check_variant) TYPE sci_chkv
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_REPO

INTERFACE Lif_abapgit_repo
   .

  DATA ms_data TYPE Lif_abapgit_persistence=>ty_repo READ-ONLY.

  METHODS get_key
    RETURNING
      VALUE(rv_key) TYPE Lif_abapgit_persistence=>ty_value .
  METHODS get_name
    RETURNING
      VALUE(rv_name) TYPE string.
  METHODS is_offline
    RETURNING
      VALUE(rv_offline) TYPE abap_bool .
  METHODS get_package
    RETURNING
      VALUE(rv_package) TYPE Lif_abapgit_persistence=>ty_repo-package .
  METHODS get_local_settings
    RETURNING
      VALUE(rs_settings) TYPE Lif_abapgit_persistence=>ty_repo-local_settings .

  METHODS get_tadir_objects
    RETURNING
      VALUE(rt_tadir) TYPE Lif_abapgit_definitions=>ty_tadir_tt
    RAISING
      Lcx_abapgit_exception .

  METHODS get_files_local_filtered
    IMPORTING
      !ii_obj_filter  TYPE REF TO Lif_abapgit_object_filter
      !ii_log         TYPE REF TO Lif_abapgit_log OPTIONAL
    RETURNING
      VALUE(rt_files) TYPE Lif_abapgit_definitions=>ty_files_item_tt
    RAISING
      Lcx_abapgit_exception .

  METHODS get_files_local
    IMPORTING
      !ii_log         TYPE REF TO Lif_abapgit_log OPTIONAL
    RETURNING
      VALUE(rt_files) TYPE Lif_abapgit_definitions=>ty_files_item_tt
    RAISING
      Lcx_abapgit_exception .

  METHODS get_files_remote
    IMPORTING
      !ii_obj_filter   TYPE REF TO Lif_abapgit_object_filter OPTIONAL
      !iv_ignore_files TYPE abap_bool DEFAULT abap_false
        PREFERRED PARAMETER ii_obj_filter
    RETURNING
      VALUE(rt_files)  TYPE Lif_abapgit_git_definitions=>ty_files_tt
    RAISING
      Lcx_abapgit_exception .
  METHODS refresh
    IMPORTING
      !iv_drop_cache TYPE abap_bool DEFAULT abap_false
      !iv_drop_log   TYPE abap_bool DEFAULT abap_true
        PREFERRED PARAMETER iv_drop_cache
    RAISING
      Lcx_abapgit_exception .
  METHODS get_dot_abapgit
    RETURNING
      VALUE(ro_dot_abapgit) TYPE REF TO Lcl_abapgit_dot_abapgit .
  METHODS set_dot_abapgit
    IMPORTING
      !io_dot_abapgit TYPE REF TO Lcl_abapgit_dot_abapgit
    RAISING
      Lcx_abapgit_exception .
  METHODS deserialize
    IMPORTING
      !is_checks TYPE Lif_abapgit_definitions=>ty_deserialize_checks
      !ii_log    TYPE REF TO Lif_abapgit_log
    RAISING
      Lcx_abapgit_exception .
  METHODS deserialize_checks
    RETURNING
      VALUE(rs_checks) TYPE Lif_abapgit_definitions=>ty_deserialize_checks
    RAISING
      Lcx_abapgit_exception .

  METHODS checksums
    RETURNING
      VALUE(ri_checksums) TYPE REF TO Lif_abapgit_repo_checksums
    RAISING
      Lcx_abapgit_exception .

  METHODS has_remote_source
    RETURNING
      VALUE(rv_yes) TYPE abap_bool .

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_REPO_CHECKSUMS

INTERFACE Lif_abapgit_repo_checksums
  .

  METHODS get
    RETURNING
      VALUE(rt_checksums) TYPE Lif_abapgit_persistence=>ty_local_checksum_tt.

  METHODS get_checksums_per_file
    RETURNING
      VALUE(rt_checksums) TYPE Lif_abapgit_git_definitions=>ty_file_signatures_tt .

  METHODS rebuild
    RAISING
      Lcx_abapgit_exception.

  METHODS update
    IMPORTING
      !it_updated_files TYPE Lif_abapgit_git_definitions=>ty_file_signatures_tt
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_REPO_LISTENER

INTERFACE Lif_abapgit_repo_listener
   .

  METHODS on_meta_change
    IMPORTING
      !iv_key TYPE Lif_abapgit_persistence=>ty_repo-key
      !is_meta TYPE Lif_abapgit_persistence=>ty_repo_xml
      !is_change_mask TYPE Lif_abapgit_persistence=>ty_repo_meta_mask
    RAISING
      Lcx_abapgit_exception .
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_REPO_ONLINE

INTERFACE Lif_abapgit_repo_online
   .


  METHODS get_url
    RETURNING
      VALUE(rv_url) TYPE Lif_abapgit_persistence=>ty_repo-url .
  METHODS get_selected_branch
    RETURNING
      VALUE(rv_name) TYPE Lif_abapgit_persistence=>ty_repo-branch_name .
  METHODS set_url
    IMPORTING
      !iv_url TYPE Lif_abapgit_persistence=>ty_repo-url
    RAISING
      Lcx_abapgit_exception .
  METHODS select_branch
    IMPORTING
      !iv_branch_name TYPE Lif_abapgit_persistence=>ty_repo-branch_name
    RAISING
      Lcx_abapgit_exception .
  METHODS get_selected_commit
    RETURNING
      VALUE(rv_selected_commit) TYPE Lif_abapgit_persistence=>ty_repo-selected_commit
    RAISING
      Lcx_abapgit_exception .
  METHODS get_current_remote
    RETURNING
      VALUE(rv_sha1) TYPE Lif_abapgit_git_definitions=>ty_sha1
    RAISING
      Lcx_abapgit_exception .
  METHODS select_commit
    IMPORTING
      !iv_selected_commit TYPE Lif_abapgit_persistence=>ty_repo-selected_commit
    RAISING
      Lcx_abapgit_exception .
  METHODS switch_origin
    IMPORTING
      !iv_url       TYPE Lif_abapgit_persistence=>ty_repo-url
      !iv_branch    TYPE Lif_abapgit_persistence=>ty_repo-branch_name OPTIONAL
      !iv_overwrite TYPE abap_bool DEFAULT abap_false
    RAISING
      Lcx_abapgit_exception .
  METHODS get_switched_origin
    RETURNING
      VALUE(rv_switched_origin) TYPE Lif_abapgit_persistence=>ty_repo-switched_origin.
  METHODS push
    IMPORTING
      !is_comment TYPE Lif_abapgit_git_definitions=>ty_comment
      !io_stage   TYPE REF TO Lcl_abapgit_stage
    RAISING
      Lcx_abapgit_exception .
  METHODS create_branch
    IMPORTING
      !iv_name TYPE string
      !iv_from TYPE Lif_abapgit_git_definitions=>ty_sha1 OPTIONAL
    RAISING
      Lcx_abapgit_exception .
  METHODS check_for_valid_branch
    RAISING
      Lcx_abapgit_exception .
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_REPO_SRV

INTERFACE Lif_abapgit_repo_srv
   .


  TYPES:
    ty_repo_list TYPE STANDARD TABLE OF REF TO Lif_abapgit_repo WITH DEFAULT KEY,

    BEGIN OF ty_label,
      label TYPE string,
    END OF ty_label,
    ty_labels TYPE STANDARD TABLE OF ty_label WITH NON-UNIQUE DEFAULT KEY
                   WITH NON-UNIQUE SORTED KEY key_label COMPONENTS label.

  METHODS init.
  METHODS delete
    IMPORTING
      !ii_repo TYPE REF TO Lif_abapgit_repo
    RAISING
      Lcx_abapgit_exception .
  METHODS get
    IMPORTING
      !iv_key        TYPE Lif_abapgit_persistence=>ty_value
    RETURNING
      VALUE(ri_repo) TYPE REF TO Lif_abapgit_repo
    RAISING
      Lcx_abapgit_exception .
  METHODS is_repo_installed
    IMPORTING
      !iv_url             TYPE string
      !iv_target_package  TYPE devclass OPTIONAL
    RETURNING
      VALUE(rv_installed) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception .
  METHODS list
    IMPORTING
      !iv_offline    TYPE abap_bool DEFAULT abap_undefined
    RETURNING
      VALUE(rt_list) TYPE ty_repo_list
    RAISING
      Lcx_abapgit_exception .
  METHODS list_favorites
    IMPORTING
      !iv_offline    TYPE abap_bool DEFAULT abap_undefined
    RETURNING
      VALUE(rt_list) TYPE ty_repo_list
    RAISING
      Lcx_abapgit_exception .
  METHODS new_offline
    IMPORTING
      !iv_name           TYPE string
      !iv_package        TYPE devclass
      !iv_folder_logic   TYPE string DEFAULT Lif_abapgit_dot_abapgit=>c_folder_logic-full
      !iv_labels         TYPE string OPTIONAL
      !iv_ign_subpkg     TYPE abap_bool DEFAULT abap_false
      !iv_main_lang_only TYPE abap_bool DEFAULT abap_false
      !iv_abap_lang_vers TYPE string OPTIONAL
    RETURNING
      VALUE(ri_repo)     TYPE REF TO Lif_abapgit_repo
    RAISING
      Lcx_abapgit_exception .
  METHODS new_online
    IMPORTING
      !iv_url            TYPE string
      !iv_branch_name    TYPE string OPTIONAL
      !iv_display_name   TYPE string OPTIONAL
      !iv_name           TYPE string OPTIONAL
      !iv_package        TYPE devclass
      !iv_folder_logic   TYPE string DEFAULT Lif_abapgit_dot_abapgit=>c_folder_logic-prefix
      !iv_labels         TYPE string OPTIONAL
      !iv_ign_subpkg     TYPE abap_bool DEFAULT abap_false
      !iv_main_lang_only TYPE abap_bool DEFAULT abap_false
      !iv_abap_lang_vers TYPE string OPTIONAL
    RETURNING
      VALUE(ri_repo)     TYPE REF TO Lif_abapgit_repo
    RAISING
      Lcx_abapgit_exception .
  METHODS purge
    IMPORTING
      !ii_repo      TYPE REF TO Lif_abapgit_repo
      !is_checks    TYPE Lif_abapgit_definitions=>ty_delete_checks
      !iv_keep_repo TYPE abap_bool DEFAULT abap_false
    RETURNING
      VALUE(ri_log) TYPE REF TO Lif_abapgit_log
    RAISING
      Lcx_abapgit_exception .
  METHODS validate_package
    IMPORTING
      !iv_package    TYPE devclass
      !iv_ign_subpkg TYPE abap_bool DEFAULT abap_false
      !iv_chk_exists TYPE abap_bool DEFAULT abap_true
    RAISING
      Lcx_abapgit_exception .
  METHODS validate_url
    IMPORTING
      !iv_url        TYPE string
      !iv_chk_exists TYPE abap_bool DEFAULT abap_true
    RAISING
      Lcx_abapgit_exception .
  METHODS get_repo_from_package
    IMPORTING
      !iv_package    TYPE devclass
      !iv_ign_subpkg TYPE abap_bool DEFAULT abap_false
    EXPORTING
      VALUE(ei_repo) TYPE REF TO Lif_abapgit_repo
      !ev_reason     TYPE string
    RAISING
      Lcx_abapgit_exception .
  METHODS get_repo_from_url
    IMPORTING
      !iv_url    TYPE string
    EXPORTING
      !ei_repo   TYPE REF TO Lif_abapgit_repo
      !ev_reason TYPE string
    RAISING
      Lcx_abapgit_exception .
  METHODS get_label_list
    RETURNING
      VALUE(rt_labels) TYPE ty_labels
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_SAP_NAMESPACE

INTERFACE Lif_abapgit_sap_namespace
   .

  METHODS exists
    IMPORTING
      iv_namespace  TYPE trnspace-namespace
    RETURNING
      VALUE(rv_yes) TYPE abap_bool.

  METHODS is_editable
    IMPORTING
      iv_namespace  TYPE trnspace-namespace
    RETURNING
      VALUE(rv_yes) TYPE abap_bool.

  METHODS split_by_name
    IMPORTING
      iv_obj_with_namespace   TYPE csequence
      iv_allow_slash_in_name  TYPE abap_bool DEFAULT abap_true
    RETURNING
      VALUE(rs_obj_namespace) TYPE Lif_abapgit_definitions=>ty_obj_namespace
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_SAP_PACKAGE

INTERFACE Lif_abapgit_sap_package
   .


  TYPES:
    ty_devclass_tt TYPE STANDARD TABLE OF devclass WITH DEFAULT KEY .

  METHODS validate_name
    RAISING
      Lcx_abapgit_exception .
  METHODS create
    IMPORTING
      !is_package TYPE scompkdtln
    RAISING
      Lcx_abapgit_exception .
  METHODS create_local
    RAISING
      Lcx_abapgit_exception .
  METHODS list_subpackages
    RETURNING
      VALUE(rt_list) TYPE ty_devclass_tt .
  METHODS list_superpackages
    RETURNING
      VALUE(rt_list) TYPE ty_devclass_tt
    RAISING
      Lcx_abapgit_exception .
  METHODS read_parent
    RETURNING
      VALUE(rv_parentcl) TYPE devclass
    RAISING
      Lcx_abapgit_exception .
  METHODS read_description
    RETURNING
      VALUE(rv_description) TYPE string
    RAISING
      Lcx_abapgit_exception .
  METHODS read_responsible
    RETURNING
      VALUE(rv_responsible) TYPE usnam
    RAISING
      Lcx_abapgit_exception .
  METHODS create_child
    IMPORTING
      !iv_child TYPE devclass
    RAISING
      Lcx_abapgit_exception .
  METHODS exists
    RETURNING
      VALUE(rv_bool) TYPE abap_bool .
  METHODS are_changes_recorded_in_tr_req
    RETURNING
      VALUE(rv_are_changes_rec_in_tr_req) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception .
  METHODS get_transport_type
    RETURNING
      VALUE(rs_transport_type) TYPE Lif_abapgit_definitions=>ty_transport_type
    RAISING
      Lcx_abapgit_exception .
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_SAP_REPORT

INTERFACE Lif_abapgit_sap_report
  .

  TYPES:
    BEGIN OF ty_progdir,
      name    TYPE progdir-name,
      state   TYPE progdir-state,
      sqlx    TYPE progdir-sqlx,
      edtx    TYPE progdir-edtx,
      varcl   TYPE progdir-varcl,
      dbapl   TYPE progdir-dbapl,
      dbna    TYPE progdir-dbna,
      clas    TYPE progdir-clas,
      type    TYPE progdir-type,
      occurs  TYPE progdir-occurs,
      subc    TYPE progdir-subc,
      appl    TYPE progdir-appl,
      secu    TYPE progdir-secu,
      cnam    TYPE progdir-cnam,
      cdat    TYPE progdir-cdat,
      unam    TYPE progdir-unam,
      udat    TYPE progdir-udat,
      vern    TYPE progdir-vern,
      levl    TYPE progdir-levl,
      rstat   TYPE progdir-rstat,
      rmand   TYPE progdir-rmand,
      rload   TYPE progdir-rload,
      fixpt   TYPE progdir-fixpt,
      sset    TYPE progdir-sset,
      sdate   TYPE progdir-sdate,
      stime   TYPE progdir-stime,
      idate   TYPE progdir-idate,
      itime   TYPE progdir-itime,
      ldbname TYPE progdir-ldbname,
      uccheck TYPE progdir-uccheck,
    END OF ty_progdir.

  METHODS read_report
    IMPORTING
      iv_name          TYPE syrepid
      iv_state         TYPE r3state OPTIONAL
      is_item          TYPE Lif_abapgit_definitions=>ty_item OPTIONAL
    RETURNING
      VALUE(rt_source) TYPE abaptxt255_tab
    RAISING
      Lcx_abapgit_exception.

  METHODS insert_report
    IMPORTING
      iv_name           TYPE syrepid
      it_source         TYPE STANDARD TABLE
      iv_state          TYPE r3state OPTIONAL
      iv_program_type   TYPE c OPTIONAL
      iv_extension_type TYPE c OPTIONAL
      iv_package        TYPE devclass
      iv_version        TYPE uccheck
      is_item           TYPE Lif_abapgit_definitions=>ty_item OPTIONAL
    RAISING
      Lcx_abapgit_exception.

  METHODS update_report
    IMPORTING
      iv_name           TYPE syrepid
      it_source         TYPE STANDARD TABLE
      iv_state          TYPE r3state OPTIONAL
      iv_program_type   TYPE c OPTIONAL
      iv_extension_type TYPE c OPTIONAL
      iv_package        TYPE devclass
      iv_version        TYPE uccheck
      is_item           TYPE Lif_abapgit_definitions=>ty_item OPTIONAL
    RETURNING
      VALUE(rv_updated) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception.

  METHODS delete_report
    IMPORTING
      iv_name        TYPE syrepid
      iv_raise_error TYPE abap_bool DEFAULT abap_false
      is_item        TYPE Lif_abapgit_definitions=>ty_item OPTIONAL
    RAISING
      Lcx_abapgit_exception.

  METHODS read_progdir
    IMPORTING
      iv_name           TYPE syrepid
      iv_state          TYPE r3state DEFAULT 'A'
    RETURNING
      VALUE(rs_progdir) TYPE ty_progdir
    RAISING
      Lcx_abapgit_exception.

  METHODS update_progdir
    IMPORTING
      is_progdir TYPE ty_progdir
      iv_package TYPE devclass
      iv_state   TYPE r3state DEFAULT 'I'
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_SERVICES_GIT

INTERFACE Lif_abapgit_services_git .

  TYPES:
    BEGIN OF ty_commit_fields,
      repo_key        TYPE Lif_abapgit_persistence=>ty_repo-key,
      committer_name  TYPE string,
      committer_email TYPE string,
      author_name     TYPE string,
      author_email    TYPE string,
      comment         TYPE string,
      body            TYPE string,
    END OF ty_commit_fields.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_STAGE_LOGIC

INTERFACE Lif_abapgit_stage_logic
   .

  METHODS get
    IMPORTING
      !io_repo        TYPE REF TO Lcl_abapgit_repo_online
      !ii_obj_filter  TYPE REF TO Lif_abapgit_object_filter OPTIONAL
    RETURNING
      VALUE(rs_files) TYPE Lif_abapgit_definitions=>ty_stage_files
    RAISING
      Lcx_abapgit_exception .

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_TADIR

INTERFACE Lif_abapgit_tadir
   .


  METHODS get_object_package
    IMPORTING
      !iv_pgmid          TYPE tadir-pgmid DEFAULT 'R3TR'
      !iv_object         TYPE tadir-object
      !iv_obj_name       TYPE tadir-obj_name
    RETURNING
      VALUE(rv_devclass) TYPE tadir-devclass
    RAISING
      Lcx_abapgit_exception .
  METHODS read
    IMPORTING
      !iv_package            TYPE tadir-devclass
      !iv_ignore_subpackages TYPE abap_bool DEFAULT abap_false
      !iv_only_local_objects TYPE abap_bool DEFAULT abap_false
      !io_dot                TYPE REF TO Lcl_abapgit_dot_abapgit OPTIONAL
      !ii_log                TYPE REF TO Lif_abapgit_log OPTIONAL
      !it_filter             TYPE Lif_abapgit_definitions=>ty_tadir_tt OPTIONAL
      !iv_check_exists       TYPE abap_bool DEFAULT abap_true
    RETURNING
      VALUE(rt_tadir)        TYPE Lif_abapgit_definitions=>ty_tadir_tt
    RAISING
      Lcx_abapgit_exception .
  METHODS read_single
    IMPORTING
      !iv_pgmid       TYPE tadir-pgmid DEFAULT 'R3TR'
      !iv_object      TYPE tadir-object
      !iv_obj_name    TYPE tadir-obj_name
    RETURNING
      VALUE(rs_tadir) TYPE Lif_abapgit_definitions=>ty_tadir.
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_XML_INPUT

INTERFACE Lif_abapgit_xml_input
   .

  METHODS read
    IMPORTING
      !iv_name TYPE clike
    CHANGING
      !cg_data TYPE any
    RAISING
      Lcx_abapgit_exception .
  METHODS get_raw
    RETURNING
      VALUE(ri_raw) TYPE REF TO if_ixml_document .

* todo, add read_xml to match add_xml in lcl_xml_output
  METHODS get_metadata
    RETURNING
      VALUE(rs_metadata) TYPE Lif_abapgit_definitions=>ty_metadata .

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_XML_OUTPUT

INTERFACE Lif_abapgit_xml_output
   .

  METHODS add
    IMPORTING
      !iv_name TYPE clike
      !ig_data TYPE any
    RAISING
      Lcx_abapgit_exception .
  METHODS set_raw
    IMPORTING
      !ii_raw TYPE REF TO if_ixml_element .
  METHODS add_xml
    IMPORTING
      !iv_name TYPE clike
      !ii_xml  TYPE REF TO if_ixml_element .
  METHODS render
    IMPORTING
      !iv_normalize TYPE abap_bool DEFAULT abap_true
      !is_metadata  TYPE Lif_abapgit_definitions=>ty_metadata OPTIONAL
    RETURNING
      VALUE(rv_xml) TYPE string .

ENDINTERFACE.
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ADT_LINK

*"* local type definitions
*include zcl_abapgit_adt_link==========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ADT_LINK definition
*"* public declarations
*include zcl_abapgit_adt_link==========cu.
CLASS Lcl_abapgit_adt_link DEFINITION
*public
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    CLASS-METHODS jump
      IMPORTING
        !iv_obj_name     TYPE Lif_abapgit_definitions=>ty_item-obj_name
        !iv_obj_type     TYPE Lif_abapgit_definitions=>ty_item-obj_type
        !iv_sub_obj_name TYPE Lif_abapgit_definitions=>ty_item-obj_name OPTIONAL
        !iv_line_number  TYPE i OPTIONAL
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS link_transport
      IMPORTING
        iv_transport TYPE trkorr
      RETURNING
        VALUE(rv_link) TYPE string.

*"* protected declarations
*include zcl_abapgit_adt_link==========co.
  PROTECTED SECTION.

    CLASS-METHODS generate
      IMPORTING
        !iv_obj_name     TYPE Lif_abapgit_definitions=>ty_item-obj_name
        !iv_obj_type     TYPE Lif_abapgit_definitions=>ty_item-obj_type
        !iv_sub_obj_name TYPE Lif_abapgit_definitions=>ty_item-obj_name OPTIONAL
        !iv_line_number  TYPE i OPTIONAL
      RETURNING
        VALUE(rv_result) TYPE string
      RAISING
        Lcx_abapgit_exception.

*"* private declarations
*include zcl_abapgit_adt_link==========ci.
  PRIVATE SECTION.

    CLASS-METHODS get_adt_objects_and_names
      IMPORTING
        iv_obj_name       TYPE Lif_abapgit_definitions=>ty_item-obj_name
        iv_obj_type       TYPE Lif_abapgit_definitions=>ty_item-obj_type
      EXPORTING
        eo_adt_uri_mapper TYPE REF TO object
        eo_adt_objectref  TYPE REF TO object
        ev_program        TYPE progname
        ev_include        TYPE progname
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS is_adt_jump_possible
      IMPORTING
        io_object                      TYPE REF TO cl_wb_object
        io_adt                         TYPE REF TO object
      RETURNING
        VALUE(rv_is_adt_jump_possible) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_ADT_LINK definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_AJSON

*"* local type definitions
*include zcl_abapgit_ajson=============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_AJSON definition
*"* public declarations
*include zcl_abapgit_ajson=============cu.
CLASS Lcl_abapgit_ajson DEFINITION
*public
  CREATE PUBLIC






.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_ajson .

    ALIASES:
      is_empty FOR Lif_abapgit_ajson~is_empty,
      exists FOR Lif_abapgit_ajson~exists,
      members FOR Lif_abapgit_ajson~members,
      get FOR Lif_abapgit_ajson~get,
      get_boolean FOR Lif_abapgit_ajson~get_boolean,
      get_integer FOR Lif_abapgit_ajson~get_integer,
      get_number FOR Lif_abapgit_ajson~get_number,
      get_date FOR Lif_abapgit_ajson~get_date,
      get_timestamp FOR Lif_abapgit_ajson~get_timestamp,
      get_string FOR Lif_abapgit_ajson~get_string,
      slice FOR Lif_abapgit_ajson~slice,
      to_abap FOR Lif_abapgit_ajson~to_abap,
      array_to_string_table FOR Lif_abapgit_ajson~array_to_string_table.

    ALIASES:
      clear FOR Lif_abapgit_ajson~clear,
      set FOR Lif_abapgit_ajson~set,
      setx FOR Lif_abapgit_ajson~setx,
      set_boolean FOR Lif_abapgit_ajson~set_boolean,
      set_string FOR Lif_abapgit_ajson~set_string,
      set_integer FOR Lif_abapgit_ajson~set_integer,
      set_date FOR Lif_abapgit_ajson~set_date,
      set_timestamp FOR Lif_abapgit_ajson~set_timestamp,
      set_null FOR Lif_abapgit_ajson~set_null,
      delete FOR Lif_abapgit_ajson~delete,
      touch_array FOR Lif_abapgit_ajson~touch_array,
      push FOR Lif_abapgit_ajson~push,
      stringify FOR Lif_abapgit_ajson~stringify.

    ALIASES:
      clone FOR Lif_abapgit_ajson~clone,
      filter FOR Lif_abapgit_ajson~filter,
      map FOR Lif_abapgit_ajson~map.

    ALIASES:
      mt_json_tree FOR Lif_abapgit_ajson~mt_json_tree,
      keep_item_order FOR Lif_abapgit_ajson~keep_item_order,
      format_datetime FOR Lif_abapgit_ajson~format_datetime,
      to_abap_corresponding_only FOR Lif_abapgit_ajson~to_abap_corresponding_only,
      freeze FOR Lif_abapgit_ajson~freeze.

    CLASS-METHODS parse
      IMPORTING
        !iv_json            TYPE string
        !iv_freeze          TYPE abap_bool DEFAULT abap_false
        !ii_custom_mapping  TYPE REF TO Lif_abapgit_ajson_mapping OPTIONAL
        !iv_keep_item_order TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ro_instance) TYPE REF TO Lcl_abapgit_ajson
      RAISING
        Lcx_abapgit_ajson_error .

    CLASS-METHODS create_empty " Might be deprecated, prefer using new( ) or create object
      IMPORTING
        !ii_custom_mapping TYPE REF TO Lif_abapgit_ajson_mapping OPTIONAL
        iv_keep_item_order TYPE abap_bool DEFAULT abap_false
        iv_format_datetime TYPE abap_bool DEFAULT abap_true
        iv_to_abap_corresponding_only TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ro_instance) TYPE REF TO Lcl_abapgit_ajson.

    " Experimental ! May change
    CLASS-METHODS create_from " TODO, rename to 'from' ?
      IMPORTING
        !ii_source_json TYPE REF TO Lif_abapgit_ajson
        !ii_filter TYPE REF TO Lif_abapgit_ajson_filter OPTIONAL " Might be deprecated, use filter() instead
        !ii_mapper TYPE REF TO Lif_abapgit_ajson_mapping OPTIONAL " Might be deprecated, use map() instead
      RETURNING
        VALUE(ro_instance) TYPE REF TO Lcl_abapgit_ajson
      RAISING
        Lcx_abapgit_ajson_error .

    METHODS constructor
      IMPORTING
        iv_keep_item_order TYPE abap_bool DEFAULT abap_false
        iv_format_datetime TYPE abap_bool DEFAULT abap_true
        iv_to_abap_corresponding_only TYPE abap_bool DEFAULT abap_false.
    CLASS-METHODS new
      IMPORTING
        iv_keep_item_order TYPE abap_bool DEFAULT abap_false
        iv_format_datetime TYPE abap_bool DEFAULT abap_true
        iv_to_abap_corresponding_only TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ro_instance) TYPE REF TO Lcl_abapgit_ajson.

*"* protected declarations
*include zcl_abapgit_ajson=============co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_ajson=============ci.
  PRIVATE SECTION.

    CLASS-DATA go_float_regex TYPE REF TO cl_abap_regex.

    DATA ms_opts TYPE Lif_abapgit_ajson=>ty_opts.
    DATA mi_custom_mapping TYPE REF TO Lif_abapgit_ajson_mapping. " DEPRECATED, will be removed

    METHODS get_item
      IMPORTING
        iv_path        TYPE string
      RETURNING
        VALUE(rv_item) TYPE REF TO Lif_abapgit_ajson_types=>ty_node.
    METHODS prove_path_exists
      IMPORTING
        iv_path              TYPE string
      RETURNING
        VALUE(rr_end_node) TYPE REF TO Lif_abapgit_ajson_types=>ty_node
      RAISING
        Lcx_abapgit_ajson_error.
    METHODS delete_subtree
      IMPORTING
        iv_path           TYPE string
        iv_name           TYPE string
        ir_parent         TYPE REF TO Lif_abapgit_ajson_types=>ty_node OPTIONAL
      RETURNING
        VALUE(rs_top_node) TYPE Lif_abapgit_ajson_types=>ty_node.
    METHODS read_only_watchdog
      RAISING
        Lcx_abapgit_ajson_error.
endclass. "ZCL_ABAPGIT_AJSON definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_AJSON_FILTER_LIB

*"* local type definitions
*include zcl_abapgit_ajson_filter_lib==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_AJSON_FILTER_LIB definition
*"* public declarations
*include zcl_abapgit_ajson_filter_lib==cu.
CLASS Lcl_abapgit_ajson_filter_lib DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS create_empty_filter
      RETURNING
        VALUE(ri_filter) TYPE REF TO Lif_abapgit_ajson_filter
      RAISING
        Lcx_abapgit_ajson_error .
    CLASS-METHODS create_path_filter
      IMPORTING
        !it_skip_paths TYPE string_table OPTIONAL
        !iv_skip_paths TYPE string OPTIONAL
        !iv_pattern_search TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ri_filter) TYPE REF TO Lif_abapgit_ajson_filter
      RAISING
        Lcx_abapgit_ajson_error .
    CLASS-METHODS create_and_filter
      IMPORTING
        !it_filters TYPE Lif_abapgit_ajson_filter=>ty_filter_tab
      RETURNING
        VALUE(ri_filter) TYPE REF TO Lif_abapgit_ajson_filter
      RAISING
        Lcx_abapgit_ajson_error .

*"* protected declarations
*include zcl_abapgit_ajson_filter_lib==co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_ajson_filter_lib==ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_AJSON_FILTER_LIB definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_AJSON_MAPPING

*"* local type definitions
*include zcl_abapgit_ajson_mapping=====ccdef.
CLASS SHRITEFUH64VYIPO5IWUYB3KWVDSFY DEFINITION.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_ajson_mapping.

    METHODS constructor
      IMPORTING
        it_mapping_fields TYPE Lif_abapgit_ajson_mapping~ty_mapping_fields OPTIONAL.

  PROTECTED SECTION.

  PRIVATE SECTION.
    DATA mt_mapping_fields TYPE Lif_abapgit_ajson_mapping~ty_mapping_fields.

ENDCLASS.

CLASS SHRITEFUH64VYIPO5IWUYB3KWVESFY DEFINITION.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_ajson_mapping.

    METHODS constructor
      IMPORTING
        it_rename_map TYPE Lif_abapgit_ajson_mapping~tty_rename_map
        iv_rename_by TYPE i.

  PROTECTED SECTION.

  PRIVATE SECTION.
    DATA mt_rename_map TYPE Lif_abapgit_ajson_mapping~tty_rename_map.
    DATA mv_rename_by TYPE i.

ENDCLASS.

CLASS SHRITEFUH64VYIPO5IWUYB3KWVFSFY DEFINITION.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_ajson_mapping.

    METHODS constructor
      IMPORTING
        it_mapping_fields TYPE Lif_abapgit_ajson_mapping~ty_mapping_fields OPTIONAL.

  PROTECTED SECTION.

  PRIVATE SECTION.
    DATA mi_mapping_fields TYPE REF TO Lif_abapgit_ajson_mapping.

ENDCLASS.


CLASS SHRITEFUH64VYIPO5IWUYB3KWVGSFY DEFINITION.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_ajson_mapping.

    METHODS constructor
      IMPORTING
        it_mapping_fields TYPE Lif_abapgit_ajson_mapping~ty_mapping_fields OPTIONAL.

  PROTECTED SECTION.

  PRIVATE SECTION.
    DATA mi_mapping_fields TYPE REF TO Lif_abapgit_ajson_mapping.

ENDCLASS.


CLASS SHRITEFUH64VYIPO5IWUYB3KWVHSFY DEFINITION.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_ajson_mapping.

    METHODS constructor
      IMPORTING
        it_mapping_fields   TYPE Lif_abapgit_ajson_mapping~ty_mapping_fields OPTIONAL
        iv_first_json_upper TYPE abap_bool DEFAULT abap_true.

  PROTECTED SECTION.

  PRIVATE SECTION.
    DATA mv_first_json_upper TYPE abap_bool.
    DATA mi_mapping_fields TYPE REF TO Lif_abapgit_ajson_mapping.

ENDCLASS.

CLASS SHRITEFUH64VYIPO5IWUYB3KWVISFY DEFINITION.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_ajson_mapping.

    METHODS constructor
      IMPORTING
        it_queue TYPE Lif_abapgit_ajson_mapping=>ty_table_of.

  PROTECTED SECTION.

  PRIVATE SECTION.
    DATA mt_queue TYPE Lif_abapgit_ajson_mapping=>ty_table_of.

ENDCLASS.

CLASS SHRITEFUH64VYIPO5IWUYB3KWVJSFY DEFINITION.
  PUBLIC SECTION.
    INTERFACES Lif_abapgit_ajson_mapping.
ENDCLASS.

CLASS SHRITEFUH64VYIPO5IWUYB3KWVKSFY DEFINITION.
  PUBLIC SECTION.
    INTERFACES Lif_abapgit_ajson_mapping.
    METHODS constructor
      IMPORTING
        iv_first_json_upper TYPE abap_bool.
  PRIVATE SECTION.
    DATA mv_first_json_upper TYPE abap_bool.
ENDCLASS.

*"* class ZCL_ABAPGIT_AJSON_MAPPING definition
*"* public declarations
*include zcl_abapgit_ajson_mapping=====cu.
CLASS Lcl_abapgit_ajson_mapping DEFINITION
*public
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    CONSTANTS:
      BEGIN OF rename_by,
        attr_name TYPE i VALUE 0,
        full_path TYPE i VALUE 1,
        pattern TYPE i VALUE 2,
        " regex type i value 3, " TODO add if needed in future
      END OF rename_by.

    CLASS-METHODS create_camel_case " DEPRECATED
      IMPORTING
        it_mapping_fields   TYPE Lif_abapgit_ajson_mapping=>ty_mapping_fields OPTIONAL
        iv_first_json_upper TYPE abap_bool DEFAULT abap_true
      RETURNING
        VALUE(ri_mapping)   TYPE REF TO Lif_abapgit_ajson_mapping.

    CLASS-METHODS create_upper_case
      IMPORTING
        it_mapping_fields TYPE Lif_abapgit_ajson_mapping=>ty_mapping_fields OPTIONAL
      RETURNING
        VALUE(ri_mapping) TYPE REF TO Lif_abapgit_ajson_mapping.

    CLASS-METHODS create_lower_case
      IMPORTING
        it_mapping_fields TYPE Lif_abapgit_ajson_mapping=>ty_mapping_fields OPTIONAL
      RETURNING
        VALUE(ri_mapping) TYPE REF TO Lif_abapgit_ajson_mapping.

    CLASS-METHODS create_field_mapping " DEPRECATED
      IMPORTING
        it_mapping_fields TYPE Lif_abapgit_ajson_mapping=>ty_mapping_fields
      RETURNING
        VALUE(ri_mapping) TYPE REF TO Lif_abapgit_ajson_mapping.

    CLASS-METHODS create_rename
      IMPORTING
        it_rename_map TYPE Lif_abapgit_ajson_mapping=>tty_rename_map
        iv_rename_by TYPE i DEFAULT rename_by-attr_name
      RETURNING
        VALUE(ri_mapping) TYPE REF TO Lif_abapgit_ajson_mapping.

    CLASS-METHODS create_compound_mapper
      IMPORTING
        ii_mapper1 TYPE REF TO Lif_abapgit_ajson_mapping OPTIONAL
        ii_mapper2 TYPE REF TO Lif_abapgit_ajson_mapping OPTIONAL
        ii_mapper3 TYPE REF TO Lif_abapgit_ajson_mapping OPTIONAL
        it_more TYPE Lif_abapgit_ajson_mapping=>ty_table_of OPTIONAL
      RETURNING
        VALUE(ri_mapping) TYPE REF TO Lif_abapgit_ajson_mapping.

    CLASS-METHODS create_to_snake_case
      RETURNING
        VALUE(ri_mapping) TYPE REF TO Lif_abapgit_ajson_mapping.

    CLASS-METHODS create_to_camel_case
      IMPORTING
        iv_first_json_upper TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ri_mapping) TYPE REF TO Lif_abapgit_ajson_mapping.

*"* protected declarations
*include zcl_abapgit_ajson_mapping=====co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_ajson_mapping=====ci.
  PRIVATE SECTION.

endclass. "ZCL_ABAPGIT_AJSON_MAPPING definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_AJSON_UTILITIES

*"* local type definitions
*include zcl_abapgit_ajson_utilities===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_AJSON_UTILITIES definition
*"* public declarations
*include zcl_abapgit_ajson_utilities===cu.
CLASS Lcl_abapgit_ajson_utilities DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS new
      RETURNING
        VALUE(ro_instance) TYPE REF TO Lcl_abapgit_ajson_utilities.
    METHODS diff
      IMPORTING
        !iv_json_a            TYPE string OPTIONAL
        !iv_json_b            TYPE string OPTIONAL
        !io_json_a            TYPE REF TO Lif_abapgit_ajson OPTIONAL
        !io_json_b            TYPE REF TO Lif_abapgit_ajson OPTIONAL
        !iv_keep_empty_arrays TYPE abap_bool DEFAULT abap_false
      EXPORTING
        !eo_insert            TYPE REF TO Lif_abapgit_ajson
        !eo_delete            TYPE REF TO Lif_abapgit_ajson
        !eo_change            TYPE REF TO Lif_abapgit_ajson
      RAISING
        Lcx_abapgit_ajson_error .
    METHODS merge
      IMPORTING
        !iv_json_a            TYPE string OPTIONAL
        !iv_json_b            TYPE string OPTIONAL
        !io_json_a            TYPE REF TO Lif_abapgit_ajson OPTIONAL
        !io_json_b            TYPE REF TO Lif_abapgit_ajson OPTIONAL
        !iv_keep_empty_arrays TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ro_json)        TYPE REF TO Lif_abapgit_ajson
      RAISING
        Lcx_abapgit_ajson_error .
    METHODS sort
      IMPORTING
        !iv_json         TYPE string OPTIONAL
        !io_json         TYPE REF TO Lif_abapgit_ajson OPTIONAL
      RETURNING
        VALUE(rv_sorted) TYPE string
      RAISING
        Lcx_abapgit_ajson_error .
    METHODS is_equal
      IMPORTING
        !iv_json_a            TYPE string OPTIONAL
        !iv_json_b            TYPE string OPTIONAL
        !ii_json_a            TYPE REF TO Lif_abapgit_ajson OPTIONAL
        !ii_json_b            TYPE REF TO Lif_abapgit_ajson OPTIONAL
      RETURNING
        VALUE(rv_yes) TYPE abap_bool
      RAISING
        Lcx_abapgit_ajson_error .

*"* protected declarations
*include zcl_abapgit_ajson_utilities===co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_ajson_utilities===ci.
  PRIVATE SECTION.

    DATA mo_json_a TYPE REF TO Lif_abapgit_ajson .
    DATA mo_json_b TYPE REF TO Lif_abapgit_ajson .
    DATA mo_insert TYPE REF TO Lif_abapgit_ajson .
    DATA mo_delete TYPE REF TO Lif_abapgit_ajson .
    DATA mo_change TYPE REF TO Lif_abapgit_ajson .

    METHODS normalize_input
      IMPORTING
        !iv_json       TYPE string OPTIONAL
        !io_json       TYPE REF TO Lif_abapgit_ajson OPTIONAL
      RETURNING
        VALUE(ro_json) TYPE REF TO Lif_abapgit_ajson
      RAISING
        Lcx_abapgit_ajson_error .
    METHODS diff_a_b
      IMPORTING
        !iv_path TYPE string
      RAISING
        Lcx_abapgit_ajson_error .
    METHODS diff_b_a
      IMPORTING
        !iv_path  TYPE string
        !iv_array TYPE abap_bool DEFAULT abap_false
      RAISING
        Lcx_abapgit_ajson_error .
    METHODS delete_empty_nodes
      IMPORTING
        !io_json              TYPE REF TO Lif_abapgit_ajson
        !iv_keep_empty_arrays TYPE abap_bool
      RAISING
        Lcx_abapgit_ajson_error .
endclass. "ZCL_ABAPGIT_AJSON_UTILITIES definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_APACK_MIGRATION

*"* local type definitions
*include zcl_abapgit_apack_migration===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_APACK_MIGRATION definition
*"* public declarations
*include zcl_abapgit_apack_migration===cu.
CLASS Lcl_abapgit_apack_migration DEFINITION
*public
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.
    CONSTANTS: c_apack_interface_version TYPE i VALUE 1.
    CLASS-METHODS: run RAISING Lcx_abapgit_exception.
    METHODS: perform_migration RAISING Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_apack_migration===co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_apack_migration===ci.
  PRIVATE SECTION.

    METHODS interface_exists
      RETURNING
        VALUE(rv_interface_exists) TYPE abap_bool .
    METHODS interface_valid
      RETURNING
        VALUE(rv_interface_valid) TYPE abap_bool .
    METHODS create_interface
      RAISING
        Lcx_abapgit_exception .
    METHODS add_interface_source_classic
      IMPORTING
        !is_clskey TYPE seoclskey
      RAISING
        Lcx_abapgit_exception .
    METHODS add_interface_source
      IMPORTING
        !is_clskey TYPE seoclskey
      RAISING
        Lcx_abapgit_exception .
    METHODS get_interface_source
      RETURNING
        VALUE(rt_source) TYPE Lif_abapgit_definitions=>ty_string_tt .
    METHODS add_intf_source_and_activate
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_APACK_MIGRATION definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_BACKGROUND_PUSH_AU

*"* local type definitions
*include zcl_abapgit_background_push_auccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_BACKGROUND_PUSH_AU definition
*"* public declarations
*include zcl_abapgit_background_push_aucu.
CLASS Lcl_abapgit_background_push_au DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_background .
*"* protected declarations
*include zcl_abapgit_background_push_auco.
  PROTECTED SECTION.

    DATA mi_log TYPE REF TO Lif_abapgit_log .

    METHODS build_comment
      IMPORTING
        !is_files         TYPE Lif_abapgit_definitions=>ty_stage_files
      RETURNING
        VALUE(rv_comment) TYPE string .
    METHODS push_auto
      IMPORTING
        !io_repo TYPE REF TO Lcl_abapgit_repo_online
      RAISING
        Lcx_abapgit_exception .
    METHODS determine_user_details
      IMPORTING
        !iv_changed_by TYPE syuname
      RETURNING
        VALUE(rs_user) TYPE Lif_abapgit_git_definitions=>ty_git_user .
    METHODS push_deletions
      IMPORTING
        !io_repo  TYPE REF TO Lcl_abapgit_repo_online
        !is_files TYPE Lif_abapgit_definitions=>ty_stage_files
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_background_push_auci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_BACKGROUND_PUSH_AU definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_BACKGROUND_PUSH_FI

*"* local type definitions
*include zcl_abapgit_background_push_ficcdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_BACKGROUND_PUSH_FI definition
*"* public declarations
*include zcl_abapgit_background_push_ficu.
CLASS Lcl_abapgit_background_push_fi DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_background .
*"* protected declarations
*include zcl_abapgit_background_push_fico.
  PROTECTED SECTION.

    CONSTANTS:
      BEGIN OF c_settings,
        name  TYPE string VALUE 'NAME',
        email TYPE string VALUE 'EMAIL',
      END OF c_settings .
    DATA mi_log TYPE REF TO Lif_abapgit_log .

    METHODS build_comment
      IMPORTING
        !is_files         TYPE Lif_abapgit_definitions=>ty_stage_files
      RETURNING
        VALUE(rv_comment) TYPE string .
    METHODS push_fixed
      IMPORTING
        !io_repo  TYPE REF TO Lcl_abapgit_repo_online
        !iv_name  TYPE string
        !iv_email TYPE string
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_background_push_fici.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_BACKGROUND_PUSH_FI definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_DATA_CONFIG

*"* local type definitions
*include zcl_abapgit_data_config=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_DATA_CONFIG definition
*"* public declarations
*include zcl_abapgit_data_config=======cu.
CLASS Lcl_abapgit_data_config DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_data_config .
*"* protected declarations
*include zcl_abapgit_data_config=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_data_config=======ci.
  PRIVATE SECTION.

    DATA mt_config TYPE Lif_abapgit_data_config=>ty_config_tt .

    METHODS dump
      IMPORTING
        !is_config     TYPE Lif_abapgit_data_config=>ty_config
      RETURNING
        VALUE(rv_json) TYPE xstring
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_DATA_CONFIG definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_DATA_SERIALIZER

*"* local type definitions
*include zcl_abapgit_data_serializer===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_DATA_SERIALIZER definition
*"* public declarations
*include zcl_abapgit_data_serializer===cu.
CLASS Lcl_abapgit_data_serializer DEFINITION
*public
  CREATE PRIVATE
  friends Lcl_abapgit_data_factory


.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_data_serializer .

*"* protected declarations
*include zcl_abapgit_data_serializer===co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_data_serializer===ci.
  PRIVATE SECTION.

    CONSTANTS c_max_records TYPE i VALUE 20000 ##NO_TEXT.

    METHODS convert_itab_to_json
      IMPORTING
        !ir_data         TYPE REF TO data
        !iv_skip_initial TYPE abap_bool
      RETURNING
        VALUE(rv_data)   TYPE xstring
      RAISING
        Lcx_abapgit_exception .
    METHODS read_database_table
      IMPORTING
        !iv_name       TYPE tadir-obj_name
        !it_where      TYPE string_table
      RETURNING
        VALUE(rr_data) TYPE REF TO data
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_DATA_SERIALIZER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_DATA_SUPPORTER

*"* local type definitions
*include zcl_abapgit_data_supporter====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_DATA_SUPPORTER definition
*"* public declarations
*include zcl_abapgit_data_supporter====cu.
CLASS Lcl_abapgit_data_supporter DEFINITION
*public
  CREATE PRIVATE
  friends Lcl_abapgit_data_factory


.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_data_supporter.

*"* protected declarations
*include zcl_abapgit_data_supporter====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_data_supporter====ci.
  PRIVATE SECTION.

    DATA mt_supported_objects TYPE Lif_abapgit_data_supporter=>ty_objects.

    METHODS get_supported_objects.

endclass. "ZCL_ABAPGIT_DATA_SUPPORTER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_DATA_UTILS

*"* local type definitions
*include zcl_abapgit_data_utils========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_DATA_UTILS definition
*"* public declarations
*include zcl_abapgit_data_utils========cu.
CLASS Lcl_abapgit_data_utils DEFINITION
*public
  CREATE PUBLIC.

  PUBLIC SECTION.
    TYPES ty_names TYPE STANDARD TABLE OF abap_compname WITH DEFAULT KEY .
    CLASS-METHODS build_table_itab
      IMPORTING
        !iv_name       TYPE tadir-obj_name
      RETURNING
        VALUE(rr_data) TYPE REF TO data
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS build_data_filename
      IMPORTING
        !is_config         TYPE Lif_abapgit_data_config=>ty_config
      RETURNING
        VALUE(rv_filename) TYPE string.
    CLASS-METHODS build_config_filename
      IMPORTING
        !is_config         TYPE Lif_abapgit_data_config=>ty_config
      RETURNING
        VALUE(rv_filename) TYPE string.
    CLASS-METHODS jump
      IMPORTING
        !is_item       TYPE Lif_abapgit_definitions=>ty_item
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS does_table_exist
      IMPORTING
        !iv_name         TYPE tadir-obj_name
      RETURNING
        VALUE(rv_exists) TYPE abap_bool.
    CLASS-METHODS is_customizing_table
      IMPORTING
        !iv_name              TYPE tadir-obj_name
      RETURNING
        VALUE(rv_customizing) TYPE abap_bool.
    CLASS-METHODS list_key_fields
      IMPORTING
        !iv_name        TYPE tadir-obj_name
      RETURNING
        VALUE(rt_names) TYPE ty_names
      RAISING
        Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_data_utils========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_data_utils========ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_DATA_UTILS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_DIFF

*"* local type definitions
*include zcl_abapgit_diff==============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_DIFF definition
*"* public declarations
*include zcl_abapgit_diff==============cu.
CLASS Lcl_abapgit_diff DEFINITION
*public
  CREATE PUBLIC.

  PUBLIC SECTION.
    CONSTANTS c_starting_beacon TYPE i VALUE 1.

* assumes data is UTF8 based with newlines
    METHODS constructor
      IMPORTING
        !iv_new                TYPE xstring
        !iv_old                TYPE xstring
        !iv_ignore_indentation TYPE abap_bool DEFAULT abap_false
        !iv_ignore_comments    TYPE abap_bool DEFAULT abap_false
        !iv_ignore_case        TYPE abap_bool DEFAULT abap_false
      RAISING
        Lcx_abapgit_exception.
    METHODS get
      RETURNING
        VALUE(rt_diff) TYPE Lif_abapgit_definitions=>ty_diffs_tt.
    METHODS stats
      RETURNING
        VALUE(rs_count) TYPE Lif_abapgit_definitions=>ty_count.
    METHODS set_patch_new
      IMPORTING
        !iv_line_new   TYPE i
        !iv_patch_flag TYPE abap_bool
      RAISING
        Lcx_abapgit_exception.
    METHODS set_patch_old
      IMPORTING
        !iv_line_old   TYPE i
        !iv_patch_flag TYPE abap_bool
      RAISING
        Lcx_abapgit_exception.
    METHODS get_beacons
      RETURNING
        VALUE(rt_beacons) TYPE Lif_abapgit_definitions=>ty_string_tt.
    METHODS is_line_patched
      IMPORTING
        iv_index          TYPE i
      RETURNING
        VALUE(rv_patched) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception.
    METHODS set_patch_by_old_diff
      IMPORTING
        is_diff_old   TYPE Lif_abapgit_definitions=>ty_diff
        iv_patch_flag TYPE abap_bool.

*"* protected declarations
*include zcl_abapgit_diff==============co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_diff==============ci.
  PRIVATE SECTION.

    TYPES:
      ty_regexset_tt TYPE STANDARD TABLE OF REF TO cl_abap_regex WITH KEY table_line.

    DATA mt_beacons TYPE Lif_abapgit_definitions=>ty_string_tt.
    DATA mt_diff TYPE Lif_abapgit_definitions=>ty_diffs_tt.
    DATA ms_stats TYPE Lif_abapgit_definitions=>ty_count.
    DATA mv_compare_mode TYPE c LENGTH 1.
    DATA mv_ignore_case TYPE abap_bool.

    METHODS unpack
      IMPORTING
        !iv_new TYPE xstring
        !iv_old TYPE xstring
      EXPORTING
        !et_new TYPE rswsourcet
        !et_old TYPE rswsourcet
      RAISING
        Lcx_abapgit_exception.
    METHODS map_beacons.
    METHODS shortlist.
    METHODS create_regex_set
      RETURNING
        VALUE(rt_regex_set) TYPE ty_regexset_tt.
    METHODS compute_and_render
      IMPORTING
        !it_new        TYPE rswsourcet
        !it_old        TYPE rswsourcet
      RETURNING
        VALUE(rt_diff) TYPE Lif_abapgit_definitions=>ty_diffs_tt.
    METHODS calculate_stats.
    METHODS adjust_diff.
endclass. "ZCL_ABAPGIT_DIFF definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GITV2_PORCELAIN

*"* local type definitions
*include zcl_abapgit_gitv2_porcelain===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GITV2_PORCELAIN definition
*"* public declarations
*include zcl_abapgit_gitv2_porcelain===cu.
CLASS Lcl_abapgit_gitv2_porcelain DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gitv2_porcelain.

*"* protected declarations
*include zcl_abapgit_gitv2_porcelain===co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gitv2_porcelain===ci.
  PRIVATE SECTION.
    CONSTANTS:
      BEGIN OF c_service,
        receive TYPE string VALUE 'receive',                "#EC NOTEXT
        upload  TYPE string VALUE 'upload',                 "#EC NOTEXT
      END OF c_service .

    CONSTANTS c_flush_pkt TYPE c LENGTH 4 VALUE '0000'.
    CONSTANTS c_delim_pkt TYPE c LENGTH 4 VALUE '0001'.

    CLASS-METHODS send_command
      IMPORTING
        iv_url             TYPE string
        iv_service         TYPE string
        iv_command         TYPE string
        it_arguments       TYPE string_table OPTIONAL
      RETURNING
        VALUE(rv_response) TYPE xstring
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS decode_pack
      IMPORTING
        iv_xstring        TYPE xstring
      RETURNING
        VALUE(rt_objects) TYPE Lif_abapgit_definitions=>ty_objects_tt
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_GITV2_PORCELAIN definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GIT_ADD_PATCH

*"* local type definitions
*include zcl_abapgit_git_add_patch=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GIT_ADD_PATCH definition
*"* public declarations
*include zcl_abapgit_git_add_patch=====cu.
CLASS Lcl_abapgit_git_add_patch DEFINITION
*public
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    METHODS:
      constructor
        IMPORTING
          it_diff TYPE Lif_abapgit_definitions=>ty_diffs_tt,

      get_patch
        RETURNING
          VALUE(rt_patch) TYPE string_table
        RAISING
          Lcx_abapgit_exception,

      get_patch_binary
        RETURNING
          VALUE(rv_patch_binary) TYPE xstring
        RAISING
          Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_git_add_patch=====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_git_add_patch=====ci.
  PRIVATE SECTION.
    DATA:
      mt_diff  TYPE Lif_abapgit_definitions=>ty_diffs_tt,
      mt_patch TYPE string_table.

    METHODS:
      calculate_patch
        RETURNING
          VALUE(rt_patch) TYPE string_table
        RAISING
          Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_GIT_ADD_PATCH definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GIT_PACK

*"* local type definitions
*include zcl_abapgit_git_pack==========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section

CLASS SHRITEFUH64VYIPO5IWUYB3KWX7SFY DEFINITION FINAL.
  PUBLIC SECTION.
    TYPES: ty_hex TYPE x LENGTH 1.

    METHODS:
      constructor
        IMPORTING
          iv_data TYPE xstring,
      get
        RETURNING VALUE(rv_data) TYPE xstring,
      eat_byte
        RETURNING VALUE(rv_x) TYPE ty_hex,
      eat_bytes
        IMPORTING
          iv_length   TYPE i
        RETURNING
          VALUE(rv_x) TYPE xstring.

  PRIVATE SECTION.
    DATA: mv_data TYPE xstring.
ENDCLASS.

*"* class ZCL_ABAPGIT_GIT_PACK definition
*"* public declarations
*include zcl_abapgit_git_pack==========cu.
CLASS Lcl_abapgit_git_pack DEFINITION
*public
  CREATE PUBLIC




.

  PUBLIC SECTION.
    TYPES:
      BEGIN OF ty_node,
        chmod TYPE Lif_abapgit_git_definitions=>ty_chmod,
        name  TYPE string,
        sha1  TYPE Lif_abapgit_git_definitions=>ty_sha1,
      END OF ty_node .
    TYPES:
      ty_nodes_tt TYPE STANDARD TABLE OF ty_node WITH DEFAULT KEY .
    TYPES:
      BEGIN OF ty_commit,
        tree      TYPE Lif_abapgit_git_definitions=>ty_sha1,
        parent    TYPE Lif_abapgit_git_definitions=>ty_sha1,
        parent2   TYPE Lif_abapgit_git_definitions=>ty_sha1,
        author    TYPE string,
        committer TYPE string,
        gpgsig    TYPE string,
        body      TYPE string,
      END OF ty_commit .
    TYPES:
      BEGIN OF ty_tag,
        object       TYPE string,
        type         TYPE string,
        tag          TYPE string,
        tagger_name  TYPE string,
        tagger_email TYPE string,
        message      TYPE string,
        body         TYPE string,
      END OF ty_tag .

    CLASS-METHODS decode
      IMPORTING
        !iv_data          TYPE xstring
      RETURNING
        VALUE(rt_objects) TYPE Lif_abapgit_definitions=>ty_objects_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS decode_tree
      IMPORTING
        !iv_data        TYPE xstring
      RETURNING
        VALUE(rt_nodes) TYPE ty_nodes_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS decode_commit
      IMPORTING
        !iv_data         TYPE xstring
      RETURNING
        VALUE(rs_commit) TYPE ty_commit
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS decode_tag
      IMPORTING
        !iv_data      TYPE xstring
      RETURNING
        VALUE(rs_tag) TYPE ty_tag
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS encode
      IMPORTING
        !it_objects    TYPE Lif_abapgit_definitions=>ty_objects_tt
      RETURNING
        VALUE(rv_data) TYPE xstring
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS encode_tree
      IMPORTING
        !it_nodes      TYPE ty_nodes_tt
      RETURNING
        VALUE(rv_data) TYPE xstring
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS encode_commit
      IMPORTING
        !is_commit     TYPE ty_commit
      RETURNING
        VALUE(rv_data) TYPE xstring
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS encode_tag
      IMPORTING
        !is_tag        TYPE ty_tag
      RETURNING
        VALUE(rv_data) TYPE xstring
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_git_pack==========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_git_pack==========ci.
  PRIVATE SECTION.

    CONSTANTS:
      c_pack_start TYPE x LENGTH 4 VALUE '5041434B' ##NO_TEXT.
    CONSTANTS:
      c_zlib       TYPE x LENGTH 2 VALUE '789C' ##NO_TEXT.
    CONSTANTS:
      c_zlib_hmm   TYPE x LENGTH 2 VALUE '7801' ##NO_TEXT.
    CONSTANTS:                                                    " PACK
      c_version    TYPE x LENGTH 4 VALUE '00000002' ##NO_TEXT.

    CLASS-METHODS decode_deltas
      CHANGING
        !ct_objects TYPE Lif_abapgit_definitions=>ty_objects_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS delta
      IMPORTING
        !is_object  TYPE Lif_abapgit_definitions=>ty_object
      CHANGING
        !ct_objects TYPE Lif_abapgit_definitions=>ty_objects_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS delta_header
      IMPORTING
        !io_stream       TYPE REF TO SHRITEFUH64VYIPO5IWUYB3KWX7SFY
      RETURNING
        VALUE(rv_header) TYPE i .
    CLASS-METHODS sort_tree
      IMPORTING
        !it_nodes       TYPE ty_nodes_tt
      RETURNING
        VALUE(rt_nodes) TYPE ty_nodes_tt .
    CLASS-METHODS get_type
      IMPORTING
        !iv_x          TYPE x
      RETURNING
        VALUE(rv_type) TYPE Lif_abapgit_git_definitions=>ty_type
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS get_length
      EXPORTING
        !ev_length TYPE i
      CHANGING
        !cv_data   TYPE xstring .
    CLASS-METHODS type_and_length
      IMPORTING
        !iv_type          TYPE Lif_abapgit_git_definitions=>ty_type
        !iv_length        TYPE i
      RETURNING
        VALUE(rv_xstring) TYPE xstring
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS zlib_decompress
      CHANGING
        !cv_data         TYPE xstring
        !cv_decompressed TYPE xstring
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_GIT_PACK definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GIT_PORCELAIN

*"* local type definitions
*include zcl_abapgit_git_porcelain=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GIT_PORCELAIN definition
*"* public declarations
*include zcl_abapgit_git_porcelain=====cu.
CLASS Lcl_abapgit_git_porcelain DEFINITION
*public
  FINAL
  CREATE PUBLIC


.

  PUBLIC SECTION.

    TYPES:
      BEGIN OF ty_pull_result,
        files   TYPE Lif_abapgit_git_definitions=>ty_files_tt,
        objects TYPE Lif_abapgit_definitions=>ty_objects_tt,
        commit  TYPE Lif_abapgit_git_definitions=>ty_sha1,
      END OF ty_pull_result .
    TYPES:
      BEGIN OF ty_push_result,
        new_files     TYPE Lif_abapgit_git_definitions=>ty_files_tt,
        branch        TYPE Lif_abapgit_git_definitions=>ty_sha1,
        updated_files TYPE Lif_abapgit_git_definitions=>ty_file_signatures_tt,
        new_objects   TYPE Lif_abapgit_definitions=>ty_objects_tt,
      END OF ty_push_result .

    CLASS-METHODS pull_by_branch
      IMPORTING
        !iv_url          TYPE string
        !iv_branch_name  TYPE string
        !iv_deepen_level TYPE i DEFAULT 1
      RETURNING
        VALUE(rs_result) TYPE ty_pull_result
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS pull_by_commit
      IMPORTING
        !iv_url          TYPE string
        !iv_commit_hash  TYPE Lif_abapgit_git_definitions=>ty_sha1
        !iv_deepen_level TYPE i DEFAULT 1
      RETURNING
        VALUE(rs_result) TYPE ty_pull_result
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS push
      IMPORTING
        !is_comment      TYPE Lif_abapgit_git_definitions=>ty_comment
        !io_stage        TYPE REF TO Lcl_abapgit_stage
        !it_old_objects  TYPE Lif_abapgit_definitions=>ty_objects_tt
        !iv_parent       TYPE Lif_abapgit_git_definitions=>ty_sha1
        !iv_url          TYPE string
        !iv_branch_name  TYPE string
      RETURNING
        VALUE(rs_result) TYPE ty_push_result
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS create_branch
      IMPORTING
        !iv_url  TYPE string
        !iv_name TYPE string
        !iv_from TYPE Lif_abapgit_git_definitions=>ty_sha1
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS create_tag
      IMPORTING
        !iv_url TYPE string
        !is_tag TYPE Lif_abapgit_git_definitions=>ty_git_tag
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS delete_branch
      IMPORTING
        !iv_url    TYPE string
        !is_branch TYPE Lif_abapgit_git_definitions=>ty_git_branch
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS delete_tag
      IMPORTING
        !iv_url TYPE string
        !is_tag TYPE Lif_abapgit_git_definitions=>ty_git_tag
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS full_tree
      IMPORTING
        !it_objects        TYPE Lif_abapgit_definitions=>ty_objects_tt
        !iv_parent         TYPE Lif_abapgit_git_definitions=>ty_sha1
      RETURNING
        VALUE(rt_expanded) TYPE Lif_abapgit_git_definitions=>ty_expanded_tt
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_git_porcelain=====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_git_porcelain=====ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_tree,
        path TYPE string,
        data TYPE xstring,
        sha1 TYPE Lif_abapgit_git_definitions=>ty_sha1,
      END OF ty_tree .
    TYPES:
      ty_trees_tt TYPE STANDARD TABLE OF ty_tree WITH DEFAULT KEY .
    TYPES:
      BEGIN OF ty_folder,
        path  TYPE string,
        count TYPE i,
        sha1  TYPE Lif_abapgit_git_definitions=>ty_sha1,
      END OF ty_folder .
    TYPES:
      ty_folders_tt TYPE STANDARD TABLE OF ty_folder WITH DEFAULT KEY .

    CONSTANTS c_zero TYPE Lif_abapgit_git_definitions=>ty_sha1
      VALUE '0000000000000000000000000000000000000000' ##NO_TEXT.

    CLASS-METHODS build_trees
      IMPORTING
        !it_expanded    TYPE Lif_abapgit_git_definitions=>ty_expanded_tt
      RETURNING
        VALUE(rt_trees) TYPE ty_trees_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS find_folders
      IMPORTING
        !it_expanded      TYPE Lif_abapgit_git_definitions=>ty_expanded_tt
      RETURNING
        VALUE(rt_folders) TYPE ty_folders_tt .
    CLASS-METHODS pull
      IMPORTING
        !iv_commit      TYPE Lif_abapgit_git_definitions=>ty_sha1
        !it_objects     TYPE Lif_abapgit_definitions=>ty_objects_tt
      RETURNING
        VALUE(rt_files) TYPE Lif_abapgit_git_definitions=>ty_files_tt
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS walk
      IMPORTING
        !it_objects TYPE Lif_abapgit_definitions=>ty_objects_tt
        !iv_sha1    TYPE Lif_abapgit_git_definitions=>ty_sha1
        !iv_path    TYPE string
      CHANGING
        !ct_files   TYPE Lif_abapgit_git_definitions=>ty_files_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS walk_tree
      IMPORTING
        !it_objects        TYPE Lif_abapgit_definitions=>ty_objects_tt
        !iv_tree           TYPE Lif_abapgit_git_definitions=>ty_sha1
        !iv_base           TYPE string
      RETURNING
        VALUE(rt_expanded) TYPE Lif_abapgit_git_definitions=>ty_expanded_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS receive_pack_push
      IMPORTING
        !is_comment     TYPE Lif_abapgit_git_definitions=>ty_comment
        !it_trees       TYPE ty_trees_tt
        !it_blobs       TYPE Lif_abapgit_git_definitions=>ty_files_tt
        !iv_parent      TYPE Lif_abapgit_git_definitions=>ty_sha1
        !iv_parent2     TYPE Lif_abapgit_git_definitions=>ty_sha1 OPTIONAL
        !iv_url         TYPE string
        !iv_branch_name TYPE string
      EXPORTING
        !ev_new_commit  TYPE Lif_abapgit_git_definitions=>ty_sha1
        !et_new_objects TYPE Lif_abapgit_definitions=>ty_objects_tt
        !ev_new_tree    TYPE Lif_abapgit_git_definitions=>ty_sha1
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS create_annotated_tag
      IMPORTING
        !is_tag TYPE Lif_abapgit_git_definitions=>ty_git_tag
        !iv_url TYPE string
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS create_lightweight_tag
      IMPORTING
        is_tag TYPE Lif_abapgit_git_definitions=>ty_git_tag
        iv_url TYPE string
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS delete_annotated_tag
      IMPORTING
        !iv_url TYPE string
        !is_tag TYPE Lif_abapgit_git_definitions=>ty_git_tag
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS delete_lightweight_tag
      IMPORTING
        !iv_url TYPE string
        !is_tag TYPE Lif_abapgit_git_definitions=>ty_git_tag
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS empty_packfile
      RETURNING
        VALUE(rv_pack) TYPE xstring
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_GIT_PORCELAIN definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GIT_TRANSPORT

*"* local type definitions
*include zcl_abapgit_git_transport=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GIT_TRANSPORT definition
*"* public declarations
*include zcl_abapgit_git_transport=====cu.
CLASS Lcl_abapgit_git_transport DEFINITION
*public
  FINAL
  CREATE PUBLIC


.

  PUBLIC SECTION.

* remote to local
    CLASS-METHODS upload_pack_by_branch
      IMPORTING
        !iv_url          TYPE string
        !iv_branch_name  TYPE string
        !iv_deepen_level TYPE i DEFAULT 1
        !it_branches     TYPE Lif_abapgit_git_definitions=>ty_git_branch_list_tt OPTIONAL
      EXPORTING
        !et_objects      TYPE Lif_abapgit_definitions=>ty_objects_tt
        !ev_branch       TYPE Lif_abapgit_git_definitions=>ty_sha1
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS upload_pack_by_commit
      IMPORTING
        !iv_url          TYPE string
        !iv_hash         TYPE Lif_abapgit_git_definitions=>ty_sha1 OPTIONAL
        !iv_deepen_level TYPE i DEFAULT 0
      EXPORTING
        !et_objects      TYPE Lif_abapgit_definitions=>ty_objects_tt
        !ev_commit       TYPE Lif_abapgit_git_definitions=>ty_sha1
      RAISING
        Lcx_abapgit_exception .
* local to remote
    CLASS-METHODS receive_pack
      IMPORTING
        !iv_url         TYPE string
        !iv_old         TYPE Lif_abapgit_git_definitions=>ty_sha1
        !iv_new         TYPE Lif_abapgit_git_definitions=>ty_sha1
        !iv_branch_name TYPE string
        !iv_pack        TYPE xstring OPTIONAL
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS branches
      IMPORTING
        !iv_url               TYPE string
      RETURNING
        VALUE(ro_branch_list) TYPE REF TO Lcl_abapgit_git_branch_list
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_git_transport=====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_git_transport=====ci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_service,
        receive TYPE string VALUE 'receive',                  "#EC NOTEXT
        upload  TYPE string VALUE 'upload',                   "#EC NOTEXT
      END OF c_service .

    CLASS-METHODS check_report_status
      IMPORTING
        !iv_string TYPE string
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS branch_list
      IMPORTING
        !iv_url         TYPE string
        !iv_service     TYPE string
      EXPORTING
        !eo_client      TYPE REF TO Lcl_abapgit_http_client
        !eo_branch_list TYPE REF TO Lcl_abapgit_git_branch_list
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS find_branch
      IMPORTING
        !iv_url         TYPE string
        !iv_service     TYPE string
        !iv_branch_name TYPE string
      EXPORTING
        !eo_client      TYPE REF TO Lcl_abapgit_http_client
        !ev_branch      TYPE Lif_abapgit_git_definitions=>ty_sha1
        !eo_branch_list TYPE REF TO Lcl_abapgit_git_branch_list
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS parse
      EXPORTING
        !ev_pack TYPE xstring
      CHANGING
        !cv_data TYPE xstring
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS upload_pack
      IMPORTING
        !io_client        TYPE REF TO Lcl_abapgit_http_client
        !iv_url           TYPE string
        !iv_deepen_level  TYPE i DEFAULT 0
        !it_hashes        TYPE Lif_abapgit_git_definitions=>ty_sha1_tt
      RETURNING
        VALUE(rt_objects) TYPE Lif_abapgit_definitions=>ty_objects_tt
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_GIT_TRANSPORT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GIT_URL

*"* local type definitions
*include zcl_abapgit_git_url===========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GIT_URL definition
*"* public declarations
*include zcl_abapgit_git_url===========cu.
CLASS Lcl_abapgit_git_url DEFINITION
*public
  FINAL
  CREATE PUBLIC


.

  PUBLIC SECTION.

    METHODS get_commit_display_url
      IMPORTING
        !io_repo      TYPE REF TO Lcl_abapgit_repo_online
      RETURNING
        VALUE(rv_url) TYPE string
      RAISING
        Lcx_abapgit_exception .

    METHODS validate_url
      IMPORTING
        !iv_url TYPE string
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_git_url===========co.
  PROTECTED SECTION.

    METHODS get_default_commit_display_url
      IMPORTING
        !iv_repo_url         TYPE string
        !iv_hash             TYPE Lif_abapgit_git_definitions=>ty_sha1
      RETURNING
        VALUE(rv_commit_url) TYPE string
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_git_url===========ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_GIT_URL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI

*"* local type definitions
*include zcl_abapgit_gui===============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI definition
*"* public declarations
*include zcl_abapgit_gui===============cu.
CLASS Lcl_abapgit_gui DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_services .

    CONSTANTS:
      BEGIN OF c_event_state,
        not_handled         TYPE i VALUE 0,
        re_render           TYPE i VALUE 1,
        new_page            TYPE i VALUE 2,
        go_back             TYPE i VALUE 3,
        no_more_act         TYPE i VALUE 4,
        new_page_w_bookmark TYPE i VALUE 5,
        go_back_to_bookmark TYPE i VALUE 6,
        new_page_replacing  TYPE i VALUE 7,
      END OF c_event_state .
    METHODS go_home
      IMPORTING
        iv_action TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS back
      IMPORTING
        !iv_to_bookmark TYPE abap_bool DEFAULT abap_false
        !iv_graceful    TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(rv_exit)  TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS back_graceful
      RETURNING
        VALUE(rv_handled) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS on_event
      FOR EVENT sapevent OF Lif_abapgit_html_viewer
      IMPORTING
        !action
        !frame
        !getdata
        !postdata
        !query_table .
    METHODS constructor
      IMPORTING
        !io_component         TYPE REF TO object OPTIONAL
        !ii_asset_man         TYPE REF TO Lif_abapgit_gui_asset_manager OPTIONAL
        !ii_hotkey_ctl        TYPE REF TO Lif_abapgit_gui_hotkey_ctl OPTIONAL
        !ii_html_processor    TYPE REF TO Lif_abapgit_gui_html_processor OPTIONAL
        !iv_rollback_on_error TYPE abap_bool DEFAULT abap_true
      RAISING
        Lcx_abapgit_exception .
    METHODS free .
    METHODS set_focus
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_gui===============co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui===============ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_page_stack,
        page     TYPE REF TO Lif_abapgit_gui_renderable,
        bookmark TYPE abap_bool,
      END OF ty_page_stack .

    DATA mv_rollback_on_error TYPE abap_bool .
    DATA mi_cur_page TYPE REF TO Lif_abapgit_gui_renderable .
    DATA mt_stack             TYPE STANDARD TABLE OF ty_page_stack .
    DATA mt_event_handlers    TYPE STANDARD TABLE OF REF TO Lif_abapgit_gui_event_handler .
    DATA mi_router TYPE REF TO Lif_abapgit_gui_event_handler .
    DATA mi_asset_man TYPE REF TO Lif_abapgit_gui_asset_manager .
    DATA mi_hotkey_ctl TYPE REF TO Lif_abapgit_gui_hotkey_ctl .
    DATA mi_html_processor TYPE REF TO Lif_abapgit_gui_html_processor .
    DATA mi_html_viewer TYPE REF TO Lif_abapgit_html_viewer .
    DATA mo_html_parts TYPE REF TO Lcl_abapgit_html_parts .
    DATA mi_common_log TYPE REF TO Lif_abapgit_log .


    METHODS cache_html
      IMPORTING
        !iv_text      TYPE string
      RETURNING
        VALUE(rv_url) TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS startup
      RAISING
        Lcx_abapgit_exception .
    METHODS render
      RAISING
        Lcx_abapgit_exception .
    METHODS call_page
      IMPORTING
        !ii_page          TYPE REF TO Lif_abapgit_gui_renderable
        !iv_with_bookmark TYPE abap_bool DEFAULT abap_false
        !iv_replacing     TYPE abap_bool DEFAULT abap_false
      RAISING
        Lcx_abapgit_exception .
    METHODS handle_action
      IMPORTING
        !iv_action   TYPE c
        !iv_getdata  TYPE c OPTIONAL
        !it_postdata TYPE Lif_abapgit_html_viewer=>ty_post_data OPTIONAL .
    METHODS handle_error
      IMPORTING
        !ix_exception TYPE REF TO Lcx_abapgit_exception .
    METHODS is_page_modal
      IMPORTING
        !ii_page      TYPE REF TO Lif_abapgit_gui_renderable
      RETURNING
        VALUE(rv_yes) TYPE abap_bool .
endclass. "ZCL_ABAPGIT_GUI definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_EVENT

*"* local type definitions
*include zcl_abapgit_gui_event=========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_EVENT definition
*"* public declarations
*include zcl_abapgit_gui_event=========cu.
CLASS Lcl_abapgit_gui_event DEFINITION
*public
  FINAL
  CREATE PUBLIC


.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event .

    CLASS-METHODS class_constructor .

    CLASS-METHODS new
      IMPORTING
        !ii_gui_services   TYPE REF TO Lif_abapgit_gui_services OPTIONAL
        !iv_action         TYPE clike
        !iv_getdata        TYPE clike OPTIONAL
        !it_postdata       TYPE Lif_abapgit_html_viewer=>ty_post_data OPTIONAL
      RETURNING
        VALUE(ro_instance) TYPE REF TO Lcl_abapgit_gui_event.
    METHODS constructor
      IMPORTING
        !ii_gui_services TYPE REF TO Lif_abapgit_gui_services OPTIONAL
        !iv_action       TYPE clike
        !iv_getdata      TYPE clike OPTIONAL
        !it_postdata     TYPE Lif_abapgit_html_viewer=>ty_post_data OPTIONAL .
*"* protected declarations
*include zcl_abapgit_gui_event=========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_event=========ci.
  PRIVATE SECTION.
    DATA mo_query TYPE REF TO Lcl_abapgit_string_map.
    DATA mo_form_data TYPE REF TO Lcl_abapgit_string_map.

    CLASS-DATA gv_non_breaking_space TYPE string .

    METHODS fields_to_map
      IMPORTING
        it_fields            TYPE tihttpnvp
      RETURNING
        VALUE(ro_string_map) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS parse_post_form_data
      IMPORTING
        !it_post_data    TYPE Lif_abapgit_html_viewer=>ty_post_data
        !iv_upper_cased  TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(rt_fields) TYPE tihttpnvp .
    CLASS-METHODS parse_fields
      IMPORTING
        !iv_string       TYPE clike
        !iv_upper_cased  TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(rt_fields) TYPE tihttpnvp .

    CLASS-METHODS parse_fields_upper_case_name
      IMPORTING
        !iv_string       TYPE clike
      RETURNING
        VALUE(rt_fields) TYPE tihttpnvp .

    CLASS-METHODS translate_postdata
      IMPORTING
        !it_postdata     TYPE Lif_abapgit_html_viewer=>ty_post_data
      RETURNING
        VALUE(rv_string) TYPE string .

    CLASS-METHODS field_keys_to_upper
      CHANGING
        !ct_fields TYPE tihttpnvp .
    CLASS-METHODS unescape
      IMPORTING
        !iv_string       TYPE string
      RETURNING
        VALUE(rv_string) TYPE string .

endclass. "ZCL_ABAPGIT_GUI_EVENT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_HOTKEY_CTL

*"* local type definitions
*include zcl_abapgit_gui_hotkey_ctl====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_HOTKEY_CTL definition
*"* public declarations
*include zcl_abapgit_gui_hotkey_ctl====cu.
CLASS Lcl_abapgit_gui_hotkey_ctl DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_hotkeys.
    INTERFACES Lif_abapgit_gui_hotkey_ctl.
    INTERFACES Lif_abapgit_gui_renderable.

    CONSTANTS c_showhotkeys_action TYPE string VALUE `showHotkeys` ##NO_TEXT.

    CLASS-METHODS should_show_hint
      RETURNING
        VALUE(rv_yes) TYPE abap_bool.
    METHODS constructor
      RAISING
        Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_gui_hotkey_ctl====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_hotkey_ctl====ci.
  PRIVATE SECTION.

    DATA:
      mt_hotkeys       TYPE Lif_abapgit_gui_hotkeys=>ty_hotkeys_with_descr,
      ms_user_settings TYPE Lif_abapgit_definitions=>ty_s_user_settings,
      mv_visible       TYPE abap_bool.
    CLASS-DATA gv_hint_was_shown TYPE abap_bool .

    METHODS render_scripts
      IMPORTING
        !it_hotkeys    TYPE Lif_abapgit_gui_hotkeys=>ty_hotkeys_with_descr
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
endclass. "ZCL_ABAPGIT_GUI_HOTKEY_CTL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_MENUS

*"* local type definitions
*include zcl_abapgit_gui_menus=========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_MENUS definition
*"* public declarations
*include zcl_abapgit_gui_menus=========cu.
CLASS Lcl_abapgit_gui_menus DEFINITION
*public
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    CLASS-METHODS advanced
      RETURNING
        VALUE(ro_menu) TYPE REF TO Lcl_abapgit_html_toolbar.

    CLASS-METHODS help
      RETURNING
        VALUE(ro_menu) TYPE REF TO Lcl_abapgit_html_toolbar.

    CLASS-METHODS back
      RETURNING
        VALUE(ro_menu) TYPE REF TO Lcl_abapgit_html_toolbar.

    CLASS-METHODS settings
      IMPORTING
        !iv_act        TYPE string
      RETURNING
        VALUE(ro_menu) TYPE REF TO Lcl_abapgit_html_toolbar.

    CLASS-METHODS repo_settings
      IMPORTING
        !iv_key        TYPE Lif_abapgit_persistence=>ty_repo-key
        !iv_act        TYPE string
      RETURNING
        VALUE(ro_menu) TYPE REF TO Lcl_abapgit_html_toolbar.

    CLASS-METHODS experimental
      IMPORTING
        io_menu TYPE REF TO Lcl_abapgit_html_toolbar.

*"* protected declarations
*include zcl_abapgit_gui_menus=========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_menus=========ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_GUI_MENUS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_CODI_BASE

*"* local type definitions
*include zcl_abapgit_gui_page_codi_baseccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_CODI_BASE definition
*"* public declarations
*include zcl_abapgit_gui_page_codi_basecu.
CLASS Lcl_abapgit_gui_page_codi_base DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component.

  PUBLIC SECTION.

*"* protected declarations
*include zcl_abapgit_gui_page_codi_baseco.
  PROTECTED SECTION.

    CONSTANTS:
      BEGIN OF c_actions,
        rerun  TYPE string VALUE 'rerun',
        sort_1 TYPE string VALUE 'sort_1',
        sort_2 TYPE string VALUE 'sort_2',
        sort_3 TYPE string VALUE 'sort_3',
        stage  TYPE string VALUE 'stage',
        commit TYPE string VALUE 'commit',
      END OF c_actions .
    DATA mo_repo TYPE REF TO Lcl_abapgit_repo .
    DATA mt_result TYPE Lif_abapgit_code_inspector=>ty_results .
    DATA mv_summary TYPE string.

    METHODS on_event
      IMPORTING
        ii_event          TYPE REF TO Lif_abapgit_gui_event
      RETURNING
        VALUE(rs_handled) TYPE Lif_abapgit_gui_event_handler=>ty_handling_result
      RAISING
        Lcx_abapgit_exception.

    METHODS render_variant
      IMPORTING
        !iv_variant    TYPE sci_chkv
        !iv_summary    TYPE string
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS render_result
      IMPORTING
        !ii_html   TYPE REF TO Lif_abapgit_html
        !it_result TYPE Lif_abapgit_code_inspector=>ty_results .
    METHODS render_result_line
      IMPORTING
        !ii_html   TYPE REF TO Lif_abapgit_html
        !is_result TYPE Lif_abapgit_code_inspector=>ty_result .
    METHODS build_nav_link
      IMPORTING
        !is_result     TYPE Lif_abapgit_code_inspector=>ty_result
      RETURNING
        VALUE(rv_link) TYPE string .
    METHODS jump
      IMPORTING
        !is_item        TYPE Lif_abapgit_definitions=>ty_item
        !is_sub_item    TYPE Lif_abapgit_definitions=>ty_item
        !iv_line_number TYPE i
      RAISING
        Lcx_abapgit_exception .
    METHODS build_base_menu
      RETURNING
        VALUE(ro_menu) TYPE REF TO Lcl_abapgit_html_toolbar .
*"* private declarations
*include zcl_abapgit_gui_page_codi_baseci.
  PRIVATE SECTION.
    CONSTANTS c_object_separator TYPE c LENGTH 1 VALUE '|'.
    CONSTANTS c_ci_sig TYPE string VALUE 'cinav:'.
endclass. "ZCL_ABAPGIT_GUI_PAGE_CODI_BASE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_COMMIT

*"* local type definitions
*include zcl_abapgit_gui_page_commit===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_COMMIT definition
*"* public declarations
*include zcl_abapgit_gui_page_commit===cu.
CLASS Lcl_abapgit_gui_page_commit DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler.
    INTERFACES Lif_abapgit_gui_renderable.

    CLASS-METHODS create
      IMPORTING
        !io_repo       TYPE REF TO Lcl_abapgit_repo_online
        !io_stage      TYPE REF TO Lcl_abapgit_stage
        !iv_sci_result TYPE Lif_abapgit_definitions=>ty_sci_result DEFAULT Lif_abapgit_definitions=>c_sci_result-no_run
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.
    METHODS constructor
      IMPORTING
        !io_repo       TYPE REF TO Lcl_abapgit_repo_online
        !io_stage      TYPE REF TO Lcl_abapgit_stage
        !iv_sci_result TYPE Lif_abapgit_definitions=>ty_sci_result
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_commit===co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_commit===ci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_id,
        committer       TYPE string VALUE 'committer',
        committer_name  TYPE string VALUE 'committer_name',
        committer_email TYPE string VALUE 'committer_email',
        message         TYPE string VALUE 'message',
        comment         TYPE string VALUE 'comment',
        body            TYPE string VALUE 'body',
        author          TYPE string VALUE 'author',
        author_name     TYPE string VALUE 'author_name',
        author_email    TYPE string VALUE 'author_email',
        new_branch_name TYPE string VALUE 'new_branch_name',
      END OF c_id.

    CONSTANTS:
      BEGIN OF c_event,
        commit TYPE string VALUE 'commit',
      END OF c_event.

    DATA mo_form TYPE REF TO Lcl_abapgit_html_form.
    DATA mo_form_data TYPE REF TO Lcl_abapgit_string_map.
    DATA mo_form_util TYPE REF TO Lcl_abapgit_html_form_utils.
    DATA mo_validation_log TYPE REF TO Lcl_abapgit_string_map.
    DATA mo_settings TYPE REF TO Lcl_abapgit_settings.
    DATA mo_repo TYPE REF TO Lcl_abapgit_repo_online.
    DATA mo_stage TYPE REF TO Lcl_abapgit_stage.
    DATA mt_stage TYPE Lif_abapgit_definitions=>ty_stage_tt.
    DATA ms_commit TYPE Lif_abapgit_services_git=>ty_commit_fields.
    DATA mv_sci_result TYPE Lif_abapgit_definitions=>ty_sci_result.

    METHODS render_stage_summary
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception.
    METHODS render_stage_details
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception.
    METHODS validate_form
      IMPORTING
        !io_form_data            TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(ro_validation_log) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception.
    METHODS get_form_schema
      RETURNING
        VALUE(ro_form) TYPE REF TO Lcl_abapgit_html_form.
    METHODS get_defaults
      RAISING
        Lcx_abapgit_exception.
    METHODS get_committer_name
      RETURNING
        VALUE(rv_user) TYPE string
      RAISING
        Lcx_abapgit_exception.
    METHODS get_committer_email
      RETURNING
        VALUE(rv_email) TYPE string
      RAISING
        Lcx_abapgit_exception.
    METHODS get_comment_default
      RETURNING
        VALUE(rv_text) TYPE string.
    METHODS get_comment_object
      IMPORTING
        !it_stage      TYPE Lif_abapgit_definitions=>ty_stage_tt
      RETURNING
        VALUE(rv_text) TYPE string.
    METHODS get_comment_file
      IMPORTING
        !it_stage      TYPE Lif_abapgit_definitions=>ty_stage_tt
      RETURNING
        VALUE(rv_text) TYPE string.
    METHODS branch_name_to_internal
      IMPORTING
        iv_branch_name            TYPE string
      RETURNING
        VALUE(rv_new_branch_name) TYPE string.
endclass. "ZCL_ABAPGIT_GUI_PAGE_COMMIT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_DATA

*"* local type definitions
*include zcl_abapgit_gui_page_data=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_DATA definition
*"* public declarations
*include zcl_abapgit_gui_page_data=====cu.
CLASS Lcl_abapgit_gui_page_data DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PUBLIC


.

  PUBLIC SECTION.

    INTERFACES:
      Lif_abapgit_gui_event_handler,
      Lif_abapgit_gui_menu_provider,
      Lif_abapgit_gui_renderable.

    CLASS-METHODS create
      IMPORTING
        !iv_key        TYPE Lif_abapgit_persistence=>ty_repo-key
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

    METHODS constructor
      IMPORTING
        !iv_key TYPE Lif_abapgit_persistence=>ty_repo-key
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_data=====co.
  PROTECTED SECTION.

    CONSTANTS:
      BEGIN OF c_event,
        add               TYPE string VALUE 'add',
        update            TYPE string VALUE 'update',
        remove            TYPE string VALUE 'remove',
        add_via_transport TYPE string VALUE 'add_via_transport',
      END OF c_event.
    CONSTANTS:
      BEGIN OF c_id,
        table        TYPE string VALUE 'table',
        where        TYPE string VALUE 'where',
        skip_initial TYPE string VALUE 'skip_initial',
      END OF c_id.
    DATA mi_config TYPE REF TO Lif_abapgit_data_config.

*"* private declarations
*include zcl_abapgit_gui_page_data=====ci.
  PRIVATE SECTION.

    DATA mo_repo TYPE REF TO Lcl_abapgit_repo .

    CLASS-METHODS concatenated_key_to_where
      IMPORTING
        !iv_table       TYPE tabname
        !iv_tabkey      TYPE clike
      RETURNING
        VALUE(rv_where) TYPE string
      RAISING
        Lcx_abapgit_exception.
    METHODS add_via_transport
      RAISING
        Lcx_abapgit_exception .
    METHODS build_where
      IMPORTING
        !io_map         TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(rt_where) TYPE string_table .
    METHODS render_add
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_existing
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS event_add
      IMPORTING
        !ii_event TYPE REF TO Lif_abapgit_gui_event
      RAISING
        Lcx_abapgit_exception .
    METHODS event_remove
      IMPORTING
        !ii_event TYPE REF TO Lif_abapgit_gui_event
      RAISING
        Lcx_abapgit_exception .
    METHODS event_update
      IMPORTING
        !ii_event TYPE REF TO Lif_abapgit_gui_event
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_GUI_PAGE_DATA definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_DB

*"* local type definitions
*include zcl_abapgit_gui_page_db=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_DB definition
*"* public declarations
*include zcl_abapgit_gui_page_db=======cu.
CLASS Lcl_abapgit_gui_page_db DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler.
    INTERFACES Lif_abapgit_gui_renderable.
    INTERFACES Lif_abapgit_gui_menu_provider.
    INTERFACES Lif_abapgit_html_table.

    CLASS-METHODS create
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

    METHODS constructor
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_db=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_db=======ci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_action,
        delete  TYPE string VALUE 'delete',
        backup  TYPE string VALUE 'backup',
        restore TYPE string VALUE 'restore',
        back    TYPE string VALUE 'back',
      END OF c_action.

    CONSTANTS c_css_url TYPE string VALUE 'css/page_db.css'.
    CONSTANTS c_toc_filename TYPE string VALUE '#_Table_of_Content_#.txt'.

    TYPES:
      BEGIN OF ty_explanation,
        value TYPE string,
        extra TYPE string,
      END OF ty_explanation.

    DATA mt_methods TYPE Lcl_abapgit_background=>ty_methods.

    METHODS register_stylesheet
      RAISING
        Lcx_abapgit_exception.

    METHODS render_table
      IMPORTING
        it_db_entries  TYPE Lif_abapgit_persistence=>ty_contents
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception.

    METHODS do_backup_db
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS do_delete_entry
      IMPORTING
        !is_key TYPE Lif_abapgit_persistence=>ty_content
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS do_restore_db
      RAISING
        Lcx_abapgit_exception.

    METHODS explain_content
      IMPORTING
        !is_data       TYPE Lif_abapgit_persistence=>ty_content
      RETURNING
        VALUE(rv_text) TYPE string
      RAISING
        Lcx_abapgit_exception.
    METHODS explain_content_repo
      IMPORTING
        !is_data       TYPE Lif_abapgit_persistence=>ty_content
      RETURNING
        VALUE(rs_expl) TYPE ty_explanation
      RAISING
        Lcx_abapgit_exception.
    METHODS explain_content_repo_cs
      IMPORTING
        !is_data       TYPE Lif_abapgit_persistence=>ty_content
      RETURNING
        VALUE(rs_expl) TYPE ty_explanation
      RAISING
        Lcx_abapgit_exception.
    METHODS explain_content_background
      IMPORTING
        !is_data       TYPE Lif_abapgit_persistence=>ty_content
      RETURNING
        VALUE(rs_expl) TYPE ty_explanation
      RAISING
        Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_GUI_PAGE_DB definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_DB_ENTRY

*"* local type definitions
*include zcl_abapgit_gui_page_db_entry=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_DB_ENTRY definition
*"* public declarations
*include zcl_abapgit_gui_page_db_entry=cu.
CLASS Lcl_abapgit_gui_page_db_entry DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler .
    INTERFACES Lif_abapgit_gui_renderable .
    INTERFACES Lif_abapgit_gui_page_title .

    CLASS-METHODS create
      IMPORTING
        !is_key        TYPE Lif_abapgit_persistence=>ty_content
        !iv_edit_mode  TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception .
    METHODS constructor
      IMPORTING
        !is_key       TYPE Lif_abapgit_persistence=>ty_content
        !iv_edit_mode TYPE abap_bool DEFAULT abap_false
      RAISING
        Lcx_abapgit_exception .

*"* protected declarations
*include zcl_abapgit_gui_page_db_entry=co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_gui_page_db_entry=ci.
  PRIVATE SECTION.
    CONSTANTS:
      BEGIN OF c_action,
        update      TYPE string VALUE 'update',
        switch_mode TYPE string VALUE 'switch_mode',
        back        TYPE string VALUE 'back',
      END OF c_action .

    CONSTANTS c_edit_form_id TYPE string VALUE `db_form`.
    CONSTANTS c_css_url TYPE string VALUE 'css/page_db_entry.css'.

    DATA ms_key TYPE Lif_abapgit_persistence=>ty_content.
    DATA mv_edit_mode TYPE abap_bool.

    METHODS register_stylesheet
      RAISING
        Lcx_abapgit_exception.

    METHODS render_view
      IMPORTING
        iv_raw_db_value TYPE Lif_abapgit_persistence=>ty_content-data_str
        ii_html         TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception.

    METHODS render_edit
      IMPORTING
        iv_raw_db_value TYPE Lif_abapgit_persistence=>ty_content-data_str
        ii_html         TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception.

    METHODS render_header
      IMPORTING
        ii_html    TYPE REF TO Lif_abapgit_html
        io_toolbar TYPE REF TO Lcl_abapgit_html_toolbar.

    METHODS build_toolbar
      RETURNING
        VALUE(ro_toolbar) TYPE REF TO Lcl_abapgit_html_toolbar.

    CLASS-METHODS render_entry_tag
      IMPORTING
        is_key         TYPE Lif_abapgit_persistence=>ty_content
      RETURNING
        VALUE(rv_html) TYPE string.

    CLASS-METHODS dbcontent_decode
      IMPORTING
        io_form_data      TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(rs_content) TYPE Lif_abapgit_persistence=>ty_content
      RAISING
        Lcx_abapgit_exception .

    CLASS-METHODS do_update
      IMPORTING
        is_content TYPE Lif_abapgit_persistence=>ty_content
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_GUI_PAGE_DB_ENTRY definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_DIFF_BASE

*"* local type definitions
*include zcl_abapgit_gui_page_diff_baseccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_DIFF_BASE definition
*"* public declarations
*include zcl_abapgit_gui_page_diff_basecu.
CLASS Lcl_abapgit_gui_page_diff_base DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler.
    INTERFACES Lif_abapgit_gui_hotkeys.
    INTERFACES Lif_abapgit_gui_menu_provider.
    INTERFACES Lif_abapgit_gui_renderable.

    TYPES:
      BEGIN OF ty_file_diff,
        path       TYPE string,
        filename   TYPE string,
        obj_type   TYPE string,
        obj_name   TYPE string,
        lstate     TYPE c LENGTH 1,
        rstate     TYPE c LENGTH 1,
        fstate     TYPE c LENGTH 1, " FILE state - Abstraction for shorter ifs
        o_diff     TYPE REF TO Lcl_abapgit_diff,
        changed_by TYPE syuname,
        type       TYPE string,
      END OF ty_file_diff.
    TYPES:
      ty_file_diffs TYPE STANDARD TABLE OF ty_file_diff
                          WITH NON-UNIQUE DEFAULT KEY
                          WITH NON-UNIQUE SORTED KEY secondary
                               COMPONENTS path filename.

    CONSTANTS:
      BEGIN OF c_fstate,
        local  TYPE c LENGTH 1 VALUE 'L',
        remote TYPE c LENGTH 1 VALUE 'R',
        both   TYPE c LENGTH 1 VALUE 'B',
      END OF c_fstate.

    METHODS constructor
      IMPORTING
        !iv_key    TYPE Lif_abapgit_persistence=>ty_repo-key
        !is_file   TYPE Lif_abapgit_git_definitions=>ty_file OPTIONAL
        !is_object TYPE Lif_abapgit_definitions=>ty_item OPTIONAL
        !it_files  TYPE Lif_abapgit_definitions=>ty_stage_tt OPTIONAL
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_diff_baseco.
  PROTECTED SECTION.

    CONSTANTS:
      BEGIN OF c_actions,
        toggle_unified         TYPE string VALUE 'toggle_unified',
        toggle_hide_diffs      TYPE string VALUE 'toggle_hide_diffs',
        toggle_hidden_chars    TYPE string VALUE 'toggle_hidden_chars',
        toggle_ignore_indent   TYPE string VALUE 'toggle_ignore_indent',
        toggle_ignore_comments TYPE string VALUE 'toggle_ignore_comments',
        toggle_ignore_case     TYPE string VALUE 'toggle_ignore_case',
        refresh_prefix         TYPE string VALUE 'refresh',
        refresh_all            TYPE string VALUE 'refresh_all',
        refresh_local          TYPE string VALUE 'refresh_local',
        refresh_local_object   TYPE string VALUE 'refresh_local_object',
      END OF c_actions ,
      BEGIN OF c_action_texts,
        refresh_all   TYPE string VALUE `Refresh All`,
        refresh_local TYPE string VALUE `Refresh Local`,
      END OF c_action_texts,
      BEGIN OF c_action_titles,
        refresh_local TYPE string VALUE `Refresh all local objects, without refreshing the remote`,
        refresh_all   TYPE string VALUE `Complete refresh of all objects, local and remote`,
      END OF c_action_titles.

    DATA mv_unified TYPE abap_bool VALUE abap_true ##NO_TEXT.
    DATA mo_repo TYPE REF TO Lcl_abapgit_repo .
    DATA mt_diff_files TYPE ty_file_diffs .

    CLASS-METHODS get_page_layout
      RETURNING
        VALUE(rv_page_layout) TYPE string.

    METHODS get_normalized_fname_with_path
      IMPORTING
        !is_diff           TYPE ty_file_diff
      RETURNING
        VALUE(rv_filename) TYPE string .
    METHODS normalize_path
      IMPORTING
        !iv_path             TYPE string
      RETURNING
        VALUE(rv_normalized) TYPE string .
    METHODS normalize_filename
      IMPORTING
        !iv_filename         TYPE string
      RETURNING
        VALUE(rv_normalized) TYPE string .
    METHODS add_menu_end
      IMPORTING
        !io_menu TYPE REF TO Lcl_abapgit_html_toolbar .
    METHODS calculate_diff
      IMPORTING
        !is_file   TYPE Lif_abapgit_git_definitions=>ty_file OPTIONAL
        !is_object TYPE Lif_abapgit_definitions=>ty_item OPTIONAL
        !it_files  TYPE Lif_abapgit_definitions=>ty_stage_tt OPTIONAL
      RAISING
        Lcx_abapgit_exception .
    METHODS add_menu_begin
      IMPORTING
        !io_menu TYPE REF TO Lcl_abapgit_html_toolbar .
    METHODS render_table_head_non_unified
      IMPORTING
        !ii_html TYPE REF TO Lif_abapgit_html
        !is_diff TYPE ty_file_diff .
    METHODS render_beacon_begin_of_row
      IMPORTING
        !ii_html TYPE REF TO Lif_abapgit_html
        !is_diff TYPE ty_file_diff .
    METHODS render_diff_head_after_state
      IMPORTING
        !ii_html TYPE REF TO Lif_abapgit_html
        !is_diff TYPE ty_file_diff .
    METHODS insert_nav
      RETURNING
        VALUE(rv_insert_nav) TYPE abap_bool .
    METHODS render_line_split_row
      IMPORTING
        !ii_html      TYPE REF TO Lif_abapgit_html
        !iv_filename  TYPE string
        !is_diff_line TYPE Lif_abapgit_definitions=>ty_diff
        !iv_index     TYPE sy-tabix
        !iv_fstate    TYPE char1
        !iv_new       TYPE string
        !iv_old       TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS refresh
      IMPORTING
        iv_action TYPE clike
      RAISING
        Lcx_abapgit_exception .
    METHODS refresh_full
      RAISING
        Lcx_abapgit_exception .
    METHODS refresh_local
      RAISING
        Lcx_abapgit_exception .
    METHODS refresh_local_object
      IMPORTING
        iv_action TYPE clike
      RAISING
        Lcx_abapgit_exception .
    METHODS is_refresh
      IMPORTING
        iv_action            TYPE string
      RETURNING
        VALUE(rv_is_refrseh) TYPE abap_bool.
    METHODS modify_files_before_diff_calc
      IMPORTING
        it_diff_files_old TYPE ty_file_diffs
      RETURNING
        VALUE(rt_files)   TYPE Lif_abapgit_definitions=>ty_stage_tt.
    METHODS add_view_sub_menu
      IMPORTING
        io_menu TYPE REF TO Lcl_abapgit_html_toolbar .

*"* private declarations
*include zcl_abapgit_gui_page_diff_baseci.
  PRIVATE SECTION.
    TYPES:
      BEGIN OF ty_view,
        hide_diffs      TYPE abap_bool,
        hidden_chars    TYPE abap_bool,
        ignore_indent   TYPE abap_bool,
        ignore_comments TYPE abap_bool,
        ignore_case     TYPE abap_bool,
      END OF ty_view.
    DATA mt_delayed_lines TYPE Lif_abapgit_definitions=>ty_diffs_tt .
    DATA mv_repo_key TYPE Lif_abapgit_persistence=>ty_repo-key .
    DATA mv_seed TYPE string .                    " Unique page id to bind JS sessionStorage
    DATA ms_view TYPE ty_view.

    METHODS render_diff
      IMPORTING
        !is_diff       TYPE ty_file_diff
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_diff_head
      IMPORTING
        !is_diff       TYPE ty_file_diff
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_table_head
      IMPORTING
        !is_diff       TYPE ty_file_diff
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_beacon
      IMPORTING
        !is_diff_line  TYPE Lif_abapgit_definitions=>ty_diff
        !is_diff       TYPE ty_file_diff
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS render_line_no_diffs
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_line_split
      IMPORTING
        !is_diff_line  TYPE Lif_abapgit_definitions=>ty_diff
        !iv_filename   TYPE string
        !iv_fstate     TYPE char1
        !iv_index      TYPE sy-tabix
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_line_unified
      IMPORTING
        !is_diff_line  TYPE Lif_abapgit_definitions=>ty_diff OPTIONAL
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS append_diff
      IMPORTING
        !it_remote TYPE Lif_abapgit_git_definitions=>ty_files_tt
        !it_local  TYPE Lif_abapgit_definitions=>ty_files_item_tt
        !is_status TYPE Lif_abapgit_definitions=>ty_result
      RAISING
        Lcx_abapgit_exception .
    METHODS is_binary
      IMPORTING
        !iv_d1        TYPE xstring
        !iv_d2        TYPE xstring
      RETURNING
        VALUE(rv_yes) TYPE abap_bool .
    METHODS add_jump_sub_menu
      IMPORTING
        !io_menu TYPE REF TO Lcl_abapgit_html_toolbar .
    METHODS add_filter_sub_menu
      IMPORTING
        !io_menu TYPE REF TO Lcl_abapgit_html_toolbar .
    METHODS render_lines
      IMPORTING
        !is_diff       TYPE ty_file_diff
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_table_head_unified
      IMPORTING
        !ii_html TYPE REF TO Lif_abapgit_html .
    METHODS render_scripts
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS is_file_requested
      IMPORTING
        it_files                    TYPE Lif_abapgit_definitions=>ty_stage_tt
        is_status                   TYPE Lif_abapgit_definitions=>ty_result
      RETURNING
        VALUE(rv_is_file_requested) TYPE abap_bool.
    METHODS has_diffs
      IMPORTING
        !it_diffs           TYPE Lif_abapgit_definitions=>ty_diffs_tt
      RETURNING
        VALUE(rv_has_diffs) TYPE abap_bool.
endclass. "ZCL_ABAPGIT_GUI_PAGE_DIFF_BASE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_MERGE_RES

*"* local type definitions
*include zcl_abapgit_gui_page_merge_resccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_MERGE_RES definition
*"* public declarations
*include zcl_abapgit_gui_page_merge_rescu.
CLASS Lcl_abapgit_gui_page_merge_res DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    INTERFACES:
      Lif_abapgit_gui_event_handler,
      Lif_abapgit_gui_menu_provider,
      Lif_abapgit_gui_renderable.

    CLASS-METHODS create
      IMPORTING
        io_repo        TYPE REF TO Lcl_abapgit_repo_online
        io_merge_page  TYPE REF TO Lcl_abapgit_gui_page_merge
        io_merge       TYPE REF TO Lif_abapgit_merge
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

    METHODS constructor
      IMPORTING
        io_repo       TYPE REF TO Lcl_abapgit_repo_online
        io_merge_page TYPE REF TO Lcl_abapgit_gui_page_merge
        io_merge      TYPE REF TO Lif_abapgit_merge
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_merge_resco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_merge_resci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_file_diff,
        path       TYPE string,
        filename   TYPE string,
        lstate     TYPE char1,
        rstate     TYPE char1,
        fstate     TYPE char1, " FILE state - Abstraction for shorter ifs
        o_diff     TYPE REF TO Lcl_abapgit_diff,
        changed_by TYPE syuname,
        type       TYPE string,
      END OF ty_file_diff .

    CONSTANTS:
      BEGIN OF c_actions,
        toggle_mode  TYPE string VALUE 'toggle_mode' ##NO_TEXT,
        apply_merge  TYPE string VALUE 'apply_merge' ##NO_TEXT,
        apply_source TYPE string VALUE 'apply_source' ##NO_TEXT,
        apply_target TYPE string VALUE 'apply_target' ##NO_TEXT,
        cancel       TYPE string VALUE 'cancel' ##NO_TEXT,
      END OF c_actions .
    CONSTANTS:
      BEGIN OF c_merge_mode,
        selection TYPE string VALUE 'selection' ##NO_TEXT,
        merge     TYPE string VALUE 'merge' ##NO_TEXT,
      END OF c_merge_mode .
    DATA mo_merge TYPE REF TO Lif_abapgit_merge .
    DATA mo_merge_page TYPE REF TO Lcl_abapgit_gui_page_merge .
    DATA mo_repo TYPE REF TO Lcl_abapgit_repo_online .
    DATA ms_diff_file TYPE ty_file_diff .
    DATA mv_current_conflict_index TYPE sy-tabix .
    DATA mv_merge_mode TYPE string .
    DATA mt_conflicts TYPE Lif_abapgit_merge=>ty_merge_conflict_tt .

    METHODS apply_merged_content
      IMPORTING
        !ii_event TYPE REF TO Lif_abapgit_gui_event
      RAISING
        Lcx_abapgit_exception .
    METHODS is_binary
      IMPORTING
        !iv_d1        TYPE xstring
        !iv_d2        TYPE xstring
      RETURNING
        VALUE(rv_yes) TYPE abap_bool .
    METHODS render_beacon
      IMPORTING
        !is_diff_line  TYPE Lif_abapgit_definitions=>ty_diff
        !is_diff       TYPE ty_file_diff
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS render_diff
      IMPORTING
        !is_diff       TYPE ty_file_diff
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_diff_head
      IMPORTING
        !is_diff       TYPE ty_file_diff
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS render_lines
      IMPORTING
        !is_diff       TYPE ty_file_diff
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS render_line_split
      IMPORTING
        !is_diff_line  TYPE Lif_abapgit_definitions=>ty_diff
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS render_table_head
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS resolve_diff
      RAISING
        Lcx_abapgit_exception .
    METHODS toggle_merge_mode .
endclass. "ZCL_ABAPGIT_GUI_PAGE_MERGE_RES definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_PATCH

*"* local type definitions
*include zcl_abapgit_gui_page_patch====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_PATCH definition
*"* public declarations
*include zcl_abapgit_gui_page_patch====cu.
CLASS Lcl_abapgit_gui_page_patch DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_page_diff_base
  CREATE PUBLIC


.

  PUBLIC SECTION.

    CLASS-METHODS create
      IMPORTING
        !iv_key        TYPE Lif_abapgit_persistence=>ty_repo-key
        !is_file       TYPE Lif_abapgit_git_definitions=>ty_file OPTIONAL
        !is_object     TYPE Lif_abapgit_definitions=>ty_item OPTIONAL
        !it_files      TYPE Lif_abapgit_definitions=>ty_stage_tt OPTIONAL
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

    METHODS constructor
      IMPORTING
        !iv_key    TYPE Lif_abapgit_persistence=>ty_repo-key
        !is_file   TYPE Lif_abapgit_git_definitions=>ty_file OPTIONAL
        !is_object TYPE Lif_abapgit_definitions=>ty_item OPTIONAL
        !it_files  TYPE Lif_abapgit_definitions=>ty_stage_tt OPTIONAL
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS get_patch_data
      IMPORTING
        !iv_patch      TYPE string
      EXPORTING
        !ev_filename   TYPE string
        !ev_line_index TYPE string
      RAISING
        Lcx_abapgit_exception.

    METHODS:
      Lif_abapgit_gui_event_handler~on_event REDEFINITION,
      Lif_abapgit_gui_hotkeys~get_hotkey_actions REDEFINITION,
      Lif_abapgit_gui_renderable~render REDEFINITION.

*"* protected declarations
*include zcl_abapgit_gui_page_patch====co.
  PROTECTED SECTION.

    METHODS:
      add_menu_begin REDEFINITION,
      add_menu_end REDEFINITION,
      insert_nav REDEFINITION,
      refresh REDEFINITION,
      render_beacon_begin_of_row REDEFINITION,
      render_diff_head_after_state REDEFINITION,
      render_line_split_row REDEFINITION,
      render_table_head_non_unified REDEFINITION.

*"* private declarations
*include zcl_abapgit_gui_page_patch====ci.
  PRIVATE SECTION.

    TYPES ty_patch_action TYPE string .

    CONSTANTS:
      BEGIN OF c_patch_actions,
        stage TYPE string VALUE 'patch_stage',
      END OF c_patch_actions .
    CONSTANTS:
      BEGIN OF c_patch_action,
        add    TYPE ty_patch_action VALUE 'add',
        remove TYPE ty_patch_action VALUE 'remove',
      END OF c_patch_action .
    DATA mo_stage TYPE REF TO Lcl_abapgit_stage .
    DATA mv_section_count TYPE i .
    DATA mv_pushed TYPE abap_bool .
    DATA mo_repo_online TYPE REF TO Lcl_abapgit_repo_online .

    METHODS render_patch
      IMPORTING
        !ii_html      TYPE REF TO Lif_abapgit_html
        !iv_filename  TYPE string
        !is_diff_line TYPE Lif_abapgit_definitions=>ty_diff
        !iv_index     TYPE sy-tabix
      RAISING
        Lcx_abapgit_exception .
    METHODS render_patch_head
      IMPORTING
        !ii_html TYPE REF TO Lif_abapgit_html
        !is_diff TYPE ty_file_diff .
    METHODS start_staging
      IMPORTING
        !ii_event TYPE REF TO Lif_abapgit_gui_event
      RAISING
        Lcx_abapgit_exception .
    METHODS apply_patch_from_form_fields
      IMPORTING
        !ii_event TYPE REF TO Lif_abapgit_gui_event
      RAISING
        Lcx_abapgit_exception .
    METHODS restore_patch_flags
      IMPORTING
        !it_diff_files_old TYPE ty_file_diffs
      RAISING
        Lcx_abapgit_exception .
    METHODS add_to_stage
      RAISING
        Lcx_abapgit_exception .
    METHODS apply_patch_all
      IMPORTING
        !iv_patch      TYPE string
        !iv_patch_flag TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS are_all_lines_patched
      IMPORTING
        !it_diff                        TYPE Lif_abapgit_definitions=>ty_diffs_tt
      RETURNING
        VALUE(rv_are_all_lines_patched) TYPE abap_bool .
    METHODS apply_patch_for
      IMPORTING
        !iv_filename   TYPE string
        !iv_line_index TYPE string
        !iv_patch_flag TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS get_diff_object
      IMPORTING
        !iv_filename   TYPE string
      RETURNING
        VALUE(ro_diff) TYPE REF TO Lcl_abapgit_diff
      RAISING
        Lcx_abapgit_exception .
    METHODS get_diff_line
      IMPORTING
        !io_diff       TYPE REF TO Lcl_abapgit_diff
        !iv_line_index TYPE string
      RETURNING
        VALUE(rs_diff) TYPE Lif_abapgit_definitions=>ty_diff
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS is_patch_line_possible
      IMPORTING
        !is_diff_line                    TYPE Lif_abapgit_definitions=>ty_diff
      RETURNING
        VALUE(rv_is_patch_line_possible) TYPE abap_bool .
    METHODS render_scripts
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_GUI_PAGE_PATCH definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_PULL

*"* local type definitions
*include zcl_abapgit_gui_page_pull=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_PULL definition
*"* public declarations
*include zcl_abapgit_gui_page_pull=====cu.
CLASS Lcl_abapgit_gui_page_pull DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler.
    INTERFACES Lif_abapgit_gui_menu_provider.
    INTERFACES Lif_abapgit_gui_renderable.

    CONSTANTS:
      BEGIN OF c_id,
        transport_request TYPE string VALUE 'transport_request',
      END OF c_id .

    CONSTANTS: BEGIN OF c_action,
                 pull      TYPE string VALUE 'pull',
                 refresh   TYPE string VALUE 'refresh',
                 choose_tr TYPE string VALUE 'choose_tr',
               END OF c_action.

    CLASS-METHODS create
      IMPORTING
        io_repo        TYPE REF TO Lcl_abapgit_repo
        iv_trkorr      TYPE trkorr OPTIONAL
        ii_obj_filter  TYPE REF TO Lif_abapgit_object_filter OPTIONAL
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

    METHODS constructor
      IMPORTING
        io_repo       TYPE REF TO Lcl_abapgit_repo
        iv_trkorr     TYPE trkorr
        ii_obj_filter TYPE REF TO Lif_abapgit_object_filter OPTIONAL
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_pull=====co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_gui_page_pull=====ci.
  PRIVATE SECTION.

    DATA mo_repo       TYPE REF TO Lcl_abapgit_repo.
    DATA mi_obj_filter TYPE REF TO Lif_abapgit_object_filter.
    DATA mo_form_data  TYPE REF TO Lcl_abapgit_string_map.
    DATA ms_checks     TYPE Lif_abapgit_definitions=>ty_deserialize_checks.


    METHODS form
      RETURNING
        VALUE(ro_form) TYPE REF TO Lcl_abapgit_html_form
      RAISING
        Lcx_abapgit_exception.

    METHODS choose_transport_request
      RAISING
        Lcx_abapgit_exception .

endclass. "ZCL_ABAPGIT_GUI_PAGE_PULL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_REPO_OVER

*"* local type definitions
*include zcl_abapgit_gui_page_repo_overccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_REPO_OVER definition
*"* public declarations
*include zcl_abapgit_gui_page_repo_overcu.
CLASS Lcl_abapgit_gui_page_repo_over DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    INTERFACES:
      Lif_abapgit_gui_event_handler,
      Lif_abapgit_gui_hotkeys,
      Lif_abapgit_gui_menu_provider,
      Lif_abapgit_gui_renderable.

    CLASS-METHODS create
      IMPORTING
        !iv_only_favorites TYPE abap_bool OPTIONAL
      RETURNING
        VALUE(ri_page)     TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

    METHODS constructor
      IMPORTING
        !iv_only_favorites TYPE abap_bool OPTIONAL
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_repo_overco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_repo_overci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_overview,
        favorite            TYPE string,
        "! True for offline, false for online repo
        type                TYPE string,
        key                 TYPE Lif_abapgit_persistence=>ty_value,
        name                TYPE string,
        labels              TYPE string_table,
        url                 TYPE string,
        package             TYPE devclass,
        branch              TYPE string,
        created_by          TYPE syuname,
        created_at          TYPE string,
        created_at_raw      TYPE timestampl,
        deserialized_by     TYPE syuname,
        deserialized_at     TYPE string,
        deserialized_at_raw TYPE timestampl,
        write_protected     TYPE abap_bool,
        flow                TYPE abap_bool,
      END OF ty_overview,
      ty_overviews TYPE STANDARD TABLE OF ty_overview
                   WITH NON-UNIQUE DEFAULT KEY.
    CONSTANTS:
      BEGIN OF c_action,
        select       TYPE string VALUE 'select',
        apply_filter TYPE string VALUE 'apply_filter',
        label_filter TYPE string VALUE 'label_filter',
      END OF c_action,
      c_label_filter_prefix TYPE string VALUE `label:`,
      c_raw_field_suffix    TYPE string VALUE `_RAW` ##NO_TEXT.

    DATA: mt_all_labels   TYPE string_table,
          mo_label_colors TYPE REF TO Lcl_abapgit_string_map.
    DATA ms_list_settings TYPE Lif_abapgit_definitions=>ty_list_settings.

    METHODS set_order_by
      IMPORTING
        !iv_order_by TYPE string
      RAISING
        Lcx_abapgit_exception.
    METHODS set_order_direction
      IMPORTING
        !iv_order_descending TYPE abap_bool
      RAISING
        Lcx_abapgit_exception.
    METHODS set_filter
      IMPORTING
        it_postdata TYPE Lif_abapgit_html_viewer=>ty_post_data
      RAISING
        Lcx_abapgit_exception.

    METHODS:
      apply_filter
        CHANGING
          ct_overview TYPE ty_overviews,

      map_repo_list_to_overview
        IMPORTING
          it_repo_obj_list   TYPE Lif_abapgit_repo_srv=>ty_repo_list
        RETURNING
          VALUE(rt_overview) TYPE ty_overviews
        RAISING
          Lcx_abapgit_exception,

      render_repo_list
        IMPORTING
          ii_html     TYPE REF TO Lif_abapgit_html
          it_overview TYPE ty_overviews
        RAISING
          Lcx_abapgit_exception,

      render_table_header
        IMPORTING
          ii_html TYPE REF TO Lif_abapgit_html,

      render_table_footer
        IMPORTING
          ii_html TYPE REF TO Lif_abapgit_html,

      render_table_body
        IMPORTING
          ii_html      TYPE REF TO Lif_abapgit_html
          it_repo_list TYPE ty_overviews
        RAISING
          Lcx_abapgit_exception,

      render_table_item
        IMPORTING
          ii_html TYPE REF TO Lif_abapgit_html
          is_repo TYPE ty_overview
        RAISING
          Lcx_abapgit_exception,

      render_header_bar
        IMPORTING
          ii_html TYPE REF TO Lif_abapgit_html,

      render_header_label_list
        IMPORTING
          ii_html TYPE REF TO Lif_abapgit_html,

      apply_order_by
        CHANGING ct_overview TYPE ty_overviews.

    METHODS prepare_overviews
      RETURNING
        VALUE(rt_overviews) TYPE ty_overviews
      RAISING
        Lcx_abapgit_exception.

    METHODS render_scripts
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception.

    METHODS render_action_toolbar
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html.

    METHODS render_filter_bar
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html.

    METHODS build_table_scheme
      RETURNING
        VALUE(rt_tab_scheme) TYPE Lif_abapgit_definitions=>ty_col_spec_tt.

    METHODS collect_all_labels
      IMPORTING
        it_overview    TYPE ty_overviews
      RETURNING
        VALUE(rt_list) TYPE string_table.

    METHODS render_filter_help_hint
      RETURNING
        VALUE(rv_html) TYPE string.

    METHODS save_settings
      RAISING
        Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_GUI_PAGE_REPO_OVER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_REPO_VIEW

*"* local type definitions
*include zcl_abapgit_gui_page_repo_viewccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_REPO_VIEW definition
*"* public declarations
*include zcl_abapgit_gui_page_repo_viewcu.
CLASS Lcl_abapgit_gui_page_repo_view DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    INTERFACES:
      Lif_abapgit_gui_event_handler,
      Lif_abapgit_gui_hotkeys,
      Lif_abapgit_gui_menu_provider,
      Lif_abapgit_gui_renderable.

    CONSTANTS:
      BEGIN OF c_actions,
        change_dir        TYPE string VALUE 'change_dir' ##NO_TEXT,
        toggle_hide_files TYPE string VALUE 'toggle_hide_files' ##NO_TEXT,
        toggle_folders    TYPE string VALUE 'toggle_folders' ##NO_TEXT,
        toggle_changes    TYPE string VALUE 'toggle_changes' ##NO_TEXT,
        toggle_diff_first TYPE string VALUE 'toggle_diff_first ' ##NO_TEXT,
        display_more      TYPE string VALUE 'display_more' ##NO_TEXT,
        go_data           TYPE string VALUE 'go_data',
        go_unit           TYPE string VALUE 'go_unit',
      END OF c_actions .

    CLASS-METHODS create
      IMPORTING
        !iv_key        TYPE Lif_abapgit_persistence=>ty_repo-key
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

    METHODS constructor
      IMPORTING
        !iv_key TYPE Lif_abapgit_persistence=>ty_repo-key
      RAISING
        Lcx_abapgit_exception .

*"* protected declarations
*include zcl_abapgit_gui_page_repo_viewco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_repo_viewci.
  PRIVATE SECTION.

    DATA mo_repo TYPE REF TO Lcl_abapgit_repo .
    DATA mo_repo_aggregated_state TYPE REF TO Lcl_abapgit_item_state.
    DATA mv_cur_dir TYPE string .
    DATA mv_hide_files TYPE abap_bool .
    DATA mv_max_lines TYPE i .
    DATA mv_max_setting TYPE i .
    DATA mv_show_folders TYPE abap_bool .
    DATA mv_changes_only TYPE abap_bool .
    DATA mv_order_by TYPE string .
    DATA mv_order_descending TYPE abap_bool .
    DATA mv_diff_first TYPE abap_bool .
    DATA mv_key TYPE Lif_abapgit_persistence=>ty_value .
    DATA mv_are_changes_recorded_in_tr TYPE abap_bool .

    METHODS render_head_line
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS build_view_dropdown
      RETURNING
        VALUE(ro_toolbar) TYPE REF TO Lcl_abapgit_html_toolbar
      RAISING
        Lcx_abapgit_exception .
    METHODS render_item
      IMPORTING
        !is_item              TYPE Lif_abapgit_definitions=>ty_repo_item
        !iv_render_transports TYPE abap_bool
      RETURNING
        VALUE(ri_html)        TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_item_files
      IMPORTING
        !is_item       TYPE Lif_abapgit_definitions=>ty_repo_item
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS render_item_command
      IMPORTING
        !is_item       TYPE Lif_abapgit_definitions=>ty_repo_item
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS render_file_command
      IMPORTING
        !is_file       TYPE Lif_abapgit_definitions=>ty_repo_file
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS get_item_class
      IMPORTING
        !is_item         TYPE Lif_abapgit_definitions=>ty_repo_item
        iv_is_object_row TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(rv_html)   TYPE string .
    METHODS render_item_transport
      IMPORTING
        !is_item       TYPE Lif_abapgit_definitions=>ty_repo_item
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_parent_dir
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS build_dir_jump_link
      IMPORTING
        !iv_path       TYPE string
      RETURNING
        VALUE(rv_html) TYPE string .
    METHODS build_inactive_object_code
      IMPORTING
        !is_item                     TYPE Lif_abapgit_definitions=>ty_repo_item
      RETURNING
        VALUE(rv_inactive_html_code) TYPE string .
    METHODS build_srcsystem_code
      IMPORTING
        !is_item                      TYPE Lif_abapgit_definitions=>ty_repo_item
      RETURNING
        VALUE(rv_srcsystem_html_code) TYPE string .
    METHODS build_origlang_code
      IMPORTING
        !is_item            TYPE Lif_abapgit_definitions=>ty_repo_item
      RETURNING
        VALUE(rv_html_code) TYPE string .
    METHODS open_in_main_language
      RAISING
        Lcx_abapgit_exception .
    METHODS render_table_header
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS render_table_footer
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS apply_order_by
      CHANGING
        !ct_repo_items TYPE Lif_abapgit_definitions=>ty_repo_item_tt .
    METHODS build_branch_dropdown
      RETURNING
        VALUE(ro_branch_dropdown) TYPE REF TO Lcl_abapgit_html_toolbar
      RAISING
        Lcx_abapgit_exception .
    METHODS build_tag_dropdown
      RETURNING
        VALUE(ro_tag_dropdown) TYPE REF TO Lcl_abapgit_html_toolbar
      RAISING
        Lcx_abapgit_exception .
    METHODS build_advanced_dropdown
      RETURNING
        VALUE(ro_advanced_dropdown) TYPE REF TO Lcl_abapgit_html_toolbar
      RAISING
        Lcx_abapgit_exception .
    METHODS build_main_toolbar
      RETURNING
        VALUE(ro_toolbar) TYPE REF TO Lcl_abapgit_html_toolbar
      RAISING
        Lcx_abapgit_exception .
    METHODS render_scripts
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS is_repo_lang_logon_lang
      RETURNING
        VALUE(rv_repo_lang_is_logon_lang) TYPE abap_bool .

    METHODS render_item_changed_by
      IMPORTING
        !is_item       TYPE Lif_abapgit_definitions=>ty_repo_item
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception.

    METHODS order_files
      CHANGING
        ct_files TYPE Lif_abapgit_definitions=>ty_repo_file_tt.

    METHODS get_crossout
      IMPORTING
        !iv_authorization  TYPE Lif_abapgit_auth=>ty_authorization OPTIONAL
        !iv_protected      TYPE abap_bool DEFAULT abap_false
        !iv_strong         TYPE abap_bool DEFAULT abap_false
          PREFERRED PARAMETER iv_authorization
      RETURNING
        VALUE(rv_crossout) LIKE Lif_abapgit_html=>c_html_opt-crossout.

    METHODS check_branch
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_GUI_PAGE_REPO_VIEW definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_SETT_INFO

*"* local type definitions
*include zcl_abapgit_gui_page_sett_infoccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_SETT_INFO definition
*"* public declarations
*include zcl_abapgit_gui_page_sett_infocu.
CLASS Lcl_abapgit_gui_page_sett_info DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler .
    INTERFACES Lif_abapgit_gui_renderable .

    CLASS-METHODS create
      IMPORTING
        !io_repo       TYPE REF TO Lcl_abapgit_repo
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception .
    METHODS constructor
      IMPORTING
        !io_repo TYPE REF TO Lcl_abapgit_repo
      RAISING
        Lcx_abapgit_exception .

*"* protected declarations
*include zcl_abapgit_gui_page_sett_infoco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_sett_infoci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_stats,
        measure TYPE string,
        local   TYPE i,
        remote  TYPE i,
      END OF ty_stats .
    TYPES:
      BEGIN OF ty_infos,
        size TYPE p LENGTH 16 DECIMALS 0,
        line TYPE p LENGTH 16 DECIMALS 0,
        sloc TYPE p LENGTH 16 DECIMALS 0,
      END OF ty_infos .

    CONSTANTS:
      BEGIN OF c_id,
        info            TYPE string VALUE 'info',
        created_by      TYPE string VALUE 'created_by',
        created_at      TYPE string VALUE 'created_at',
        deserialized_by TYPE string VALUE 'deserialized_by',
        deserialized_at TYPE string VALUE 'deserialized_at',
        stats           TYPE string VALUE 'stats',
        stats_table     TYPE string VALUE 'stats_table',
      END OF c_id .

    DATA mo_form TYPE REF TO Lcl_abapgit_html_form .
    DATA mo_form_data TYPE REF TO Lcl_abapgit_string_map .
    DATA mo_repo TYPE REF TO Lcl_abapgit_repo .
    DATA:
      mt_stats TYPE STANDARD TABLE OF ty_stats WITH KEY measure .

    METHODS get_form_schema
      RETURNING
        VALUE(ro_form) TYPE REF TO Lcl_abapgit_html_form
      RAISING
        Lcx_abapgit_exception .
    METHODS read_settings
      RAISING
        Lcx_abapgit_exception .
    METHODS read_stats
      RAISING
        Lcx_abapgit_exception .
    METHODS read_stats_files
      EXPORTING
        !et_local  TYPE Lif_abapgit_definitions=>ty_files_item_tt
        !et_remote TYPE Lif_abapgit_git_definitions=>ty_files_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS read_stats_state
      RAISING
        Lcx_abapgit_exception .
    METHODS read_stats_size_lines_sloc
      IMPORTING
        !it_local        TYPE Lif_abapgit_definitions=>ty_files_item_tt
        !it_remote       TYPE Lif_abapgit_git_definitions=>ty_files_tt
      EXPORTING
        !et_local_items  TYPE Lif_abapgit_definitions=>ty_items_tt
        !et_remote_items TYPE Lif_abapgit_definitions=>ty_items_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS read_stats_file
      IMPORTING
        !is_file       TYPE Lif_abapgit_git_definitions=>ty_file
      RETURNING
        VALUE(rs_info) TYPE ty_infos .
    METHODS read_stats_objects
      CHANGING
        !ct_local_items  TYPE Lif_abapgit_definitions=>ty_items_tt
        !ct_remote_items TYPE Lif_abapgit_definitions=>ty_items_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS format_user
      IMPORTING
        !iv_username   TYPE syuname
      RETURNING
        VALUE(rv_user) TYPE string .
    METHODS format_timestamp
      IMPORTING
        !iv_timestamp       TYPE timestampl
      RETURNING
        VALUE(rv_timestamp) TYPE string .
    METHODS format_size
      IMPORTING
        !iv_size       TYPE i
      RETURNING
        VALUE(rv_size) TYPE string .
endclass. "ZCL_ABAPGIT_GUI_PAGE_SETT_INFO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_SETT_LOCL

*"* local type definitions
*include zcl_abapgit_gui_page_sett_loclccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_SETT_LOCL definition
*"* public declarations
*include zcl_abapgit_gui_page_sett_loclcu.
CLASS Lcl_abapgit_gui_page_sett_locl DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler .
    INTERFACES Lif_abapgit_gui_renderable .

    CLASS-METHODS create
      IMPORTING
        !io_repo       TYPE REF TO Lcl_abapgit_repo
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception .
    METHODS constructor
      IMPORTING
        !io_repo TYPE REF TO Lcl_abapgit_repo
      RAISING
        Lcx_abapgit_exception .

*"* protected declarations
*include zcl_abapgit_gui_page_sett_loclco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_sett_loclci.
  PRIVATE SECTION.

    DATA mo_popup_picklist TYPE REF TO Lcl_abapgit_gui_picklist.

    CONSTANTS:
      BEGIN OF c_id,
        local                        TYPE string VALUE 'local',
        display_name                 TYPE string VALUE 'display_name',
        transport_request            TYPE string VALUE 'transport_request',
        customizing_request          TYPE string VALUE 'customizing_request',
        labels                       TYPE string VALUE 'labels',
        ignore_subpackages           TYPE string VALUE 'ignore_subpackages',
        write_protected              TYPE string VALUE 'write_protected',
        only_local_objects           TYPE string VALUE 'only_local_objects',
        main_language_only           TYPE string VALUE 'main_language_only',
        checks                       TYPE string VALUE 'checks',
        code_inspector_check_variant TYPE string VALUE 'code_inspector_check_variant',
        block_commit                 TYPE string VALUE 'block_commit',
        flow                         TYPE string VALUE 'flow',
      END OF c_id .
    CONSTANTS:
      BEGIN OF c_event,
        save                       TYPE string VALUE 'save',
        choose_transport_request   TYPE string VALUE 'choose_transport_request',
        choose_customizing_request TYPE string VALUE 'choose_customizing_request',
        choose_labels              TYPE string VALUE 'choose-labels',
        choose_check_variant       TYPE string VALUE 'choose_check_variant',
      END OF c_event .
    DATA mo_form TYPE REF TO Lcl_abapgit_html_form .
    DATA mo_form_data TYPE REF TO Lcl_abapgit_string_map .
    DATA mo_validation_log TYPE REF TO Lcl_abapgit_string_map .
    DATA mo_repo TYPE REF TO Lcl_abapgit_repo .
    DATA ms_settings TYPE Lif_abapgit_persistence=>ty_repo-local_settings .

    METHODS validate_form
      IMPORTING
        !io_form_data            TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(ro_validation_log) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception .
    METHODS get_form_schema
      RETURNING
        VALUE(ro_form) TYPE REF TO Lcl_abapgit_html_form
      RAISING
        Lcx_abapgit_exception .
    METHODS read_settings
      RETURNING
        VALUE(ro_form_data) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception .
    METHODS save_settings
      RAISING
        Lcx_abapgit_exception .
    METHODS choose_labels
      RAISING
        Lcx_abapgit_exception .
    METHODS choose_check_variant
      IMPORTING
        iv_is_return TYPE abap_bool DEFAULT abap_false
      RAISING
        Lcx_abapgit_exception .
    METHODS choose_transport_request
      RAISING
        Lcx_abapgit_exception .
    METHODS choose_customizing_request
      RAISING
        Lcx_abapgit_exception .
    METHODS is_customizing_included
      RETURNING
        VALUE(rv_result) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS handle_picklist_state
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_GUI_PAGE_SETT_LOCL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_SETT_PERS

*"* local type definitions
*include zcl_abapgit_gui_page_sett_persccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_SETT_PERS definition
*"* public declarations
*include zcl_abapgit_gui_page_sett_perscu.
CLASS Lcl_abapgit_gui_page_sett_pers DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler.
    INTERFACES Lif_abapgit_gui_renderable.

    CLASS-METHODS create
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.
    METHODS constructor
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_sett_persco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_sett_persci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_id,
        startup                TYPE string VALUE 'startup',
        show_default_repo      TYPE string VALUE 'show_default_repo',
        ui                     TYPE string VALUE 'ui',
        ui_theme               TYPE string VALUE 'ui_theme',
        icon_scaling           TYPE string VALUE 'icon_scaling',
        max_lines              TYPE string VALUE 'max_lines',
        interaction            TYPE string VALUE 'interaction',
        adt_jump_enabled       TYPE string VALUE 'adt_jump_enabled',
        link_hints_enabled     TYPE string VALUE 'link_hints_enabled',
        link_hint_key          TYPE string VALUE 'link_hint_key',
        hotkeys                TYPE string VALUE 'hotkeys',
        resources              TYPE string VALUE 'resources',
        parallel_proc_disabled TYPE string VALUE 'parallel_proc_disabled',
        hide_sapgui_hint       TYPE string VALUE 'hide_sapgui_hint',
        activate_wo_popup      TYPE string VALUE 'activate_wo_popup',
        label_colors           TYPE string VALUE 'label_colors',
      END OF c_id.
    CONSTANTS:
      BEGIN OF c_event,
        save TYPE string VALUE 'save',
      END OF c_event.

    DATA mo_form TYPE REF TO Lcl_abapgit_html_form.
    DATA mo_form_data TYPE REF TO Lcl_abapgit_string_map.
    DATA mo_validation_log TYPE REF TO Lcl_abapgit_string_map.

    DATA mo_settings TYPE REF TO Lcl_abapgit_settings.
    DATA ms_settings TYPE Lif_abapgit_definitions=>ty_s_user_settings.

    METHODS validate_form
      IMPORTING
        !io_form_data            TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(ro_validation_log) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception.
    METHODS get_form_schema
      RETURNING
        VALUE(ro_form) TYPE REF TO Lcl_abapgit_html_form.
    METHODS read_settings
      RETURNING
        VALUE(ro_form_data) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception.
    METHODS save_settings
      RAISING
        Lcx_abapgit_exception.
    METHODS render_repo_labels_help_hint
      RETURNING
        VALUE(rv_html) TYPE string.
endclass. "ZCL_ABAPGIT_GUI_PAGE_SETT_PERS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_SETT_REMO

*"* local type definitions
*include zcl_abapgit_gui_page_sett_remoccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_SETT_REMO definition
*"* public declarations
*include zcl_abapgit_gui_page_sett_remocu.
CLASS Lcl_abapgit_gui_page_sett_remo DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler .
    INTERFACES Lif_abapgit_gui_renderable .
    INTERFACES Lif_abapgit_gui_hotkeys.

    CLASS-METHODS create
      IMPORTING
        !io_repo       TYPE REF TO Lcl_abapgit_repo
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception .
    METHODS constructor
      IMPORTING
        !io_repo TYPE REF TO Lcl_abapgit_repo
      RAISING
        Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_gui_page_sett_remoco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_sett_remoci.
  PRIVATE SECTION.

    TYPES:
      ty_head_type TYPE c LENGTH 1,
      BEGIN OF ty_remote_settings,
        offline         TYPE Lif_abapgit_persistence=>ty_repo-offline,
        url             TYPE Lif_abapgit_persistence=>ty_repo-url,
        branch          TYPE Lif_abapgit_git_definitions=>ty_git_branch-name,
        tag             TYPE Lif_abapgit_git_definitions=>ty_git_tag-name,
        commit          TYPE Lif_abapgit_git_definitions=>ty_commit-sha1,
        pull_request    TYPE string,
        head_type       TYPE ty_head_type,
        switched_origin TYPE Lif_abapgit_persistence=>ty_repo-switched_origin,
      END OF ty_remote_settings.
    CONSTANTS:
      BEGIN OF c_repo_type,
        online  TYPE string VALUE 'Online Repository',
        offline TYPE string VALUE 'Offline Repository',
      END OF c_repo_type.
    CONSTANTS:
      BEGIN OF c_head_types,
        branch       TYPE ty_head_type VALUE 'B',
        tag          TYPE ty_head_type VALUE 'T',
        commit       TYPE ty_head_type VALUE 'C',
        pull_request TYPE ty_head_type VALUE 'P',
      END OF c_head_types.
    CONSTANTS:
      BEGIN OF c_id,
        general      TYPE string VALUE 'general',
        repo_type    TYPE string VALUE 'repo_type',
        offline      TYPE string VALUE 'offline',
        url          TYPE string VALUE 'url',
        head_group   TYPE string VALUE 'head_group',
        branch       TYPE string VALUE 'branch',
        tag          TYPE string VALUE 'tag',
        commit       TYPE string VALUE 'commit',
        pull_request TYPE string VALUE 'pull_request',
        head_type    TYPE string VALUE 'head_type',
      END OF c_id.
    CONSTANTS:
      BEGIN OF c_event,
        save                TYPE string VALUE 'save',
        switch              TYPE string VALUE 'switch',
        choose_url          TYPE string VALUE 'choose_url',
        choose_branch       TYPE string VALUE 'choose_branch',
        choose_tag          TYPE string VALUE 'choose_tag',
        choose_commit       TYPE string VALUE 'choose_commit',
        choose_pull_request TYPE string VALUE 'choose_pull_request',
        change_head_type    TYPE string VALUE 'change_head_type',
      END OF c_event .

    DATA mo_repo TYPE REF TO Lcl_abapgit_repo .
    DATA ms_settings_snapshot TYPE ty_remote_settings.
    DATA mo_form TYPE REF TO Lcl_abapgit_html_form .
    DATA mo_form_data TYPE REF TO Lcl_abapgit_string_map .
    DATA mo_validation_log TYPE REF TO Lcl_abapgit_string_map .
    DATA mv_refresh_on_back TYPE abap_bool.
    DATA mv_offline_switch_saved_url TYPE string.

    DATA mo_popup_picklist TYPE REF TO Lcl_abapgit_gui_picklist.

    METHODS get_remote_settings_from_repo
      IMPORTING
        io_repo            TYPE REF TO Lcl_abapgit_repo
      RETURNING
        VALUE(rs_settings) TYPE ty_remote_settings
      RAISING
        Lcx_abapgit_exception.

    METHODS get_remote_settings_from_form
      IMPORTING
        io_form_data       TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(rs_settings) TYPE ty_remote_settings
      RAISING
        Lcx_abapgit_exception.

    METHODS get_form_schema
      IMPORTING
        io_existing_form_data TYPE REF TO Lcl_abapgit_string_map OPTIONAL
      RETURNING
        VALUE(ro_form)        TYPE REF TO Lcl_abapgit_html_form
      RAISING
        Lcx_abapgit_exception.

    METHODS initialize_form_data
      RETURNING
        VALUE(ro_form_data) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception.

    METHODS check_protection
      RAISING
        Lcx_abapgit_exception.

    METHODS validate_form
      IMPORTING
        io_form_data             TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(ro_validation_log) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception.

    METHODS save_settings
      RAISING
        Lcx_abapgit_exception.

    METHODS choose_url
      RETURNING
        VALUE(rv_url) TYPE string
      RAISING
        Lcx_abapgit_exception.
    METHODS choose_branch
      IMPORTING
        iv_is_return TYPE abap_bool DEFAULT abap_false
      RAISING
        Lcx_abapgit_exception.
    METHODS choose_tag
      IMPORTING
        iv_is_return TYPE abap_bool DEFAULT abap_false
      RAISING
        Lcx_abapgit_exception.
    METHODS choose_pr
      IMPORTING
        iv_is_return TYPE abap_bool DEFAULT abap_false
      RAISING
        Lcx_abapgit_exception.
    METHODS choose_commit
      RETURNING
        VALUE(rv_commit) TYPE ty_remote_settings-commit
      RAISING
        Lcx_abapgit_exception.

    METHODS switch_online_offline
      RAISING
        Lcx_abapgit_exception.
    METHODS switch_to_branch_tag
      IMPORTING
        !iv_name TYPE string OPTIONAL
      RAISING
        Lcx_abapgit_exception.
    METHODS switch_to_commit
      IMPORTING
        !iv_revert TYPE abap_bool DEFAULT abap_false
        !iv_commit TYPE ty_remote_settings-commit OPTIONAL
      RAISING
        Lcx_abapgit_exception.
    METHODS switch_to_pull_req
      IMPORTING
        !iv_revert TYPE abap_bool DEFAULT abap_false
        !iv_pull   TYPE string OPTIONAL
      RAISING
        Lcx_abapgit_exception.

    METHODS handle_picklist_state
      RAISING
        Lcx_abapgit_exception.

    METHODS render_content
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_GUI_PAGE_SETT_REMO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_SYNTAX

*"* local type definitions
*include zcl_abapgit_gui_page_syntax===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_SYNTAX definition
*"* public declarations
*include zcl_abapgit_gui_page_syntax===cu.
CLASS Lcl_abapgit_gui_page_syntax DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_page_codi_base
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    INTERFACES:
      Lif_abapgit_gui_event_handler,
      Lif_abapgit_gui_hotkeys,
      Lif_abapgit_gui_menu_provider,
      Lif_abapgit_gui_renderable.

    CLASS-METHODS create
      IMPORTING
        io_repo        TYPE REF TO Lcl_abapgit_repo
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

    METHODS:
      constructor
        IMPORTING
          io_repo TYPE REF TO Lcl_abapgit_repo
        RAISING
          Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_syntax===co.
  PROTECTED SECTION.

    CONSTANTS c_variant TYPE c LENGTH 30 VALUE 'SYNTAX_CHECK'.

*"* private declarations
*include zcl_abapgit_gui_page_syntax===ci.
  PRIVATE SECTION.

    METHODS:
      run_syntax_check
        RAISING
          Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_GUI_PAGE_SYNTAX definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_HTML_ACTION_UTILS

*"* local type definitions
*include zcl_abapgit_html_action_utils=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_HTML_ACTION_UTILS definition
*"* public declarations
*include zcl_abapgit_html_action_utils=cu.
CLASS Lcl_abapgit_html_action_utils DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS jump_encode
      IMPORTING
        !iv_obj_type     TYPE tadir-object
        !iv_obj_name     TYPE tadir-obj_name
        !iv_filename     TYPE string OPTIONAL
      RETURNING
        VALUE(rv_string) TYPE string .
    CLASS-METHODS dir_encode
      IMPORTING
        !iv_path         TYPE string
      RETURNING
        VALUE(rv_string) TYPE string .
    CLASS-METHODS file_encode
      IMPORTING
        !iv_key          TYPE Lif_abapgit_persistence=>ty_repo-key
        !ig_file         TYPE any
        !iv_extra        TYPE clike OPTIONAL
      RETURNING
        VALUE(rv_string) TYPE string .
    CLASS-METHODS obj_encode
      IMPORTING
        !iv_key          TYPE Lif_abapgit_persistence=>ty_repo-key
        !ig_object       TYPE any
      RETURNING
        VALUE(rv_string) TYPE string .
    CLASS-METHODS dbkey_encode
      IMPORTING
        !is_key          TYPE Lif_abapgit_persistence=>ty_content
      RETURNING
        VALUE(rv_string) TYPE string .
*"* protected declarations
*include zcl_abapgit_html_action_utils=co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_html_action_utils=ci.
  PRIVATE SECTION.

    CLASS-METHODS add_field
      IMPORTING
        !iv_name  TYPE string
        !ig_field TYPE any
      CHANGING
        !ct_field TYPE tihttpnvp .

    CLASS-METHODS fields_to_string
      IMPORTING
        !it_fields       TYPE tihttpnvp
      RETURNING
        VALUE(rv_string) TYPE string.
endclass. "ZCL_ABAPGIT_HTML_ACTION_UTILS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_HTTP_AGENT

*"* local type definitions
*include zcl_abapgit_http_agent========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_HTTP_AGENT definition
*"* public declarations
*include zcl_abapgit_http_agent========cu.
CLASS Lcl_abapgit_http_agent DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_http_agent .

    CLASS-METHODS create
      RETURNING
        VALUE(ri_instance) TYPE REF TO Lif_abapgit_http_agent .

    METHODS constructor.

*"* protected declarations
*include zcl_abapgit_http_agent========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_http_agent========ci.
  PRIVATE SECTION.

    DATA mo_global_headers TYPE REF TO Lcl_abapgit_string_map.

    CLASS-METHODS attach_payload
      IMPORTING
        ii_request TYPE REF TO if_http_request
        iv_payload TYPE any
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_HTTP_AGENT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_I18N_PARAMS

*"* local type definitions
*include zcl_abapgit_i18n_params=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_I18N_PARAMS definition
*"* public declarations
*include zcl_abapgit_i18n_params=======cu.
CLASS Lcl_abapgit_i18n_params DEFINITION
*public
  FINAL
  CREATE PUBLIC


.

  PUBLIC SECTION.

    DATA ms_params TYPE Lif_abapgit_definitions=>ty_i18n_params READ-ONLY .

    CLASS-METHODS new
      IMPORTING
        !iv_main_language      TYPE spras DEFAULT Lif_abapgit_definitions=>c_english
        !iv_main_language_only TYPE abap_bool DEFAULT abap_false
        !it_translation_langs  TYPE Lif_abapgit_definitions=>ty_languages OPTIONAL
        !iv_use_lxe            TYPE abap_bool DEFAULT abap_false
        !is_params             TYPE Lif_abapgit_definitions=>ty_i18n_params OPTIONAL
      RETURNING
        VALUE(ro_instance) TYPE REF TO Lcl_abapgit_i18n_params .
    METHODS constructor
      IMPORTING
        !iv_main_language      TYPE spras DEFAULT Lif_abapgit_definitions=>c_english
        !iv_main_language_only TYPE abap_bool DEFAULT abap_false
        !it_translation_langs  TYPE Lif_abapgit_definitions=>ty_languages OPTIONAL
        !iv_use_lxe            TYPE abap_bool DEFAULT abap_false
        !is_params             TYPE Lif_abapgit_definitions=>ty_i18n_params OPTIONAL .

    METHODS is_lxe_applicable
      RETURNING
        VALUE(rv_yes) TYPE abap_bool .
    METHODS build_language_filter
      RETURNING
        VALUE(rt_language_filter) TYPE Lif_abapgit_environment=>ty_system_language_filter .
    METHODS trim_saplang_list
      CHANGING
        ct_sap_langs  TYPE Lif_abapgit_definitions=>ty_sap_langu_tab
      RAISING
        Lcx_abapgit_exception.
    METHODS trim_saplang_keyed_table
      IMPORTING
        iv_lang_field_name  TYPE abap_compname
        iv_keep_master_lang TYPE abap_bool DEFAULT abap_false  "sy-langu OPTIONAL
      CHANGING
        ct_tab              TYPE STANDARD TABLE
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_i18n_params=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_i18n_params=======ci.
  PRIVATE SECTION.
    DATA mt_language_filter TYPE Lif_abapgit_environment=>ty_system_language_filter.

    CLASS-METHODS iso_langs_to_lang_filter
      IMPORTING
        it_iso_filter      TYPE Lif_abapgit_definitions=>ty_languages
      RETURNING
        VALUE(rt_language_filter) TYPE Lif_abapgit_environment=>ty_system_language_filter.

endclass. "ZCL_ABAPGIT_I18N_PARAMS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_INJECTOR

*"* local type definitions
*include zcl_abapgit_injector==========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_INJECTOR definition
*"* public declarations
*include zcl_abapgit_injector==========cu.
CLASS Lcl_abapgit_injector DEFINITION
*public
  CREATE PRIVATE.

  PUBLIC SECTION.

    CLASS-METHODS set_tadir
      IMPORTING
        !ii_tadir TYPE REF TO Lif_abapgit_tadir .
    CLASS-METHODS set_sap_package
      IMPORTING
        !iv_package     TYPE devclass
        !ii_sap_package TYPE REF TO Lif_abapgit_sap_package .
    CLASS-METHODS set_code_inspector
      IMPORTING
        !iv_package        TYPE devclass
        !ii_code_inspector TYPE REF TO Lif_abapgit_code_inspector .
    CLASS-METHODS set_stage_logic
      IMPORTING
        !ii_logic TYPE REF TO Lif_abapgit_stage_logic .
    CLASS-METHODS set_cts_api
      IMPORTING
        !ii_cts_api TYPE REF TO Lif_abapgit_cts_api .
    CLASS-METHODS set_environment
      IMPORTING
        !ii_environment TYPE REF TO Lif_abapgit_environment .
    CLASS-METHODS set_longtexts
      IMPORTING
        !ii_longtexts TYPE REF TO Lif_abapgit_longtexts .
    CLASS-METHODS set_http_agent
      IMPORTING
        !ii_http_agent TYPE REF TO Lif_abapgit_http_agent .
    CLASS-METHODS set_lxe_texts
      IMPORTING
        !ii_lxe_texts TYPE REF TO Lif_abapgit_lxe_texts .
    CLASS-METHODS set_sap_namespace
      IMPORTING
        !ii_namespace TYPE REF TO Lif_abapgit_sap_namespace .
    CLASS-METHODS set_sap_report
      IMPORTING
        !ii_report TYPE REF TO Lif_abapgit_sap_report.
    CLASS-METHODS set_function_module
      IMPORTING
        ii_function_module TYPE REF TO Lif_abapgit_function_module.
    CLASS-METHODS set_exit
      IMPORTING
        ii_exit TYPE REF TO Lif_abapgit_exit.

*"* protected declarations
*include zcl_abapgit_injector==========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_injector==========ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_INJECTOR definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ITEM_STATE

*"* local type definitions
*include zcl_abapgit_item_state========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ITEM_STATE definition
*"* public declarations
*include zcl_abapgit_item_state========cu.
CLASS Lcl_abapgit_item_state DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS local
      RETURNING
        VALUE(rv_state) TYPE Lif_abapgit_git_definitions=>ty_item_state.
    METHODS remote
      RETURNING
        VALUE(rv_state) TYPE Lif_abapgit_git_definitions=>ty_item_state.
    METHODS is_reassigned
      RETURNING
        VALUE(rv_is_reassigned) TYPE abap_bool.
    METHODS is_unchanged
      RETURNING
        VALUE(rv_is_unchanged) TYPE abap_bool.
    METHODS sum_with_repo_item
      IMPORTING
        !is_repo_item TYPE Lif_abapgit_definitions=>ty_repo_item.
    METHODS sum_with_status_item
      IMPORTING
        !is_status_item TYPE Lif_abapgit_definitions=>ty_result.
*"* protected declarations
*include zcl_abapgit_item_state========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_item_state========ci.
  PRIVATE SECTION.
    DATA mv_lstate TYPE Lif_abapgit_git_definitions=>ty_item_state.
    DATA mv_rstate TYPE Lif_abapgit_git_definitions=>ty_item_state.
    DATA mv_is_reassigned TYPE abap_bool.

    CLASS-METHODS reduce
      IMPORTING
        iv_prev       TYPE Lif_abapgit_git_definitions=>ty_item_state
        iv_cur        TYPE Lif_abapgit_git_definitions=>ty_item_state
      RETURNING
        VALUE(rv_new) TYPE Lif_abapgit_git_definitions=>ty_item_state.
endclass. "ZCL_ABAPGIT_ITEM_STATE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_JSON_HANDLER

*"* local type definitions
*include zcl_abapgit_json_handler======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_JSON_HANDLER definition
*"* public declarations
*include zcl_abapgit_json_handler======cu.
CLASS Lcl_abapgit_json_handler DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    TYPES:
      BEGIN OF ty_json_abap_mapping,
        json TYPE string,
        abap TYPE string,
      END OF ty_json_abap_mapping .
    TYPES:
      ty_json_abap_mappings TYPE STANDARD TABLE OF ty_json_abap_mapping WITH DEFAULT KEY .
    TYPES:
      BEGIN OF ty_enum_mapping,
        path     TYPE string,
        mappings TYPE ty_json_abap_mappings,
      END OF ty_enum_mapping .
    TYPES:
      ty_enum_mappings TYPE TABLE OF ty_enum_mapping WITH DEFAULT KEY .
    TYPES:
      BEGIN OF ty_path_value_pair,
        path  TYPE string,
        value TYPE string,
      END OF ty_path_value_pair .
    TYPES:
      ty_skip_paths TYPE STANDARD TABLE OF ty_path_value_pair WITH KEY path .

    "! Serializes data to xstring. Type of data is specified in the
    "! implementing class.
    "!
    "! @parameter iv_data | data to be serialized
    "! @parameter iv_enum_mappings | ABAP/JSON value mappings
    "! @parameter iv_skip_paths | path/value pairs to be skipped during serialization
    "! @parameter rv_result | serialized data
    METHODS serialize
      IMPORTING
        !iv_data          TYPE data
        !iv_enum_mappings TYPE ty_enum_mappings OPTIONAL
        !iv_skip_paths    TYPE ty_skip_paths OPTIONAL
      RETURNING
        VALUE(rv_result)  TYPE xstring
      RAISING
        cx_static_check .
    "! Deserializes xstring into data. The type of data is specified in
    "! the implementing class
    "!
    "! @parameter iv_content | xstring to be deserialized
    "! @parameter iv_defaults | path-value pairs that apply if value is initial
    "! @parameter ev_data | data of the xstring
    METHODS deserialize
      IMPORTING
        !iv_content       TYPE xstring
        !iv_defaults      TYPE ty_skip_paths OPTIONAL
        !iv_enum_mappings TYPE ty_enum_mappings OPTIONAL
      EXPORTING
        !ev_data          TYPE data
      RAISING
        cx_static_check .
*"* protected declarations
*include zcl_abapgit_json_handler======co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_json_handler======ci.
  PRIVATE SECTION.

    METHODS:
      map2json_original_language
        CHANGING co_ajson TYPE REF TO Lif_abapgit_ajson
        RAISING  Lcx_abapgit_ajson_error,
      map2json_custom_enum
        IMPORTING it_enum_mappings TYPE ty_enum_mappings
        CHANGING  co_ajson         TYPE REF TO Lif_abapgit_ajson
        RAISING   Lcx_abapgit_ajson_error,
      map2json_abap_language_version
        CHANGING co_ajson TYPE REF TO Lif_abapgit_ajson
        RAISING  Lcx_abapgit_ajson_error,
      "! Get the enum mapping from object handler, as other enums as well
      map2abap_abap_language_version
        CHANGING co_ajson TYPE REF TO Lif_abapgit_ajson
        RAISING  Lcx_abapgit_ajson_error,
      "! For deserialization
      map2abap_original_language
        CHANGING co_ajson TYPE REF TO Lif_abapgit_ajson
        RAISING  Lcx_abapgit_ajson_error,
      "! For deserialization
      set_defaults
        IMPORTING it_defaults TYPE ty_skip_paths
        CHANGING  co_ajson    TYPE REF TO Lif_abapgit_ajson
        RAISING   Lcx_abapgit_ajson_error,
      map2abap_custom_enum
        IMPORTING it_enum_mappings TYPE ty_enum_mappings
        CHANGING  co_ajson         TYPE REF TO Lif_abapgit_ajson
        RAISING   Lcx_abapgit_ajson_error.

endclass. "ZCL_ABAPGIT_JSON_HANDLER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_LOG

*"* local type definitions
*include zcl_abapgit_log===============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_LOG definition
*"* public declarations
*include zcl_abapgit_log===============cu.
CLASS Lcl_abapgit_log DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_log .

    METHODS constructor
      IMPORTING
        iv_title TYPE string OPTIONAL.

    CLASS-METHODS from_exception
      IMPORTING
        io_x TYPE REF TO cx_root
      RETURNING
        VALUE(ro_log) TYPE REF TO Lcl_abapgit_log.

*"* protected declarations
*include zcl_abapgit_log===============co.
  PROTECTED SECTION.

    TYPES:
      BEGIN OF ty_log, "in order of occurrence
        msg       TYPE Lif_abapgit_log=>ty_msg,
        item      TYPE Lif_abapgit_definitions=>ty_item,
        exception TYPE REF TO cx_root,
      END OF ty_log .

    DATA:
      mt_log TYPE STANDARD TABLE OF ty_log WITH DEFAULT KEY .
    DATA mv_title TYPE string .

    METHODS get_messages_status
      IMPORTING
        !it_msg          TYPE Lif_abapgit_log=>ty_msgs
      RETURNING
        VALUE(rv_status) TYPE sy-msgty .
*"* private declarations
*include zcl_abapgit_log===============ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_LOG definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_LONGTEXTS

*"* local type definitions
*include zcl_abapgit_longtexts=========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_LONGTEXTS definition
*"* public declarations
*include zcl_abapgit_longtexts=========cu.
CLASS Lcl_abapgit_longtexts DEFINITION
*public
  CREATE PRIVATE
  friends Lcl_abapgit_factory


.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_longtexts.

*"* protected declarations
*include zcl_abapgit_longtexts=========co.
  PROTECTED SECTION.

    METHODS read
      IMPORTING
        !iv_object_name     TYPE clike
        !iv_longtext_id     TYPE dokil-id
        !it_dokil           TYPE Lif_abapgit_definitions=>ty_dokil_tt
        !iv_main_lang_only  TYPE abap_bool DEFAULT abap_false
        !iv_clear_fields    TYPE abap_bool DEFAULT abap_true
      RETURNING
        VALUE(rt_longtexts) TYPE Lif_abapgit_longtexts=>ty_longtexts
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_longtexts=========ci.
  PRIVATE SECTION.

    CONSTANTS c_docu_state_active TYPE dokstate VALUE 'A' ##NO_TEXT.

    METHODS escape_name
      IMPORTING
        !iv_longtext_id  TYPE dokil-id
        !iv_object_name  TYPE clike
      RETURNING
        VALUE(rv_object) TYPE dokil-object.
endclass. "ZCL_ABAPGIT_LONGTEXTS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_LXE_TEXTS

*"* local type definitions
*include zcl_abapgit_lxe_texts=========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_LXE_TEXTS definition
*"* public declarations
*include zcl_abapgit_lxe_texts=========cu.
CLASS Lcl_abapgit_lxe_texts DEFINITION
*public
  FINAL
  CREATE PUBLIC


.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_lxe_texts .

    CLASS-METHODS class_constructor.
    CLASS-METHODS get_translation_languages
      IMPORTING
        !iv_main_language   TYPE spras
        !it_i18n_languages  TYPE Lif_abapgit_definitions=>ty_languages
      RETURNING
        VALUE(rt_languages) TYPE Lif_abapgit_definitions=>ty_languages
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS get_installed_languages
      RETURNING
        VALUE(rt_languages) TYPE Lif_abapgit_definitions=>ty_languages
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS convert_lang_string_to_table
      IMPORTING
        !iv_langs              TYPE string
        !iv_skip_main_language TYPE spras OPTIONAL
      RETURNING
        VALUE(rt_languages)    TYPE Lif_abapgit_definitions=>ty_languages
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS convert_table_to_lang_string
      IMPORTING
        !it_languages   TYPE Lif_abapgit_definitions=>ty_languages
      RETURNING
        VALUE(rv_langs) TYPE string
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS detect_unsupported_languages
      IMPORTING
        !it_languages                   TYPE Lif_abapgit_definitions=>ty_languages
      RETURNING
        VALUE(rt_unsupported_languages) TYPE Lif_abapgit_definitions=>ty_languages
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS is_object_supported
      IMPORTING
        iv_object_type TYPE tadir-object
      RETURNING
        VALUE(rv_yes) TYPE abap_bool.

*"* protected declarations
*include zcl_abapgit_lxe_texts=========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_lxe_texts=========ci.
  PRIVATE SECTION.

    CONSTANTS c_custmnr TYPE lxecustmnr VALUE '999999' ##NEEDED.
    " The value for ABAP system translation is always 999999 (from lxecustmnr docs)

    TYPES:
      BEGIN OF ty_lxe_translation,
        source_lang TYPE lxeisolang,
        target_lang TYPE lxeisolang,
        custmnr     TYPE lxecustmnr,
        objtype     TYPE trobjtype,
        objname     TYPE lxeobjname,
        text_pairs  TYPE Lif_abapgit_lxe_texts=>ty_text_pairs,
      END OF ty_lxe_translation.
    TYPES:
      ty_lxe_translations TYPE STANDARD TABLE OF ty_lxe_translation WITH DEFAULT KEY .

    CLASS-DATA gt_installed_languages_cache TYPE Lif_abapgit_definitions=>ty_languages.
    CLASS-DATA gt_supported_obj_types TYPE STANDARD TABLE OF tadir-object.

    DATA mo_i18n_params TYPE REF TO Lcl_abapgit_i18n_params.
    DATA mi_xml_out     TYPE REF TO Lif_abapgit_xml_output.
    DATA mi_xml_in      TYPE REF TO Lif_abapgit_xml_input.
    DATA mo_files       TYPE REF TO Lcl_abapgit_objects_files.

    METHODS serialize_xml
      IMPORTING
        !iv_lxe_text_name TYPE string DEFAULT 'LXE_TEXTS'
        !iv_object_type   TYPE tadir-object
        !iv_object_name   TYPE tadir-obj_name
      RAISING
        Lcx_abapgit_exception .

    METHODS serialize_as_po
      IMPORTING
        !iv_object_type   TYPE tadir-object
        !iv_object_name   TYPE tadir-obj_name
      RAISING
        Lcx_abapgit_exception .

    " Implementation of deserialize_xml is not complete (but kept as future option)
    METHODS deserialize_xml
      IMPORTING
        !iv_lxe_text_name TYPE string DEFAULT 'LXE_TEXTS'
        !iv_object_type   TYPE tadir-object OPTIONAL
        !iv_object_name   TYPE tadir-obj_name OPTIONAL
      RAISING
        Lcx_abapgit_exception ##NEEDED.

    METHODS deserialize_from_po
      IMPORTING
        !iv_object_type   TYPE tadir-object
        !iv_object_name   TYPE tadir-obj_name
      RAISING
        Lcx_abapgit_exception .

    METHODS get_lang_iso4
      IMPORTING
        iv_src         TYPE laiso
      RETURNING
        VALUE(rv_iso4) TYPE lxeisolang
      RAISING
        Lcx_abapgit_exception.
    METHODS get_lxe_object_list
      IMPORTING
        iv_object_type     TYPE trobjtype
        iv_object_name     TYPE sobj_name
      RETURNING
        VALUE(rt_obj_list) TYPE lxe_tt_colob .
    METHODS read_lxe_object_text_pair
      IMPORTING
        iv_s_lang                TYPE lxeisolang
        iv_t_lang                TYPE lxeisolang
        iv_custmnr               TYPE lxecustmnr
        iv_objtype               TYPE trobjtype
        iv_objname               TYPE lxeobjname
        iv_read_only             TYPE abap_bool DEFAULT abap_true
      RETURNING
        VALUE(rt_text_pairs_tmp) TYPE ty_lxe_translation-text_pairs
      RAISING
        Lcx_abapgit_exception.
    METHODS write_lxe_object_text_pair
      IMPORTING
        iv_s_lang  TYPE lxeisolang
        iv_t_lang  TYPE lxeisolang
        iv_custmnr TYPE lxecustmnr
        iv_objtype TYPE trobjtype
        iv_objname TYPE lxeobjname
        it_pcx_s1  TYPE ty_lxe_translation-text_pairs
      RAISING
        Lcx_abapgit_exception.
    METHODS read_text_items
      IMPORTING
        iv_object_type       TYPE tadir-object
        iv_object_name       TYPE tadir-obj_name
      RETURNING
        VALUE(rt_text_items) TYPE ty_lxe_translations
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS langu_to_laiso_safe
      IMPORTING
        iv_langu        TYPE sy-langu
      RETURNING
        VALUE(rv_laiso) TYPE laiso
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS iso4_to_iso2
      IMPORTING
        iv_lxe_lang     TYPE lxeisolang
      RETURNING
        VALUE(rv_laiso) TYPE laiso
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS check_langs_versus_installed
      IMPORTING
        it_languages    TYPE Lif_abapgit_definitions=>ty_languages
        it_installed    TYPE Lif_abapgit_definitions=>ty_languages
      EXPORTING
        et_intersection TYPE Lif_abapgit_definitions=>ty_languages
        et_missfits     TYPE Lif_abapgit_definitions=>ty_languages.
endclass. "ZCL_ABAPGIT_LXE_TEXTS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_MERGE

*"* local type definitions
*include zcl_abapgit_merge=============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_MERGE definition
*"* public declarations
*include zcl_abapgit_merge=============cu.
CLASS Lcl_abapgit_merge DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_merge.

    METHODS constructor
      IMPORTING
        !io_repo          TYPE REF TO Lcl_abapgit_repo_online
        !iv_source_branch TYPE string
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_merge=============co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_merge=============ci.
  PRIVATE SECTION.

    TYPES:
      ty_ancestor_tt TYPE STANDARD TABLE OF Lif_abapgit_definitions=>ty_ancestor WITH DEFAULT KEY .
    TYPES:
      ty_visit_tt TYPE STANDARD TABLE OF Lif_abapgit_git_definitions=>ty_sha1 WITH DEFAULT KEY .

    DATA mo_repo TYPE REF TO Lcl_abapgit_repo_online .
    DATA ms_merge TYPE Lif_abapgit_merge=>ty_merge .
    DATA mt_conflicts TYPE Lif_abapgit_merge=>ty_merge_conflict_tt .
    DATA mt_objects TYPE Lif_abapgit_definitions=>ty_objects_tt .
    DATA mv_source_branch TYPE string .

    METHODS visit
      IMPORTING
        !iv_parent TYPE Lif_abapgit_git_definitions=>ty_sha1
      CHANGING
        !ct_visit  TYPE ty_visit_tt .
    METHODS all_files
      RETURNING
        VALUE(rt_files) TYPE Lif_abapgit_git_definitions=>ty_expanded_tt .
    METHODS calculate_result
      RAISING
        Lcx_abapgit_exception .
    METHODS fetch_git
      RETURNING
        VALUE(rt_objects) TYPE Lif_abapgit_definitions=>ty_objects_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS find_ancestors
      IMPORTING
        !iv_commit          TYPE Lif_abapgit_git_definitions=>ty_sha1
      RETURNING
        VALUE(rt_ancestors) TYPE ty_ancestor_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS find_first_common
      IMPORTING
        !it_list1        TYPE ty_ancestor_tt
        !it_list2        TYPE ty_ancestor_tt
      RETURNING
        VALUE(rs_common) TYPE Lif_abapgit_definitions=>ty_ancestor
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_MERGE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECTS_ACTIVATION

*"* local type definitions
*include zcl_abapgit_objects_activationccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECTS_ACTIVATION definition
*"* public declarations
*include zcl_abapgit_objects_activationcu.
CLASS Lcl_abapgit_objects_activation DEFINITION
*public
  CREATE PUBLIC


.

  PUBLIC SECTION.

    CLASS-METHODS add
      IMPORTING
        !iv_type   TYPE trobjtype
        !iv_name   TYPE clike
        !iv_delete TYPE abap_bool DEFAULT abap_false
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS add_item
      IMPORTING
        !is_item TYPE Lif_abapgit_definitions=>ty_item
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS activate
      IMPORTING
        !iv_ddic TYPE abap_bool DEFAULT abap_false
        !ii_log  TYPE REF TO Lif_abapgit_log
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS clear .
    CLASS-METHODS is_ddic_type
      IMPORTING
        !iv_obj_type     TYPE trobjtype
      RETURNING
        VALUE(rv_result) TYPE abap_bool .
    CLASS-METHODS is_active
      IMPORTING
        !is_item         TYPE Lif_abapgit_definitions=>ty_item
      RETURNING
        VALUE(rv_active) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_objects_activationco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_objects_activationci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_classes,
        object  TYPE trobjtype,
        clsname TYPE seoclsname,
      END OF ty_classes.

    CONSTANTS:
      c_domain     TYPE c LENGTH 9  VALUE 'DOMA DOMD',
      c_types      TYPE c LENGTH 50 VALUE 'DTEL DTED TABL TABD SQLT SQLD TTYP TTYD VIEW VIED',
      c_technset   TYPE c LENGTH 24 VALUE 'TABT VIET SQTT INDX XINX',
      c_f4_objects TYPE c LENGTH 35 VALUE 'SHLP SHLD MCOB MCOD MACO MACD MCID',
      c_enqueue    TYPE c LENGTH 9  VALUE 'ENQU ENQD',
      c_sqsc       TYPE c LENGTH 4  VALUE 'SQSC',
      c_stob       TYPE c LENGTH 4  VALUE 'STOB',
      c_ntab       TYPE c LENGTH 14 VALUE 'NTTT NTTB NTDT',
      c_ddls       TYPE c LENGTH 24 VALUE 'DDLS DRUL DTDC DTEB',
      c_switches   TYPE c LENGTH 24 VALUE 'SF01 SF02 SFSW SFBS SFBF',
      c_para       TYPE c LENGTH 4  VALUE 'PARA', " can be referenced by DTEL
      c_enhd       TYPE c LENGTH 4  VALUE 'ENHD'.

    CLASS-DATA:
      gt_classes TYPE STANDARD TABLE OF ty_classes WITH DEFAULT KEY .
    CLASS-DATA:
      gt_objects TYPE TABLE OF dwinactiv .

    CLASS-METHODS update_where_used
      IMPORTING
        !ii_log TYPE REF TO Lif_abapgit_log.
    CLASS-METHODS use_new_activation_logic
      RETURNING
        VALUE(rv_use_new_activation_logic) TYPE abap_bool .
    CLASS-METHODS activate_new
      IMPORTING
        !iv_ddic TYPE abap_bool DEFAULT abap_false
        !ii_log  TYPE REF TO Lif_abapgit_log
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS activate_old
      IMPORTING
        !iv_ddic TYPE abap_bool DEFAULT abap_false
        !ii_log  TYPE REF TO Lif_abapgit_log
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS activate_ddic
      IMPORTING
        !ii_log TYPE REF TO Lif_abapgit_log
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS add_errors_and_warnings_to_log
      IMPORTING
        !iv_logname TYPE ddmass-logname
        !ii_log     TYPE REF TO Lif_abapgit_log
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS add_activation_errors_to_log
      IMPORTING
        !io_checklist       TYPE REF TO cl_wb_checklist
        !ii_log             TYPE REF TO Lif_abapgit_log
      RETURNING
        VALUE(rv_try_again) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS is_non_ddic_active
      IMPORTING
        !is_item         TYPE Lif_abapgit_definitions=>ty_item
      RETURNING
        VALUE(rv_active) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS is_ddic_active
      IMPORTING
        !is_item         TYPE Lif_abapgit_definitions=>ty_item
      RETURNING
        VALUE(rv_active) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS get_ddic_type
      IMPORTING
        !iv_obj_type TYPE clike
        !iv_obj_name TYPE clike
      EXPORTING
        !ev_type     TYPE ddobjtyp
        !ev_name     TYPE ddobjname
        !ev_id       TYPE ddobjectid
      RAISING
        Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_OBJECTS_ACTIVATION definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECTS_CHECK

*"* local type definitions
*include zcl_abapgit_objects_check=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECTS_CHECK definition
*"* public declarations
*include zcl_abapgit_objects_check=====cu.
CLASS Lcl_abapgit_objects_check DEFINITION
*public
  CREATE PUBLIC


.

  PUBLIC SECTION.

    CLASS-METHODS deserialize_checks
      IMPORTING
        !io_repo         TYPE REF TO Lcl_abapgit_repo
      RETURNING
        VALUE(rs_checks) TYPE Lif_abapgit_definitions=>ty_deserialize_checks
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS class_constructor.
    CLASS-METHODS checks_adjust
      IMPORTING
        !io_repo    TYPE REF TO Lcl_abapgit_repo
        !is_checks  TYPE Lif_abapgit_definitions=>ty_deserialize_checks
      CHANGING
        !ct_results TYPE Lif_abapgit_definitions=>ty_results_tt
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_objects_check=====co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_objects_check=====ci.
  PRIVATE SECTION.
    CLASS-DATA: gi_exit TYPE REF TO Lif_abapgit_exit.

    CLASS-METHODS warning_overwrite_adjust
      IMPORTING
        !it_overwrite TYPE Lif_abapgit_definitions=>ty_overwrite_tt
      CHANGING
        !ct_results   TYPE Lif_abapgit_definitions=>ty_results_tt
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS warning_overwrite_find
      IMPORTING
        !it_results         TYPE Lif_abapgit_definitions=>ty_results_tt
      RETURNING
        VALUE(rt_overwrite) TYPE Lif_abapgit_definitions=>ty_overwrite_tt.
    CLASS-METHODS warning_package_adjust
      IMPORTING
        !io_repo      TYPE REF TO Lcl_abapgit_repo
        !it_overwrite TYPE Lif_abapgit_definitions=>ty_overwrite_tt
      CHANGING
        !ct_results   TYPE Lif_abapgit_definitions=>ty_results_tt
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS warning_package_find
      IMPORTING
        !it_results         TYPE Lif_abapgit_definitions=>ty_results_tt
        !io_repo            TYPE REF TO Lcl_abapgit_repo
      RETURNING
        VALUE(rt_overwrite) TYPE Lif_abapgit_definitions=>ty_overwrite_tt
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS determine_transport_request
      IMPORTING
        io_repo                     TYPE REF TO Lcl_abapgit_repo
        iv_transport_type           TYPE Lif_abapgit_definitions=>ty_transport_type
      RETURNING
        VALUE(rv_transport_request) TYPE trkorr.
    CLASS-METHODS check_multiple_files
      IMPORTING
        !it_results TYPE Lif_abapgit_definitions=>ty_results_tt
      RAISING
        Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_OBJECTS_CHECK definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECTS_FILES

*"* local type definitions
*include zcl_abapgit_objects_files=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECTS_FILES definition
*"* public declarations
*include zcl_abapgit_objects_files=====cu.
CLASS Lcl_abapgit_objects_files DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS constructor
      IMPORTING
        !is_item TYPE Lif_abapgit_definitions=>ty_item
        !iv_path TYPE string OPTIONAL .
    METHODS add_string
      IMPORTING
        !iv_extra  TYPE clike OPTIONAL
        !iv_ext    TYPE string
        !iv_string TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS read_string
      IMPORTING
        !iv_extra        TYPE clike OPTIONAL
        !iv_ext          TYPE string
      RETURNING
        VALUE(rv_string) TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS add_xml
      IMPORTING
        !iv_extra     TYPE clike OPTIONAL
        !ii_xml       TYPE REF TO Lif_abapgit_xml_output
        !iv_normalize TYPE abap_bool DEFAULT abap_true
        !is_metadata  TYPE Lif_abapgit_definitions=>ty_metadata OPTIONAL
      RAISING
        Lcx_abapgit_exception .
    METHODS read_xml
      IMPORTING
        !iv_extra     TYPE clike OPTIONAL
      RETURNING
        VALUE(ri_xml) TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception .
    METHODS read_abap
      IMPORTING
        !iv_extra      TYPE clike OPTIONAL
        !iv_error      TYPE abap_bool DEFAULT abap_true
      RETURNING
        VALUE(rt_abap) TYPE abaptxt255_tab
      RAISING
        Lcx_abapgit_exception .
    METHODS add_abap
      IMPORTING
        !iv_extra TYPE clike OPTIONAL
        !it_abap  TYPE STANDARD TABLE
      RAISING
        Lcx_abapgit_exception .
    METHODS add
      IMPORTING
        !is_file TYPE Lif_abapgit_git_definitions=>ty_file .
    METHODS add_raw
      IMPORTING
        !iv_extra TYPE clike OPTIONAL
        !iv_ext   TYPE string
        !iv_data  TYPE xstring.
    METHODS read_raw
      IMPORTING
        !iv_extra      TYPE clike OPTIONAL
        !iv_ext        TYPE string
      RETURNING
        VALUE(rv_data) TYPE xstring
      RAISING
        Lcx_abapgit_exception .
    METHODS get_files
      RETURNING
        VALUE(rt_files) TYPE Lif_abapgit_git_definitions=>ty_files_tt .
    METHODS set_files
      IMPORTING
        !it_files TYPE Lif_abapgit_git_definitions=>ty_files_tt .
    METHODS get_accessed_files
      RETURNING
        VALUE(rt_files) TYPE Lif_abapgit_git_definitions=>ty_file_signatures_tt .
    METHODS contains_file
      IMPORTING
        !iv_extra         TYPE clike OPTIONAL
        !iv_ext           TYPE string
      RETURNING
        VALUE(rv_present) TYPE abap_bool .
    METHODS get_file_pattern
      RETURNING
        VALUE(rv_pattern) TYPE string .
    METHODS is_json_metadata
      RETURNING
        VALUE(rv_result) TYPE abap_bool.
    METHODS add_i18n_file
      IMPORTING
        !ii_i18n_file TYPE REF TO Lif_abapgit_i18n_file
      RAISING
        Lcx_abapgit_exception .
    METHODS read_i18n_files
      RETURNING
        VALUE(rt_i18n_files) TYPE Lif_abapgit_i18n_file=>ty_table_of
      RAISING
        Lcx_abapgit_exception .

*"* protected declarations
*include zcl_abapgit_objects_files=====co.
  PROTECTED SECTION.

    METHODS read_file
      IMPORTING
        !iv_filename   TYPE string
        !iv_error      TYPE abap_bool DEFAULT abap_true
      RETURNING
        VALUE(rv_data) TYPE xstring
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_objects_files=====ci.
  PRIVATE SECTION.

    DATA ms_item TYPE Lif_abapgit_definitions=>ty_item .
    DATA mt_accessed_files TYPE Lif_abapgit_git_definitions=>ty_file_signatures_tt .
    DATA mt_files TYPE Lif_abapgit_git_definitions=>ty_files_tt .
    DATA mv_path TYPE string .

    METHODS mark_accessed
      IMPORTING
        !iv_path TYPE Lif_abapgit_git_definitions=>ty_file-path
        !iv_file TYPE Lif_abapgit_git_definitions=>ty_file-filename
        !iv_sha1 TYPE Lif_abapgit_git_definitions=>ty_file-sha1.

endclass. "ZCL_ABAPGIT_OBJECTS_FILES definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECTS_SUPER

*"* local type definitions
*include zcl_abapgit_objects_super=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECTS_SUPER definition
*"* public declarations
*include zcl_abapgit_objects_super=====cu.
CLASS Lcl_abapgit_objects_super DEFINITION
*public
  ABSTRACT
  CREATE PUBLIC
  friends Lcl_abapgit_objects .

  PUBLIC SECTION.

    CONSTANTS c_user_unknown TYPE syuname VALUE 'UNKNOWN'.

    METHODS constructor
      IMPORTING
        !is_item     TYPE Lif_abapgit_definitions=>ty_item
        !iv_language TYPE spras .
*"* protected declarations
*include zcl_abapgit_objects_super=====co.
  PROTECTED SECTION.

    DATA ms_item TYPE Lif_abapgit_definitions=>ty_item .
    DATA mo_i18n_params TYPE REF TO Lcl_abapgit_i18n_params .
    DATA mv_language TYPE spras .

    METHODS get_metadata
      RETURNING
        VALUE(rs_metadata) TYPE Lif_abapgit_definitions=>ty_metadata .
    METHODS corr_insert
      IMPORTING
        !iv_package      TYPE devclass
        !ig_object_class TYPE any OPTIONAL
      RAISING
        Lcx_abapgit_exception .
    METHODS tadir_insert
      IMPORTING
        !iv_package TYPE devclass
      RAISING
        Lcx_abapgit_exception .
    METHODS tadir_delete
      RAISING
        Lcx_abapgit_exception .
    METHODS exists_a_lock_entry_for
      IMPORTING
        !iv_lock_object               TYPE string
        !iv_argument                  TYPE csequence OPTIONAL
        !iv_prefix                    TYPE csequence OPTIONAL
      RETURNING
        VALUE(rv_exists_a_lock_entry) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS set_default_package
      IMPORTING
        !iv_package TYPE devclass .
    METHODS set_default_transport
      IMPORTING
        !iv_transport TYPE trkorr.
    METHODS serialize_longtexts
      IMPORTING
        !ii_xml           TYPE REF TO Lif_abapgit_xml_output
        !iv_longtext_id   TYPE dokil-id OPTIONAL
        !it_dokil         TYPE Lif_abapgit_definitions=>ty_dokil_tt OPTIONAL
        !iv_longtext_name TYPE string DEFAULT 'LONGTEXTS'
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_longtexts
      IMPORTING
        !ii_xml           TYPE REF TO Lif_abapgit_xml_input
        !iv_longtext_id   TYPE dokil-id OPTIONAL
        !iv_longtext_name TYPE string DEFAULT 'LONGTEXTS'
      RAISING
        Lcx_abapgit_exception .
    METHODS delete_longtexts
      IMPORTING
        !iv_longtext_id TYPE dokil-id
      RAISING
        Lcx_abapgit_exception .
    METHODS is_active
      RETURNING
        VALUE(rv_active) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS delete_ddic
      IMPORTING
        !iv_objtype              TYPE string
        !iv_no_ask               TYPE abap_bool DEFAULT abap_true
        !iv_no_ask_delete_append TYPE abap_bool DEFAULT abap_false
      RAISING
        Lcx_abapgit_exception .
    METHODS set_abap_language_version
      CHANGING
        !cv_abap_language_version TYPE uccheck.
    METHODS clear_abap_language_version
      CHANGING
        !cv_abap_language_version TYPE uccheck.
*"* private declarations
*include zcl_abapgit_objects_super=====ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECTS_SUPER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ACID

*"* local type definitions
*include zcl_abapgit_object_acid=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ACID definition
*"* public declarations
*include zcl_abapgit_object_acid=======cu.
CLASS Lcl_abapgit_object_acid DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_acid=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_acid=======ci.
  PRIVATE SECTION.
    METHODS: create_object
      RETURNING VALUE(ro_aab) TYPE REF TO cl_aab_id
      RAISING   Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_ACID definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_AIFC

*"* local type definitions
*include zcl_abapgit_object_aifc=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_AIFC definition
*"* public declarations
*include zcl_abapgit_object_aifc=======cu.
CLASS Lcl_abapgit_object_aifc DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        !iv_language TYPE spras
        !is_item     TYPE Lif_abapgit_definitions=>ty_item
      RAISING
        Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_object_aifc=======co.
  PROTECTED SECTION.
    TYPES:
      BEGIN OF ty_aif_key_s,
        ns     TYPE c LENGTH 6,
        ifname TYPE c LENGTH 10,
        ifver  TYPE c LENGTH 5,
      END OF ty_aif_key_s.
    TYPES:
      BEGIN OF ty_icd_data_key_s,
        depl_scenario TYPE c LENGTH 20,
        ns            TYPE c LENGTH 6,
        ifname        TYPE c LENGTH 10,
        ifver2        TYPE c LENGTH 4,
      END OF ty_icd_data_key_s.
    TYPES:
      BEGIN OF ty_icd_data_key,
        depl_scenario TYPE c LENGTH 20,
        ns            TYPE c LENGTH 6,
        ifname        TYPE c LENGTH 10,
        ifver2        TYPE c LENGTH 4,
        ifver         TYPE c LENGTH 5,
      END OF ty_icd_data_key.
    TYPES:
      BEGIN OF ty_table_data_s,
        tabname    TYPE tabname,
        table_data TYPE REF TO data,
      END OF ty_table_data_s.
    TYPES:
      ty_table_data_t TYPE SORTED TABLE OF
           ty_table_data_s WITH UNIQUE KEY tabname.

    DATA ms_icd_data_key TYPE ty_icd_data_key_s.

    METHODS handle_table_data
      IMPORTING
        !iv_tabname TYPE tabname
        !it_data    TYPE STANDARD TABLE
      RAISING
        Lcx_abapgit_exception.
    METHODS clear_client
      CHANGING
        !ct_data TYPE STANDARD TABLE
      RAISING
        Lcx_abapgit_exception.
    METHODS authorization_check
      RETURNING
        VALUE(rv_success) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception.
    METHODS get_content_compress
      IMPORTING
        !io_log     TYPE REF TO Lif_abapgit_log
        !is_ifkeys  TYPE ty_aif_key_s
        !iv_package TYPE devclass
      RAISING
        Lcx_abapgit_exception.
    METHODS validate_interface
      IMPORTING
        !is_ifkeys        TYPE ty_aif_key_s
      RETURNING
        VALUE(rv_success) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception.
    METHODS compress_interface
      IMPORTING
        !is_ifkeys        TYPE ty_aif_key_s
      RETURNING
        VALUE(rv_success) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception.
    METHODS execute_checks
      IMPORTING
        !io_xml           TYPE REF TO Lif_abapgit_xml_input
      RETURNING
        VALUE(rv_success) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception.

*"* private declarations
*include zcl_abapgit_object_aifc=======ci.
  PRIVATE SECTION.
    TYPES:
      BEGIN OF ty_content_s,
        tabname TYPE tabname,
      END OF ty_content_s.
    TYPES:
      ty_content_t TYPE STANDARD TABLE OF ty_content_s WITH NON-UNIQUE DEFAULT KEY.

    DATA mo_abapgit_util TYPE REF TO object.
endclass. "ZCL_ABAPGIT_OBJECT_AIFC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_AMSD

*"* local type definitions
*include zcl_abapgit_object_amsd=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_AMSD definition
*"* public declarations
*include zcl_abapgit_object_amsd=======cu.
CLASS Lcl_abapgit_object_amsd DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras
        RAISING
          Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_object_amsd=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_amsd=======ci.
  PRIVATE SECTION.
    METHODS:
      clear_fields
        CHANGING
          cs_logical_db_schema TYPE any,

      clear_field
        IMPORTING
          iv_fieldname         TYPE csequence
        CHANGING
          cs_logical_db_schema TYPE any,

      fill_metadata_from_db
        CHANGING
          cs_logical_db_schema TYPE any
        RAISING
          Lcx_abapgit_exception,

      get_wb_object_operator
        RETURNING
          VALUE(ri_wb_object_operator) TYPE REF TO object
        RAISING
          Lcx_abapgit_exception.

    DATA:
      mr_logical_db_schema     TYPE REF TO data,
      mv_logical_db_schema_key TYPE seu_objkey,
      mi_persistence           TYPE REF TO if_wb_object_persist,
      mi_wb_object_operator    TYPE REF TO object.
endclass. "ZCL_ABAPGIT_OBJECT_AMSD definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_APIS

*"* local type definitions
*include zcl_abapgit_object_apis=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_APIS definition
*"* public declarations
*include zcl_abapgit_object_apis=======cu.
CLASS Lcl_abapgit_object_apis DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras
        RAISING
          Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_object_apis=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_apis=======ci.
  PRIVATE SECTION.
    CONSTANTS c_model TYPE string VALUE 'ARS_S_API_ABAPGIT'.
    DATA mo_handler TYPE REF TO object.
    METHODS initialize.
endclass. "ZCL_ABAPGIT_OBJECT_APIS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_AQBG

*"* local type definitions
*include zcl_abapgit_object_aqbg=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_AQBG definition
*"* public declarations
*include zcl_abapgit_object_aqbg=======cu.
CLASS Lcl_abapgit_object_aqbg DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_aqbg=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_aqbg=======ci.
  PRIVATE SECTION.

    METHODS get_generic
      RETURNING
        VALUE(ro_generic) TYPE REF TO Lcl_abapgit_objects_generic
      RAISING
        Lcx_abapgit_exception .

    METHODS get_field_rules
      RETURNING
        VALUE(ro_result) TYPE REF TO Lif_abapgit_field_rules.
endclass. "ZCL_ABAPGIT_OBJECT_AQBG definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_AQQU

*"* local type definitions
*include zcl_abapgit_object_aqqu=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_AQQU definition
*"* public declarations
*include zcl_abapgit_object_aqqu=======cu.
CLASS Lcl_abapgit_object_aqqu DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_aqqu=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_aqqu=======ci.
  PRIVATE SECTION.

    METHODS get_generic
      RETURNING
        VALUE(ro_generic) TYPE REF TO Lcl_abapgit_objects_generic
      RAISING
        Lcx_abapgit_exception .

    METHODS get_field_rules
      RETURNING
        VALUE(ro_result) TYPE REF TO Lif_abapgit_field_rules.
endclass. "ZCL_ABAPGIT_OBJECT_AQQU definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_AQSG

*"* local type definitions
*include zcl_abapgit_object_aqsg=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_AQSG definition
*"* public declarations
*include zcl_abapgit_object_aqsg=======cu.
CLASS Lcl_abapgit_object_aqsg DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_aqsg=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_aqsg=======ci.
  PRIVATE SECTION.

    METHODS get_generic
      RETURNING
        VALUE(ro_generic) TYPE REF TO Lcl_abapgit_objects_generic
      RAISING
        Lcx_abapgit_exception .

    METHODS get_field_rules
      RETURNING
        VALUE(ro_result) TYPE REF TO Lif_abapgit_field_rules.
endclass. "ZCL_ABAPGIT_OBJECT_AQSG definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_AREA

*"* local type definitions
*include zcl_abapgit_object_area=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_AREA definition
*"* public declarations
*include zcl_abapgit_object_area=======cu.
CLASS Lcl_abapgit_object_area DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_area=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_area=======ci.
  PRIVATE SECTION.

endclass. "ZCL_ABAPGIT_OBJECT_AREA definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ASFC

*"* local type definitions
*include zcl_abapgit_object_asfc=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ASFC definition
*"* public declarations
*include zcl_abapgit_object_asfc=======cu.
CLASS Lcl_abapgit_object_asfc DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_asfc=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_asfc=======ci.
  PRIVATE SECTION.

    METHODS get_generic
      RETURNING
        VALUE(ro_generic) TYPE REF TO Lcl_abapgit_objects_generic
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECT_ASFC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_AUTH

*"* local type definitions
*include zcl_abapgit_object_auth=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_AUTH definition
*"* public declarations
*include zcl_abapgit_object_auth=======cu.
CLASS Lcl_abapgit_object_auth DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        is_item     TYPE Lif_abapgit_definitions=>ty_item
        iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_auth=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_auth=======ci.
  PRIVATE SECTION.
    DATA: mv_fieldname TYPE authx-fieldname.

endclass. "ZCL_ABAPGIT_OBJECT_AUTH definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_AVAR

*"* local type definitions
*include zcl_abapgit_object_avar=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_AVAR definition
*"* public declarations
*include zcl_abapgit_object_avar=======cu.
CLASS Lcl_abapgit_object_avar DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_avar=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_avar=======ci.
  PRIVATE SECTION.
    METHODS: create_object
      RETURNING VALUE(ro_aab_var) TYPE REF TO cl_aab_variant
      RAISING   Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_AVAR definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_AVAS

*"* local type definitions
*include zcl_abapgit_object_avas=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_AVAS definition
*"* public declarations
*include zcl_abapgit_object_avas=======cu.
CLASS Lcl_abapgit_object_avas DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_avas=======co.
  PROTECTED SECTION.

    TYPES:
      BEGIN OF ty_header,
        guid      TYPE guid_32,
        attribute TYPE cls_attribute_name,
        object    TYPE pak_object_key,
      END OF ty_header .
    TYPES:
      BEGIN OF ty_avas,
        header TYPE ty_header,
        values TYPE cls_value_assignments,
        links  TYPE cls_linked_objects,
      END OF ty_avas .

    METHODS insert_assignments
      IMPORTING
        !is_avas TYPE ty_avas
      RAISING
        Lcx_abapgit_exception .
    METHODS instantiate
      RETURNING
        VALUE(ro_avas) TYPE REF TO cl_cls_attr_value_assignment
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_object_avas=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_AVAS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_BDEF

*"* local type definitions
*include zcl_abapgit_object_bdef=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_BDEF definition
*"* public declarations
*include zcl_abapgit_object_bdef=======cu.
CLASS Lcl_abapgit_object_bdef DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras
        RAISING
          Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_object_bdef=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_bdef=======ci.
  PRIVATE SECTION.

    DATA mi_persistence TYPE REF TO if_wb_object_persist .
    DATA mi_wb_object_operator TYPE REF TO object .
    DATA mv_behaviour_definition_key TYPE seu_objkey .
    DATA mr_behaviour_definition TYPE REF TO data .

    METHODS clear_fields
      CHANGING
        !cs_metadata TYPE any .
    METHODS clear_field
      IMPORTING
        !iv_fieldname TYPE csequence
      CHANGING
        !cs_metadata  TYPE any .
    METHODS get_wb_object_operator
      RETURNING
        VALUE(ri_wb_object_operator) TYPE REF TO object
      RAISING
        Lcx_abapgit_exception .
    METHODS merge_object_data
      IMPORTING
        !io_object_data              TYPE REF TO object
      RETURNING
        VALUE(ro_object_data_merged) TYPE REF TO if_wb_object_data_model
      RAISING
        Lcx_abapgit_exception .
    METHODS get_object_data
      IMPORTING
        !io_xml               TYPE REF TO Lif_abapgit_xml_input
      RETURNING
        VALUE(ro_object_data) TYPE REF TO if_wb_object_data_model
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECT_BDEF definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_CHAR

*"* local type definitions
*include zcl_abapgit_object_char=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_CHAR definition
*"* public declarations
*include zcl_abapgit_object_char=======cu.
CLASS Lcl_abapgit_object_char DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .

*"* protected declarations
*include zcl_abapgit_object_char=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_char=======ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_char,
        cls_attribute   TYPE cls_attribute,
        cls_attributet  TYPE STANDARD TABLE OF cls_attributet WITH DEFAULT KEY,
        cls_attr_value  TYPE STANDARD TABLE OF cls_attr_value WITH DEFAULT KEY,
        cls_attr_valuet TYPE STANDARD TABLE OF cls_attr_valuet WITH DEFAULT KEY,
      END OF ty_char .

    CONSTANTS c_longtext_id_char TYPE dokil-id VALUE 'CH'.

    METHODS instantiate_char_and_lock
      IMPORTING
        !iv_type_group       TYPE cls_object_type_group
        !iv_activation_state TYPE pak_activation_state
      RETURNING
        VALUE(ro_char)       TYPE REF TO cl_cls_attribute
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECT_CHAR definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_CHDO

*"* local type definitions
*include zcl_abapgit_object_chdo=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_CHDO definition
*"* public declarations
*include zcl_abapgit_object_chdo=======cu.
CLASS Lcl_abapgit_object_chdo DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        is_item     TYPE Lif_abapgit_definitions=>ty_item
        iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_chdo=======co.
  PROTECTED SECTION.

    METHODS after_import
      RAISING
        Lcx_abapgit_exception .
    METHODS delete_tadir_cdnames
      IMPORTING
        !is_cdnames TYPE cdnames
      RAISING
        Lcx_abapgit_exception .
    METHODS delete_tadir_tabl
      IMPORTING
        !is_tcdrs TYPE tcdrs
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_object_chdo=======ci.
  PRIVATE SECTION.
    TYPES: BEGIN OF ty_change_document,
             reports_generated TYPE SORTED TABLE OF tcdrps WITH UNIQUE KEY object reportname,
             objects           TYPE SORTED TABLE OF tcdobs WITH UNIQUE KEY object tabname,
             objects_text      TYPE SORTED TABLE OF tcdobts WITH UNIQUE KEY spras object,
           END OF ty_change_document.

    DATA: mv_object TYPE cdobjectcl.

endclass. "ZCL_ABAPGIT_OBJECT_CHDO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_CMOD

*"* local type definitions
*include zcl_abapgit_object_cmod=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_CMOD definition
*"* public declarations
*include zcl_abapgit_object_cmod=======cu.
CLASS Lcl_abapgit_object_cmod DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_cmod=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_cmod=======ci.
  PRIVATE SECTION.

endclass. "ZCL_ABAPGIT_OBJECT_CMOD definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_CMPT

*"* local type definitions
*include zcl_abapgit_object_cmpt=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_CMPT definition
*"* public declarations
*include zcl_abapgit_object_cmpt=======cu.
CLASS Lcl_abapgit_object_cmpt DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras.

    INTERFACES Lif_abapgit_object.

*"* protected declarations
*include zcl_abapgit_object_cmpt=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_cmpt=======ci.
  PRIVATE SECTION.
    DATA: mo_cmp_db TYPE REF TO object,
          mv_name   TYPE c LENGTH 30.

endclass. "ZCL_ABAPGIT_OBJECT_CMPT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_COMMON_AFF

*"* local type definitions
*include zcl_abapgit_object_common_aff=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_COMMON_AFF definition
*"* public declarations
*include zcl_abapgit_object_common_aff=cu.
"! Provides common functionality for the abapGit integration of objects based on ABAP File Formats (AFF).
"! It inherits from {@link ZCL_ABAPGIT_OBJECTS_SUPER} and implements the interface {@link ZIF_ABAPGIT_OBJECT}.
"! <br/><br/>
"! Each subclass must implement at least the abstract method ZIF_ABAPGIT_OBJECT~CHANGED_BY.
"! In case you deal with a DDIC object, the methods GET_METADATA and ZIF_ABAPGIT_OBJECT~GET_DESERIALIZE_STEPS
"! have to be redefined in the subclass.
"! <br/><br/>
"! In case the object has an additional file to the json file, the subclass needs
"! to redefine the method GET_ADDITIONAL_EXTENSIONS.
"! <br/><br/>
"! This common class fully relies on the implementation of the object-specific AFF handler
"! (it inherits from {@link CL_AFF_OBJECT_HANDLER}).
"! Precisely, for the existence check-, serialization-, deserialization- or deletion-functionality, the corresponding
"! AFF object handler method is called.
CLASS Lcl_abapgit_object_common_aff DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  ABSTRACT
  CREATE PUBLIC


.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object
      ABSTRACT METHODS changed_by .

    METHODS constructor
      IMPORTING
        !is_item     TYPE Lif_abapgit_definitions=>ty_item
        !iv_language TYPE spras
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_object_common_aff=co.
  PROTECTED SECTION.
    TYPES: BEGIN OF ty_extension_mapper_pair,
             "! file extension
             extension        TYPE string,
             "! instance of {@link CL_AFF_FILE_NAME_MAPPER} providing file names for file extensions
             file_name_mapper TYPE REF TO object,
           END OF ty_extension_mapper_pair,
           ty_extension_mapper_pairs TYPE STANDARD TABLE OF ty_extension_mapper_pair WITH DEFAULT KEY.

    "! Delivers other file extensions than json to be considered at serialize or deserialize of an object
    METHODS get_additional_extensions
      RETURNING VALUE(rv_additional_extensions) TYPE ty_extension_mapper_pairs ##NEEDED.

    "! Delivers an instance of AFF object handler ({@link IF_AFF_OBJECT_HANDLER})
    METHODS get_object_handler
      RETURNING
        VALUE(ro_object_handler) TYPE REF TO object
      RAISING
        Lcx_abapgit_exception.

*"* private declarations
*include zcl_abapgit_object_common_aff=ci.
  PRIVATE SECTION.
    METHODS is_file_empty
      IMPORTING
        io_object_json_file TYPE REF TO object
      RETURNING
        VALUE(rv_is_empty)  TYPE abap_bool.

    CLASS-METHODS remove_abap_language_version
      IMPORTING
        iv_json_as_xstring               TYPE xstring
      RETURNING
        VALUE(rv_json_as_xstring_wo_alv) TYPE xstring
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_COMMON_AFF definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_CUS0

*"* local type definitions
*include zcl_abapgit_object_cus0=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_CUS0 definition
*"* public declarations
*include zcl_abapgit_object_cus0=======cu.
CLASS Lcl_abapgit_object_cus0 DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        is_item     TYPE Lif_abapgit_definitions=>ty_item
        iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_cus0=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_cus0=======ci.
  PRIVATE SECTION.
    TYPES: ty_img_activity_texts TYPE STANDARD TABLE OF cus_imgact
                                       WITH NON-UNIQUE DEFAULT KEY,
           BEGIN OF ty_img_activity,
             header TYPE cus_imgach,
             texts  TYPE ty_img_activity_texts,
           END OF ty_img_activity.
    DATA: mv_img_activity TYPE cus_img_ac.

endclass. "ZCL_ABAPGIT_OBJECT_CUS0 definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_CUS1

*"* local type definitions
*include zcl_abapgit_object_cus1=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_CUS1 definition
*"* public declarations
*include zcl_abapgit_object_cus1=======cu.
CLASS Lcl_abapgit_object_cus1 DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        is_item     TYPE Lif_abapgit_definitions=>ty_item
        iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_cus1=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_cus1=======ci.
  PRIVATE SECTION.
    TYPES: ty_activity_titles TYPE STANDARD TABLE OF cus_actt
                                    WITH NON-UNIQUE DEFAULT KEY,

           ty_objects         TYPE STANDARD TABLE OF cus_actobj
                            WITH NON-UNIQUE DEFAULT KEY,

           ty_objects_title   TYPE STANDARD TABLE OF cus_actobt
                                  WITH NON-UNIQUE DEFAULT KEY,

           BEGIN OF ty_customzing_activity,
             activity_header        TYPE cus_acth,
             activity_customer_exit TYPE cus_actext,
             activity_title         TYPE ty_activity_titles,
             objects                TYPE ty_objects,
             objects_title          TYPE ty_objects_title,
           END OF ty_customzing_activity.

    DATA: mv_customizing_activity TYPE cus_img_ac.

endclass. "ZCL_ABAPGIT_OBJECT_CUS1 definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_CUS2

*"* local type definitions
*include zcl_abapgit_object_cus2=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_CUS2 definition
*"* public declarations
*include zcl_abapgit_object_cus2=======cu.
CLASS Lcl_abapgit_object_cus2 DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        is_item     TYPE Lif_abapgit_definitions=>ty_item
        iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_cus2=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_cus2=======ci.
  PRIVATE SECTION.
    TYPES: ty_attribute_titles        TYPE STANDARD TABLE OF cus_atrt
                                            WITH NON-UNIQUE DEFAULT KEY,
           ty_attribute_countries     TYPE STANDARD TABLE OF cus_atrcou
                                            WITH NON-UNIQUE DEFAULT KEY,
           ty_attribute_components    TYPE STANDARD TABLE OF tfm18
                                            WITH NON-UNIQUE DEFAULT KEY,
           ty_attribute_comp_variants TYPE STANDARD TABLE OF cus_atrvco
                                            WITH NON-UNIQUE DEFAULT KEY.

    TYPES: BEGIN OF ty_customizing_attribute,
             header              TYPE cus_atrh,
             titles              TYPE ty_attribute_titles,
             countries           TYPE ty_attribute_countries,
             components          TYPE ty_attribute_components,
             components_variants TYPE ty_attribute_comp_variants,
           END OF ty_customizing_attribute.

    DATA: mv_img_attribute TYPE cus_atr.

endclass. "ZCL_ABAPGIT_OBJECT_CUS2 definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_DCLS

*"* local type definitions
*include zcl_abapgit_object_dcls=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_DCLS definition
*"* public declarations
*include zcl_abapgit_object_dcls=======cu.
CLASS Lcl_abapgit_object_dcls DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_dcls=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_dcls=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_DCLS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_DDLS

*"* local type definitions
*include zcl_abapgit_object_ddls=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_DDLS definition
*"* public declarations
*include zcl_abapgit_object_ddls=======cu.
CLASS Lcl_abapgit_object_ddls DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        !is_item     TYPE Lif_abapgit_definitions=>ty_item
        !iv_language TYPE spras
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_object_ddls=======co.
  PROTECTED SECTION.
    METHODS open_adt_stob
      IMPORTING
        iv_ddls_name TYPE tadir-obj_name
      RAISING
        Lcx_abapgit_exception.

*"* private declarations
*include zcl_abapgit_object_ddls=======ci.
  PRIVATE SECTION.
    METHODS is_baseinfo_supported
      RETURNING
        VALUE(rv_supported) TYPE abap_bool .
    METHODS read_baseinfo
      RETURNING
        VALUE(rv_baseinfo_string) TYPE string.
    METHODS format_source_before_serialize
      CHANGING
        cv_string TYPE string.
endclass. "ZCL_ABAPGIT_OBJECT_DDLS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_DDLX

*"* local type definitions
*include zcl_abapgit_object_ddlx=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_DDLX definition
*"* public declarations
*include zcl_abapgit_object_ddlx=======cu.
CLASS Lcl_abapgit_object_ddlx DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_ddlx=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_ddlx=======ci.
  PRIVATE SECTION.
    DATA mi_persistence TYPE REF TO if_wb_object_persist .
    METHODS get_persistence
      RETURNING
        VALUE(ri_persistence) TYPE REF TO if_wb_object_persist
      RAISING
        Lcx_abapgit_exception .
    METHODS clear_fields
      CHANGING
        !cg_data TYPE any .
    METHODS clear_field
      IMPORTING
        !iv_fieldname TYPE csequence
      CHANGING
        !cg_metadata  TYPE any .
endclass. "ZCL_ABAPGIT_OBJECT_DDLX definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_DEVC

*"* local type definitions
*include zcl_abapgit_object_devc=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_DEVC definition
*"* public declarations
*include zcl_abapgit_object_devc=======cu.
CLASS Lcl_abapgit_object_devc DEFINITION
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL.

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_object.

    METHODS:
      constructor IMPORTING is_item     TYPE Lif_abapgit_definitions=>ty_item
                            iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_devc=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_devc=======ci.
  PRIVATE SECTION.

    DATA mv_local_devclass TYPE devclass .

    METHODS get_package
      RETURNING
        VALUE(ri_package) TYPE REF TO if_package
      RAISING
        Lcx_abapgit_exception .
    METHODS update_pinf_usages
      IMPORTING
        !ii_package    TYPE REF TO if_package
        !it_usage_data TYPE scomppdata
      RAISING
        Lcx_abapgit_exception .
    METHODS set_lock
      IMPORTING
        !ii_package TYPE REF TO if_package
        !iv_lock    TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS unlock_and_raise_error
      IMPORTING
        !ii_package TYPE REF TO if_package
      RAISING
        Lcx_abapgit_exception .
    METHODS is_empty
      IMPORTING
        !iv_package_name   TYPE devclass
      RETURNING
        VALUE(rv_is_empty) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS load_package
      IMPORTING
        !iv_package_name  TYPE devclass
      RETURNING
        VALUE(ri_package) TYPE REF TO if_package
      RAISING
        Lcx_abapgit_exception .
    METHODS is_local
      IMPORTING
        !iv_package_name   TYPE devclass
      RETURNING
        VALUE(rv_is_local) TYPE abap_bool .
    METHODS remove_obsolete_tadir
      IMPORTING
        !iv_package_name TYPE devclass .
endclass. "ZCL_ABAPGIT_OBJECT_DEVC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_DIAL

*"* local type definitions
*include zcl_abapgit_object_dial=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_DIAL definition
*"* public declarations
*include zcl_abapgit_object_dial=======cu.
CLASS Lcl_abapgit_object_dial DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

*"* protected declarations
*include zcl_abapgit_object_dial=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_dial=======ci.
  PRIVATE SECTION.
    TYPES: BEGIN OF ty_dialog_module,
             tdct     TYPE tdct,
             dia_pars TYPE STANDARD TABLE OF diapar
                           WITH NON-UNIQUE DEFAULT KEY,
           END OF ty_dialog_module.

    METHODS:
      _read_tdct
        RETURNING
          VALUE(rs_tdct) TYPE tdct.

endclass. "ZCL_ABAPGIT_OBJECT_DIAL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_DOCT

*"* local type definitions
*include zcl_abapgit_object_doct=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_DOCT definition
*"* public declarations
*include zcl_abapgit_object_doct=======cu.
CLASS Lcl_abapgit_object_doct DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_doct=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_doct=======ci.
  PRIVATE SECTION.

    CONSTANTS c_id TYPE dokhl-id VALUE 'TX' ##NO_TEXT.
    CONSTANTS c_name TYPE string VALUE 'DOC' ##NO_TEXT.
    DATA mi_longtexts TYPE REF TO Lif_abapgit_longtexts .
endclass. "ZCL_ABAPGIT_OBJECT_DOCT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_DOCV

*"* local type definitions
*include zcl_abapgit_object_docv=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_DOCV definition
*"* public declarations
*include zcl_abapgit_object_docv=======cu.
CLASS Lcl_abapgit_object_docv DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        !is_item     TYPE Lif_abapgit_definitions=>ty_item
        !iv_language TYPE spras
      RAISING
        Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_object_docv=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_docv=======ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_data,
        doctitle TYPE dsyst-doktitle,
        head     TYPE thead,
        lines    TYPE tline_tab,
      END OF ty_data.

    CONSTANTS c_typ TYPE dokhl-typ VALUE 'E' ##NO_TEXT.
    CONSTANTS c_version TYPE dokhl-dokversion VALUE '0001' ##NO_TEXT.
    CONSTANTS c_name TYPE string VALUE 'DOC' ##NO_TEXT.

    DATA mv_id TYPE dokhl-id.
    DATA mv_doc_object TYPE dokhl-object.

    METHODS read
      RETURNING
        VALUE(rs_data) TYPE ty_data.
endclass. "ZCL_ABAPGIT_OBJECT_DOCV definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_DOMA

*"* local type definitions
*include zcl_abapgit_object_doma=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_DOMA definition
*"* public declarations
*include zcl_abapgit_object_doma=======cu.
CLASS Lcl_abapgit_object_doma DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_doma=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_doma=======ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_dd01_text,
        ddlanguage TYPE dd01v-ddlanguage,
        ddtext     TYPE dd01v-ddtext,
      END OF ty_dd01_text .
    TYPES:
      BEGIN OF ty_dd07_text,
        valpos     TYPE dd07v-valpos,
        ddlanguage TYPE dd07v-ddlanguage,
        domvalue_l TYPE dd07v-domvalue_l,
        domvalue_h TYPE dd07v-domvalue_h,
        ddtext     TYPE dd07v-ddtext,
        domval_ld  TYPE dd07v-domval_ld,
        domval_hd  TYPE dd07v-domval_hd,
      END OF ty_dd07_text .
    TYPES:
      ty_dd01_texts TYPE STANDARD TABLE OF ty_dd01_text .
    TYPES:
      ty_dd07_texts TYPE STANDARD TABLE OF ty_dd07_text .

    CONSTANTS c_longtext_id_doma TYPE dokil-id VALUE 'DO' ##NO_TEXT.

    METHODS serialize_texts
      IMPORTING
        !ii_xml   TYPE REF TO Lif_abapgit_xml_output
        !it_dd07v TYPE dd07v_tab
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_texts
      IMPORTING
        !ii_xml   TYPE REF TO Lif_abapgit_xml_input
        !is_dd01v TYPE dd01v
        !it_dd07v TYPE dd07v_tab
      RAISING
        Lcx_abapgit_exception .

    METHODS handle_dependencies
      IMPORTING
        !iv_step TYPE Lif_abapgit_definitions=>ty_deserialization_step
      CHANGING
        !cv_exit TYPE dd01v-convexit
        !cv_done TYPE abap_bool.

    METHODS adjust_exit
      CHANGING
        !cv_exit TYPE dd01v-convexit.

    METHODS check_exit
      IMPORTING
        !iv_exit       TYPE dd01v-convexit
      RETURNING
        VALUE(rv_done) TYPE abap_bool.

endclass. "ZCL_ABAPGIT_OBJECT_DOMA definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_DRUL

*"* local type definitions
*include zcl_abapgit_object_drul=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_DRUL definition
*"* public declarations
*include zcl_abapgit_object_drul=======cu.
CLASS Lcl_abapgit_object_drul DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras
        RAISING
          Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_object_drul=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_drul=======ci.
  PRIVATE SECTION.
    METHODS:
      clear_fields
        CHANGING
          cs_dependency_rule TYPE any,

      clear_field
        IMPORTING
          iv_fieldname       TYPE csequence
        CHANGING
          cs_dependency_rule TYPE any,

      fill_metadata_from_db
        CHANGING
          cs_dependency_rule TYPE any
        RAISING
          Lcx_abapgit_exception,

      get_wb_object_operator
        RETURNING
          VALUE(ri_wb_object_operator) TYPE REF TO object
        RAISING
          Lcx_abapgit_exception.

    DATA:
      mr_dependency_rule     TYPE REF TO data,
      mv_dependency_rule_key TYPE seu_objkey,
      mi_persistence         TYPE REF TO if_wb_object_persist,
      mi_wb_object_operator  TYPE REF TO object.
endclass. "ZCL_ABAPGIT_OBJECT_DRUL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_DSYS

*"* local type definitions
*include zcl_abapgit_object_dsys=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_DSYS definition
*"* public declarations
*include zcl_abapgit_object_dsys=======cu.
CLASS Lcl_abapgit_object_dsys DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        is_item     TYPE Lif_abapgit_definitions=>ty_item
        iv_language TYPE spras.

*"* protected declarations
*include zcl_abapgit_object_dsys=======co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_object_dsys=======ci.
  PRIVATE SECTION.

    CONSTANTS: c_typ TYPE dokhl-typ VALUE 'E',
               c_id  TYPE dokhl-id VALUE 'HY'.

    DATA: mv_doc_object  TYPE sobj_name.

    TYPES: BEGIN OF ty_data,
             doctitle TYPE dsyst-doktitle,
             head     TYPE thead,
             lines    TYPE tline_tab,
           END OF ty_data.

    METHODS deserialize_dsys
      IMPORTING
        ii_xml TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception.

    METHODS get_main_lang
      RETURNING
        VALUE(rv_language) TYPE spras.

endclass. "ZCL_ABAPGIT_OBJECT_DSYS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_DTDC

*"* local type definitions
*include zcl_abapgit_object_dtdc=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_DTDC definition
*"* public declarations
*include zcl_abapgit_object_dtdc=======cu.
CLASS Lcl_abapgit_object_dtdc DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras
        RAISING
          Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_object_dtdc=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_dtdc=======ci.
  PRIVATE SECTION.
    METHODS:
      clear_fields
        CHANGING
          cs_dynamic_cache TYPE any,

      clear_field
        IMPORTING
          iv_fieldname     TYPE csequence
        CHANGING
          cs_dynamic_cache TYPE any,

      fill_metadata_from_db
        CHANGING
          cs_dynamic_cache TYPE any
        RAISING
          Lcx_abapgit_exception,

      get_wb_object_operator
        RETURNING
          VALUE(ri_wb_object_operator) TYPE REF TO object
        RAISING
          Lcx_abapgit_exception,

      has_own_wb_data_class
        RETURNING
          VALUE(rv_supported) TYPE abap_bool.

    DATA:
      mr_dynamic_cache         TYPE REF TO data,
      mv_dynamic_cache_key     TYPE seu_objkey,
      mv_has_own_wb_data_class TYPE abap_bool,
      mi_persistence           TYPE REF TO if_wb_object_persist,
      mi_wb_object_operator    TYPE REF TO object.
endclass. "ZCL_ABAPGIT_OBJECT_DTDC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_DTEL

*"* local type definitions
*include zcl_abapgit_object_dtel=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_DTEL definition
*"* public declarations
*include zcl_abapgit_object_dtel=======cu.
CLASS Lcl_abapgit_object_dtel DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_dtel=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_dtel=======ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_dd04_text,
        ddlanguage TYPE dd04t-ddlanguage,
        ddtext     TYPE dd04t-ddtext,
        reptext    TYPE dd04t-reptext,
        scrtext_s  TYPE dd04t-scrtext_s,
        scrtext_m  TYPE dd04t-scrtext_m,
        scrtext_l  TYPE dd04t-scrtext_l,
      END OF ty_dd04_text .
    TYPES:
      ty_dd04_texts TYPE STANDARD TABLE OF ty_dd04_text .

    CONSTANTS c_longtext_id_dtel TYPE dokil-id VALUE 'DE' ##NO_TEXT.
    CONSTANTS c_longtext_id_dtel_suppl TYPE dokil-id VALUE 'DZ' ##NO_TEXT.

    METHODS serialize_texts
      IMPORTING
        !ii_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_texts
      IMPORTING
        !ii_xml   TYPE REF TO Lif_abapgit_xml_input
        !is_dd04v TYPE dd04v
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECT_DTEL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ECATT_SUPER

*"* local type definitions
*include zcl_abapgit_object_ecatt_superccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ECATT_SUPER definition
*"* public declarations
*include zcl_abapgit_object_ecatt_supercu.
CLASS Lcl_abapgit_object_ecatt_super DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  ABSTRACT
  CREATE PUBLIC


.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .

    METHODS:
      constructor
        IMPORTING
          !is_item     TYPE Lif_abapgit_definitions=>ty_item
          !iv_language TYPE spras .
*"* protected declarations
*include zcl_abapgit_object_ecatt_superco.
  PROTECTED SECTION.
    METHODS:
      get_object_type ABSTRACT
        RETURNING VALUE(rv_object_type) TYPE etobj_type,

      get_upload ABSTRACT
        RETURNING
          VALUE(ro_upload) TYPE REF TO cl_apl_ecatt_upload,

      get_download ABSTRACT
        RETURNING
          VALUE(ro_download) TYPE REF TO cl_apl_ecatt_download,

      get_lock_object ABSTRACT
        RETURNING
          VALUE(rv_lock_object) TYPE eqeobj.

*"* private declarations
*include zcl_abapgit_object_ecatt_superci.
  PRIVATE SECTION.
    TYPES:
      BEGIN OF ty_last_changed,
        luser TYPE syuname,
        ldate TYPE d,
        ltime TYPE t,
      END OF ty_last_changed.

    CONSTANTS:
      BEGIN OF c_name,
        version  TYPE string VALUE 'VERSION' ##NO_TEXT,
        versions TYPE string VALUE 'VERSIONS' ##NO_TEXT,
      END OF c_name,
      c_default_version TYPE etobj_ver VALUE '1' ##NO_TEXT.

    CLASS-METHODS:
      is_change_more_recent_than
        IMPORTING
          is_currently_changed            TYPE ty_last_changed
          is_last_changed                 TYPE ty_last_changed
        RETURNING
          VALUE(rv_is_change_more_recent) TYPE abap_bool.

    DATA:
      mv_object_name TYPE etobj_name.

    METHODS:
      get_changed_date
        IMPORTING
          ii_document            TYPE REF TO if_ixml_document
        RETURNING
          VALUE(rv_changed_date) TYPE d,

      get_changed_time
        IMPORTING
          ii_document            TYPE REF TO if_ixml_document
        RETURNING
          VALUE(rv_changed_time) TYPE t,

      get_changed_by_user
        IMPORTING
          ii_document               TYPE REF TO if_ixml_document
        RETURNING
          VALUE(rv_changed_by_user) TYPE syuname,

      get_change_information
        IMPORTING
          is_version_info              TYPE etversinfo
        RETURNING
          VALUE(rs_change_information) TYPE ty_last_changed
        RAISING
          cx_ecatt_apl
          Lcx_abapgit_exception,

      clear_attributes
        CHANGING
          ci_document TYPE REF TO if_ixml_document,

      clear_elements
        CHANGING
          ci_document TYPE REF TO if_ixml_document,

      get_version_from_node
        IMPORTING
          ii_node           TYPE REF TO if_ixml_node
        RETURNING
          VALUE(rv_version) TYPE string,

      deserialize_version
        IMPORTING
          ii_version_node TYPE REF TO if_ixml_node
          iv_package      TYPE devclass
        RAISING
          Lcx_abapgit_exception,

      serialize_version
        IMPORTING
          iv_version TYPE etversinfo-version
        CHANGING
          ci_node    TYPE REF TO if_ixml_element
        RAISING
          cx_ecatt
          Lcx_abapgit_exception,

      clear_element
        IMPORTING
          iv_name     TYPE csequence
        CHANGING
          ci_document TYPE REF TO if_ixml_document,

      clear_element_collection
        IMPORTING
          iv_name     TYPE csequence
        CHANGING
          ci_document TYPE REF TO if_ixml_document,

      serialize_versions
        IMPORTING
          it_version_info TYPE etversinfo_tabtype
        CHANGING
          ci_document     TYPE REF TO if_ixml_document
        RAISING
          cx_ecatt
          Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_OBJECT_ECATT_SUPER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ECSD

*"* local type definitions
*include zcl_abapgit_object_ecsd=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ECSD definition
*"* public declarations
*include zcl_abapgit_object_ecsd=======cu.
CLASS Lcl_abapgit_object_ecsd DEFINITION
*public
  INHERITING FROM Lcl_abapgit_object_ecatt_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
*"* protected declarations
*include zcl_abapgit_object_ecsd=======co.
  PROTECTED SECTION.
    METHODS:
      get_object_type REDEFINITION,
      get_upload REDEFINITION,
      get_download REDEFINITION,
      get_lock_object REDEFINITION.

*"* private declarations
*include zcl_abapgit_object_ecsd=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_ECSD definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ECSP

*"* local type definitions
*include zcl_abapgit_object_ecsp=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ECSP definition
*"* public declarations
*include zcl_abapgit_object_ecsp=======cu.
CLASS Lcl_abapgit_object_ecsp DEFINITION
*public
  INHERITING FROM Lcl_abapgit_object_ecatt_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
*"* protected declarations
*include zcl_abapgit_object_ecsp=======co.
  PROTECTED SECTION.
    METHODS:
      get_object_type REDEFINITION,
      get_upload REDEFINITION,
      get_download REDEFINITION,
      get_lock_object REDEFINITION.

*"* private declarations
*include zcl_abapgit_object_ecsp=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_ECSP definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ECTC

*"* local type definitions
*include zcl_abapgit_object_ectc=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ECTC definition
*"* public declarations
*include zcl_abapgit_object_ectc=======cu.
CLASS Lcl_abapgit_object_ectc DEFINITION
*public
  INHERITING FROM Lcl_abapgit_object_ecatt_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
*"* protected declarations
*include zcl_abapgit_object_ectc=======co.
  PROTECTED SECTION.
    METHODS:
      get_object_type REDEFINITION,
      get_upload REDEFINITION,
      get_download REDEFINITION,
      get_lock_object REDEFINITION.

*"* private declarations
*include zcl_abapgit_object_ectc=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_ECTC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ECTD

*"* local type definitions
*include zcl_abapgit_object_ectd=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ECTD definition
*"* public declarations
*include zcl_abapgit_object_ectd=======cu.
CLASS Lcl_abapgit_object_ectd DEFINITION
*public
  INHERITING FROM Lcl_abapgit_object_ecatt_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
*"* protected declarations
*include zcl_abapgit_object_ectd=======co.
  PROTECTED SECTION.
    METHODS:
      get_object_type REDEFINITION,
      get_upload REDEFINITION,
      get_download REDEFINITION,
      get_lock_object REDEFINITION.

*"* private declarations
*include zcl_abapgit_object_ectd=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_ECTD definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ECVO

*"* local type definitions
*include zcl_abapgit_object_ecvo=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ECVO definition
*"* public declarations
*include zcl_abapgit_object_ecvo=======cu.
CLASS Lcl_abapgit_object_ecvo DEFINITION
*public
  INHERITING FROM Lcl_abapgit_object_ecatt_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
*"* protected declarations
*include zcl_abapgit_object_ecvo=======co.
  PROTECTED SECTION.
    METHODS:
      get_object_type REDEFINITION,
      get_upload REDEFINITION,
      get_download REDEFINITION,
      get_lock_object REDEFINITION.

*"* private declarations
*include zcl_abapgit_object_ecvo=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_ECVO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_EEEC

*"* local type definitions
*include zcl_abapgit_object_eeec=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_EEEC definition
*"* public declarations
*include zcl_abapgit_object_eeec=======cu.
CLASS Lcl_abapgit_object_eeec DEFINITION
*public
  INHERITING FROM Lcl_abapgit_object_common_aff
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    METHODS:
      Lif_abapgit_object~changed_by REDEFINITION .

*"* protected declarations
*include zcl_abapgit_object_eeec=======co.
  PROTECTED SECTION.
    METHODS: get_object_handler REDEFINITION.
*"* private declarations
*include zcl_abapgit_object_eeec=======ci.
private section.
endclass. "ZCL_ABAPGIT_OBJECT_EEEC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ENHC

*"* local type definitions
*include zcl_abapgit_object_enhc=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ENHC definition
*"* public declarations
*include zcl_abapgit_object_enhc=======cu.
CLASS Lcl_abapgit_object_enhc DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_enhc=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_enhc=======ci.
  PRIVATE SECTION.
    DATA:
      mv_composite_id TYPE enhcompositename.

endclass. "ZCL_ABAPGIT_OBJECT_ENHC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ENHO

*"* local type definitions
*include zcl_abapgit_object_enho=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ENHO definition
*"* public declarations
*include zcl_abapgit_object_enho=======cu.
CLASS Lcl_abapgit_object_enho DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_enho=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_enho=======ci.
  PRIVATE SECTION.

    METHODS:
      factory
        IMPORTING
          iv_tool        TYPE enhtooltype
        RETURNING
          VALUE(ri_enho) TYPE REF TO Lif_abapgit_object_enho
        RAISING
          Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_ENHO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ENHO_BADI

*"* local type definitions
*include zcl_abapgit_object_enho_badi==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ENHO_BADI definition
*"* public declarations
*include zcl_abapgit_object_enho_badi==cu.
CLASS Lcl_abapgit_object_enho_badi DEFINITION .

  PUBLIC SECTION.
    METHODS: constructor
      IMPORTING
        is_item TYPE Lif_abapgit_definitions=>ty_item.
    INTERFACES: Lif_abapgit_object_enho.

*"* protected declarations
*include zcl_abapgit_object_enho_badi==co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_enho_badi==ci.
  PRIVATE SECTION.
    DATA: ms_item  TYPE Lif_abapgit_definitions=>ty_item.

endclass. "ZCL_ABAPGIT_OBJECT_ENHO_BADI definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ENHO_CLASS

*"* local type definitions
*include zcl_abapgit_object_enho_class=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ENHO_CLASS definition
*"* public declarations
*include zcl_abapgit_object_enho_class=cu.
CLASS Lcl_abapgit_object_enho_class DEFINITION .

  PUBLIC SECTION.
    METHODS:
      constructor
        IMPORTING
          is_item  TYPE Lif_abapgit_definitions=>ty_item
          io_files TYPE REF TO Lcl_abapgit_objects_files.
    INTERFACES: Lif_abapgit_object_enho.

*"* protected declarations
*include zcl_abapgit_object_enho_class=co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_enho_class=ci.
  PRIVATE SECTION.
    METHODS:
      serialize_includes
        IMPORTING
          io_class TYPE REF TO cl_enh_tool_class
        RAISING
          Lcx_abapgit_exception,
      deserialize_includes
        IMPORTING
          ii_xml   TYPE REF TO Lif_abapgit_xml_input
          io_class TYPE REF TO cl_enh_tool_class
        RAISING
          Lcx_abapgit_exception.

    DATA: ms_item TYPE Lif_abapgit_definitions=>ty_item.
    DATA: mo_files TYPE REF TO Lcl_abapgit_objects_files.

endclass. "ZCL_ABAPGIT_OBJECT_ENHO_CLASS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ENHO_FUGR

*"* local type definitions
*include zcl_abapgit_object_enho_fugr==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ENHO_FUGR definition
*"* public declarations
*include zcl_abapgit_object_enho_fugr==cu.
CLASS Lcl_abapgit_object_enho_fugr DEFINITION .

  PUBLIC SECTION.
    METHODS: constructor
      IMPORTING
        is_item  TYPE Lif_abapgit_definitions=>ty_item
        io_files TYPE REF TO Lcl_abapgit_objects_files.
    INTERFACES: Lif_abapgit_object_enho.

*"* protected declarations
*include zcl_abapgit_object_enho_fugr==co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_enho_fugr==ci.
  PRIVATE SECTION.
    DATA: ms_item  TYPE Lif_abapgit_definitions=>ty_item,
          mo_files TYPE REF TO Lcl_abapgit_objects_files.

endclass. "ZCL_ABAPGIT_OBJECT_ENHO_FUGR definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ENHO_HOOK

*"* local type definitions
*include zcl_abapgit_object_enho_hook==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ENHO_HOOK definition
*"* public declarations
*include zcl_abapgit_object_enho_hook==cu.
CLASS Lcl_abapgit_object_enho_hook DEFINITION .
  PUBLIC SECTION.
    METHODS: constructor
      IMPORTING
        is_item  TYPE Lif_abapgit_definitions=>ty_item
        io_files TYPE REF TO Lcl_abapgit_objects_files.

    INTERFACES: Lif_abapgit_object_enho.

*"* protected declarations
*include zcl_abapgit_object_enho_hook==co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_enho_hook==ci.
  PRIVATE SECTION.
    TYPES: BEGIN OF ty_spaces,
             full_name TYPE string,
             spaces    TYPE STANDARD TABLE OF i WITH DEFAULT KEY,
           END OF ty_spaces.

    TYPES: ty_spaces_tt TYPE STANDARD TABLE OF ty_spaces WITH DEFAULT KEY.

    TYPES: BEGIN OF ty_file,
             name TYPE string,
             file TYPE string,
           END OF ty_file.

    TYPES: ty_files TYPE HASHED TABLE OF ty_file WITH UNIQUE KEY name.

    CONSTANTS c_enhancement TYPE string VALUE 'ENHANCEMENT 0 *.' ##NO_TEXT.
    CONSTANTS c_endenhancement TYPE string VALUE 'ENDENHANCEMENT.' ##NO_TEXT.

    DATA: ms_item TYPE Lif_abapgit_definitions=>ty_item.
    DATA: mo_files TYPE REF TO Lcl_abapgit_objects_files.

    METHODS add_sources
      CHANGING
        !ct_enhancements TYPE enh_hook_impl_it
        !ct_files        TYPE ty_files
      RAISING
        Lcx_abapgit_exception .
    METHODS read_sources
      CHANGING
        !ct_enhancements TYPE enh_hook_impl_it
        !ct_files        TYPE ty_files
      RAISING
        Lcx_abapgit_exception .
    METHODS hook_impl_deserialize
      IMPORTING
        !it_spaces TYPE ty_spaces_tt
      CHANGING
        !ct_impl   TYPE enh_hook_impl_it
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECT_ENHO_HOOK definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ENHO_INTF

*"* local type definitions
*include zcl_abapgit_object_enho_intf==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ENHO_INTF definition
*"* public declarations
*include zcl_abapgit_object_enho_intf==cu.
CLASS Lcl_abapgit_object_enho_intf DEFINITION .

  PUBLIC SECTION.
    METHODS:
      constructor
        IMPORTING
          is_item  TYPE Lif_abapgit_definitions=>ty_item
          io_files TYPE REF TO Lcl_abapgit_objects_files.
    INTERFACES: Lif_abapgit_object_enho.

*"* protected declarations
*include zcl_abapgit_object_enho_intf==co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_enho_intf==ci.
  PRIVATE SECTION.
    DATA: ms_item  TYPE Lif_abapgit_definitions=>ty_item,
          mo_files TYPE REF TO Lcl_abapgit_objects_files.

endclass. "ZCL_ABAPGIT_OBJECT_ENHO_INTF definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ENHO_WDYC

*"* local type definitions
*include zcl_abapgit_object_enho_wdyc==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ENHO_WDYC definition
*"* public declarations
*include zcl_abapgit_object_enho_wdyc==cu.
CLASS Lcl_abapgit_object_enho_wdyc DEFINITION .

  PUBLIC SECTION.
    METHODS: constructor
      IMPORTING
        is_item TYPE Lif_abapgit_definitions=>ty_item.
    INTERFACES: Lif_abapgit_object_enho.

*"* protected declarations
*include zcl_abapgit_object_enho_wdyc==co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_enho_wdyc==ci.
  PRIVATE SECTION.
    DATA: ms_item  TYPE Lif_abapgit_definitions=>ty_item.

endclass. "ZCL_ABAPGIT_OBJECT_ENHO_WDYC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ENHO_WDYN

*"* local type definitions
*include zcl_abapgit_object_enho_wdyn==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ENHO_WDYN definition
*"* public declarations
*include zcl_abapgit_object_enho_wdyn==cu.
CLASS Lcl_abapgit_object_enho_wdyn DEFINITION .

  PUBLIC SECTION.
    METHODS: constructor
      IMPORTING
        is_item TYPE Lif_abapgit_definitions=>ty_item.
    INTERFACES: Lif_abapgit_object_enho.

*"* protected declarations
*include zcl_abapgit_object_enho_wdyn==co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_enho_wdyn==ci.
  PRIVATE SECTION.
    DATA: ms_item  TYPE Lif_abapgit_definitions=>ty_item.

endclass. "ZCL_ABAPGIT_OBJECT_ENHO_WDYN definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ENHS

*"* local type definitions
*include zcl_abapgit_object_enhs=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ENHS definition
*"* public declarations
*include zcl_abapgit_object_enhs=======cu.
CLASS Lcl_abapgit_object_enhs DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_enhs=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_enhs=======ci.
  PRIVATE SECTION.
    METHODS:
      factory
        IMPORTING
          iv_tool        TYPE enhtooltype
        RETURNING
          VALUE(ri_enho) TYPE REF TO Lif_abapgit_object_enhs
        RAISING
          Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_ENHS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ENQU

*"* local type definitions
*include zcl_abapgit_object_enqu=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ENQU definition
*"* public declarations
*include zcl_abapgit_object_enqu=======cu.
CLASS Lcl_abapgit_object_enqu DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_enqu=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_enqu=======ci.
  PRIVATE SECTION.
    TYPES: ty_dd27p TYPE STANDARD TABLE OF dd27p WITH DEFAULT KEY.
    METHODS _clear_dd27p_fields CHANGING ct_dd27p TYPE ty_dd27p.

endclass. "ZCL_ABAPGIT_OBJECT_ENQU definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ENSC

*"* local type definitions
*include zcl_abapgit_object_ensc=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ENSC definition
*"* public declarations
*include zcl_abapgit_object_ensc=======cu.
CLASS Lcl_abapgit_object_ensc DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.
  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_ensc=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_ensc=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_ENSC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_EVTB

*"* local type definitions
*include zcl_abapgit_object_evtb=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_EVTB definition
*"* public declarations
*include zcl_abapgit_object_evtb=======cu.
CLASS Lcl_abapgit_object_evtb DEFINITION
*public
  INHERITING FROM Lcl_abapgit_object_common_aff
  CREATE PUBLIC.

  PUBLIC SECTION.
    METHODS Lif_abapgit_object~changed_by REDEFINITION .


*"* protected declarations
*include zcl_abapgit_object_evtb=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_evtb=======ci.
  PRIVATE SECTION.
    CONSTANTS:
      c_table_name TYPE tabname VALUE 'EVTB_HEADER'.
endclass. "ZCL_ABAPGIT_OBJECT_EVTB definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_FDT0

*"* local type definitions
*include zcl_abapgit_object_fdt0=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_FDT0 definition
*"* public declarations
*include zcl_abapgit_object_fdt0=======cu.
CLASS Lcl_abapgit_object_fdt0 DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_fdt0=======co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_object_fdt0=======ci.
  PRIVATE SECTION.

    METHODS check_is_local
      RETURNING
        VALUE(rv_is_local) TYPE abap_bool .
    METHODS get_application_id
      RETURNING
        VALUE(rv_application_id) TYPE fdt_admn_0000s-application_id .
    METHODS before_xml_deserialize
      IMPORTING
        !iv_package  TYPE devclass
      EXPORTING
        !ev_create   TYPE abap_bool
        !ev_is_local TYPE abap_bool
      CHANGING
        !co_dom_tree TYPE REF TO if_ixml_document
      RAISING
        Lcx_abapgit_exception .
    METHODS filter_xml_serialize
      CHANGING
        !co_ixml_element TYPE REF TO if_ixml_element
      RAISING
        Lcx_abapgit_exception .
    METHODS set_field
      IMPORTING
        !iv_name         TYPE string
        !iv_value        TYPE string DEFAULT ''
      CHANGING
        !co_ixml_element TYPE REF TO if_ixml_element
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECT_FDT0 definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_FILTER_TRAN

*"* local type definitions
*include zcl_abapgit_object_filter_tranccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_FILTER_TRAN definition
*"* public declarations
*include zcl_abapgit_object_filter_trancu.
CLASS Lcl_abapgit_object_filter_tran DEFINITION
*public
  CREATE PUBLIC.


  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object_filter.

    METHODS set_filter_values
      IMPORTING
        iv_package  TYPE tadir-devclass
        it_r_trkorr TYPE Lif_abapgit_definitions=>ty_trrngtrkor_tt
      RAISING
        Lcx_abapgit_exception .

    METHODS get_filter_values
      EXPORTING
        ev_package  TYPE tadir-devclass
        et_r_trkorr TYPE Lif_abapgit_definitions=>ty_trrngtrkor_tt.

*"* protected declarations
*include zcl_abapgit_object_filter_tranco.
  PROTECTED SECTION.
    TYPES: BEGIN OF ty_e071_filter,
             pgmid    TYPE tadir-pgmid,
             object   TYPE tadir-object,
             obj_name TYPE trobj_name,
           END OF ty_e071_filter,
           ty_e071_filter_tt TYPE STANDARD TABLE OF ty_e071_filter.

    METHODS adjust_local_filter
      IMPORTING
                it_e071_filter   TYPE ty_e071_filter_tt
                iv_package       TYPE tadir-devclass
      RETURNING VALUE(rt_filter) TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RAISING
                Lcx_abapgit_exception.

*"* private declarations
*include zcl_abapgit_object_filter_tranci.
  PRIVATE SECTION.

    DATA mt_filter TYPE Lif_abapgit_definitions=>ty_tadir_tt .
    DATA mt_r_trkorr TYPE Lif_abapgit_definitions=>ty_trrngtrkor_tt .
    DATA mv_package TYPE tadir-devclass.

    METHODS generate_local_filter
      IMPORTING
        iv_package       TYPE tadir-devclass
        it_r_trkorr      TYPE Lif_abapgit_definitions=>ty_trrngtrkor_tt
      RETURNING
        VALUE(rt_filter) TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RAISING
        Lcx_abapgit_exception .

    METHODS init .

    METHODS get_all_sub_packages
      IMPORTING
        iv_package       TYPE tadir-devclass
      RETURNING
        VALUE(rt_filter) TYPE Lif_abapgit_definitions=>ty_tadir_tt.
endclass. "ZCL_ABAPGIT_OBJECT_FILTER_TRAN definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_FORM

*"* local type definitions
*include zcl_abapgit_object_form=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_FORM definition
*"* public declarations
*include zcl_abapgit_object_form=======cu.
CLASS Lcl_abapgit_object_form DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        is_item     TYPE Lif_abapgit_definitions=>ty_item
        iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_form=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_form=======ci.
  PRIVATE SECTION.
    CONSTANTS: c_objectname_form    TYPE thead-tdobject VALUE 'FORM' ##NO_TEXT.
    CONSTANTS: c_objectname_tdlines TYPE thead-tdobject VALUE 'TDLINES' ##NO_TEXT.
    CONSTANTS: c_extension_xml      TYPE string         VALUE 'xml' ##NO_TEXT.
    DATA: mv_form_name  TYPE itcta-tdform.

    TYPES: BEGIN OF ty_s_form_data,
             form_header   TYPE itcta,
             text_header   TYPE thead,
             orig_language TYPE sy-langu,
             pages         TYPE STANDARD TABLE OF itctg WITH DEFAULT KEY,
             page_windows  TYPE STANDARD TABLE OF itcth WITH DEFAULT KEY,
             paragraphs    TYPE STANDARD TABLE OF itcdp WITH DEFAULT KEY,
             strings       TYPE STANDARD TABLE OF itcds WITH DEFAULT KEY,
             tabs          TYPE STANDARD TABLE OF itcdq WITH DEFAULT KEY,
             windows       TYPE STANDARD TABLE OF itctw WITH DEFAULT KEY,
           END OF ty_s_form_data,
           ty_t_form_data   TYPE STANDARD TABLE OF ty_s_form_data WITH DEFAULT KEY,
           ty_t_form_header TYPE STANDARD TABLE OF itcta WITH DEFAULT KEY,
           ty_s_form_header TYPE LINE OF ty_t_form_header,
           ty_t_text_header TYPE STANDARD TABLE OF thead WITH DEFAULT KEY,
           ty_s_text_header TYPE LINE OF ty_t_text_header,
           ty_t_lines       TYPE tline_tab.

    METHODS get_last_changes
      IMPORTING
        iv_form_name           TYPE Lif_abapgit_definitions=>ty_item-obj_name
      RETURNING
        VALUE(rs_last_changed) TYPE ty_s_form_header.

    METHODS build_extra_from_header
      IMPORTING
        is_header        TYPE ty_s_form_header
      RETURNING
        VALUE(rv_result) TYPE string.

    METHODS build_extra_from_header_old
      IMPORTING
        is_header        TYPE ty_s_form_header
      RETURNING
        VALUE(rv_result) TYPE string.

    METHODS _save_form
      IMPORTING
        it_lines     TYPE ty_t_lines
      CHANGING
        cs_form_data TYPE ty_s_form_data.

    METHODS extract_tdlines
      IMPORTING
        is_form_data    TYPE ty_s_form_data
      RETURNING
        VALUE(rt_lines) TYPE ty_t_lines
      RAISING
        Lcx_abapgit_exception.

    METHODS _clear_changed_fields
      CHANGING
        cs_form_data TYPE ty_s_form_data.

    METHODS compress_lines
      IMPORTING
        is_form_data TYPE ty_s_form_data
        it_lines     TYPE ty_t_lines
      RAISING
        Lcx_abapgit_exception.

    METHODS find_form
      IMPORTING
        iv_object_name        TYPE Lif_abapgit_definitions=>ty_item-obj_name
      RETURNING
        VALUE(rt_text_header) TYPE ty_t_text_header.

    METHODS _read_form
      IMPORTING
        is_text_header TYPE ty_s_text_header
      EXPORTING
        ev_form_found  TYPE abap_bool
        es_form_data   TYPE ty_s_form_data
        et_lines       TYPE ty_t_lines.

    METHODS _sort_tdlines_by_windows
      CHANGING
        ct_form_windows TYPE ty_s_form_data-windows
        ct_lines        TYPE ty_t_lines.

    METHODS order_check_and_insert
      RAISING
        Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_OBJECT_FORM definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_FTGL

*"* local type definitions
*include zcl_abapgit_object_ftgl=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_FTGL definition
*"* public declarations
*include zcl_abapgit_object_ftgl=======cu.
CLASS Lcl_abapgit_object_ftgl DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras
        RAISING
          Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_object_ftgl=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_ftgl=======ci.
  PRIVATE SECTION.
    DATA:
      mv_toggle_id TYPE c LENGTH 40, "sftgl_ft_id
      mr_toggle    TYPE REF TO data.

    METHODS:
      clear_field
        IMPORTING
          iv_fieldname TYPE string
        CHANGING
          cg_header    TYPE any.

endclass. "ZCL_ABAPGIT_OBJECT_FTGL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_G4BA

*"* local type definitions
*include zcl_abapgit_object_g4ba=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_G4BA definition
*"* public declarations
*include zcl_abapgit_object_g4ba=======cu.
CLASS Lcl_abapgit_object_g4ba DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_g4ba=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_g4ba=======ci.
  PRIVATE SECTION.

    METHODS get_generic
      RETURNING
        VALUE(ro_generic) TYPE REF TO Lcl_abapgit_objects_generic
      RAISING
        Lcx_abapgit_exception .
    METHODS get_field_rules
      RETURNING
        VALUE(ro_result) TYPE REF TO Lif_abapgit_field_rules.
endclass. "ZCL_ABAPGIT_OBJECT_G4BA definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_G4BS

*"* local type definitions
*include zcl_abapgit_object_g4bs=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_G4BS definition
*"* public declarations
*include zcl_abapgit_object_g4bs=======cu.
CLASS Lcl_abapgit_object_g4bs DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_g4bs=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_g4bs=======ci.
  PRIVATE SECTION.

    METHODS get_generic
      RETURNING
        VALUE(ro_generic) TYPE REF TO Lcl_abapgit_objects_generic
      RAISING
        Lcx_abapgit_exception .
    METHODS get_field_rules
      RETURNING
        VALUE(ro_result) TYPE REF TO Lif_abapgit_field_rules.
endclass. "ZCL_ABAPGIT_OBJECT_G4BS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_GSMP

*"* local type definitions
*include zcl_abapgit_object_gsmp=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_GSMP definition
*"* public declarations
*include zcl_abapgit_object_gsmp=======cu.
CLASS Lcl_abapgit_object_gsmp DEFINITION
*public
    INHERITING FROM Lcl_abapgit_object_common_aff
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    METHODS Lif_abapgit_object~changed_by REDEFINITION.
*"* protected declarations
*include zcl_abapgit_object_gsmp=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_gsmp=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_GSMP definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_IAMU

*"* local type definitions
*include zcl_abapgit_object_iamu=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_IAMU definition
*"* public declarations
*include zcl_abapgit_object_iamu=======cu.
CLASS Lcl_abapgit_object_iamu DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_iamu=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_iamu=======ci.
  PRIVATE SECTION.
    TYPES: BEGIN OF ty_internet_appl_comp_binary,
             attributes TYPE w3mimeattr,
             source     TYPE w3mimetabtype,
             length     TYPE i,
             extension  TYPE string,
           END OF ty_internet_appl_comp_binary.

    DATA: mi_mime_api TYPE REF TO if_w3_api_mime.

    METHODS:
      get_extension
        IMPORTING
          iv_name             TYPE csequence
          iv_data             TYPE xstring
        RETURNING
          VALUE(rv_extension) TYPE string,

      load_mime_api
        RAISING
          Lcx_abapgit_exception,

      read
        RETURNING
          VALUE(rs_internet_appl_comp_binary) TYPE ty_internet_appl_comp_binary
        RAISING
          Lcx_abapgit_exception,

      save
        IMPORTING
          is_internet_appl_comp_binary TYPE ty_internet_appl_comp_binary
        RAISING
          Lcx_abapgit_exception,

      lock
        IMPORTING
          iv_changable TYPE abap_bool
        RAISING
          Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_IAMU definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_IARP

*"* local type definitions
*include zcl_abapgit_object_iarp=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_IARP definition
*"* public declarations
*include zcl_abapgit_object_iarp=======cu.
CLASS Lcl_abapgit_object_iarp DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING is_item     TYPE Lif_abapgit_definitions=>ty_item
                  iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_iarp=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_iarp=======ci.
  PRIVATE SECTION.
    DATA:
      ms_name     TYPE w3resokey.

    METHODS:
      read
        EXPORTING es_attributes TYPE w3resoattr
                  et_parameters TYPE w3resopara_tabletype
        RAISING   Lcx_abapgit_exception,

      save
        IMPORTING is_attributes TYPE w3resoattr
                  it_parameters TYPE w3resopara_tabletype
        RAISING   Lcx_abapgit_exception,

      w3_api_load
        RETURNING VALUE(ri_resource) TYPE REF TO if_w3_api_resource
        RAISING   Lcx_abapgit_exception,

      w3_api_get_attributes
        IMPORTING ii_resource          TYPE REF TO if_w3_api_resource
        RETURNING VALUE(rs_attributes) TYPE w3resoattr
        RAISING   Lcx_abapgit_exception,

      w3_api_get_parameters
        IMPORTING ii_resource          TYPE REF TO if_w3_api_resource
        RETURNING VALUE(rt_parameters) TYPE w3resopara_tabletype
        RAISING   Lcx_abapgit_exception,

      w3_api_create_new
        IMPORTING is_attributes      TYPE w3resoattr
        RETURNING VALUE(ri_resource) TYPE REF TO if_w3_api_resource
        RAISING   Lcx_abapgit_exception,

      w3_api_set_attributes
        IMPORTING ii_resource   TYPE REF TO if_w3_api_resource
                  is_attributes TYPE w3resoattr
        RAISING   Lcx_abapgit_exception,

      w3_api_set_parameters
        IMPORTING ii_resource   TYPE REF TO if_w3_api_resource
                  it_parameters TYPE w3resopara_tabletype
        RAISING   Lcx_abapgit_exception,

      w3_api_save
        IMPORTING ii_resource TYPE REF TO if_w3_api_resource
        RAISING   Lcx_abapgit_exception,

      w3_api_set_changeable
        IMPORTING ii_resource   TYPE REF TO if_w3_api_resource
                  iv_changeable TYPE abap_bool DEFAULT abap_true
        RAISING   Lcx_abapgit_exception,

      w3_api_delete
        IMPORTING ii_resource TYPE REF TO if_w3_api_resource
        RAISING   Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_IARP definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_IASP

*"* local type definitions
*include zcl_abapgit_object_iasp=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_IASP definition
*"* public declarations
*include zcl_abapgit_object_iasp=======cu.
CLASS Lcl_abapgit_object_iasp DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_iasp=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_iasp=======ci.
  PRIVATE SECTION.
    DATA:
      mv_name    TYPE itsappl.

    METHODS:
      read
        EXPORTING es_attr       TYPE w3servattr
                  et_parameters TYPE w3servpara_tabletype
        RAISING   Lcx_abapgit_exception,

      save
        IMPORTING is_attr       TYPE w3servattr
                  it_parameters TYPE w3servpara_tabletype
        RAISING   Lcx_abapgit_exception,

      w3_api_load
        RETURNING VALUE(ri_service) TYPE REF TO if_w3_api_service
        RAISING   Lcx_abapgit_exception,

      w3_api_get_attributes
        IMPORTING ii_service           TYPE REF TO if_w3_api_service
        RETURNING VALUE(rs_attributes) TYPE w3servattr,

      w3_api_get_parameters
        IMPORTING ii_service           TYPE REF TO if_w3_api_service
        RETURNING VALUE(rt_parameters) TYPE w3servpara_tabletype,

      w3_api_create_new
        IMPORTING is_attributes     TYPE w3servattr
        RETURNING VALUE(ri_service) TYPE REF TO if_w3_api_service
        RAISING   Lcx_abapgit_exception,

      w3_api_set_attributes
        IMPORTING ii_service    TYPE REF TO if_w3_api_service
                  is_attributes TYPE w3servattr
        RAISING   Lcx_abapgit_exception,

      w3_api_set_parameters
        IMPORTING ii_service    TYPE REF TO if_w3_api_service
                  it_parameters TYPE w3servpara_tabletype
        RAISING   Lcx_abapgit_exception,

      w3_api_save
        IMPORTING ii_service TYPE REF TO if_w3_api_service
        RAISING   Lcx_abapgit_exception,

      w3_api_set_changeable
        IMPORTING ii_service    TYPE REF TO if_w3_api_service
                  iv_changeable TYPE abap_bool DEFAULT abap_true
        RAISING   Lcx_abapgit_exception,

      w3_api_delete
        IMPORTING ii_service TYPE REF TO if_w3_api_service
        RAISING   Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_IASP definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_IATU

*"* local type definitions
*include zcl_abapgit_object_iatu=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_IATU definition
*"* public declarations
*include zcl_abapgit_object_iatu=======cu.
CLASS Lcl_abapgit_object_iatu DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_iatu=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_iatu=======ci.
  PRIVATE SECTION.
    METHODS:
      read
        EXPORTING es_attr   TYPE w3tempattr
                  ev_source TYPE string
        RAISING   Lcx_abapgit_exception,
      save
        IMPORTING
                  is_attr   TYPE w3tempattr
                  iv_source TYPE string
        RAISING   Lcx_abapgit_exception,
      w3_api_load
        IMPORTING is_name            TYPE iacikeyt
        RETURNING VALUE(ri_template) TYPE REF TO if_w3_api_template
        RAISING   Lcx_abapgit_exception,
      w3_api_set_changeable
        IMPORTING iv_changeable TYPE abap_bool
                  ii_template   TYPE REF TO if_w3_api_template
        RAISING   Lcx_abapgit_exception,
      w3_api_delete
        IMPORTING ii_template TYPE REF TO if_w3_api_template
        RAISING   Lcx_abapgit_exception,
      w3_api_save
        IMPORTING ii_template TYPE REF TO if_w3_api_template
        RAISING   Lcx_abapgit_exception,
      w3_api_get_attributes
        IMPORTING ii_template          TYPE REF TO if_w3_api_template
        RETURNING VALUE(rs_attributes) TYPE w3tempattr
        RAISING   Lcx_abapgit_exception,
      w3_api_get_source
        IMPORTING ii_template      TYPE REF TO if_w3_api_template
        RETURNING VALUE(rt_source) TYPE w3htmltabtype
        RAISING   Lcx_abapgit_exception,
      w3_api_create_new
        IMPORTING is_template_data   TYPE w3tempattr
        RETURNING VALUE(ri_template) TYPE REF TO if_w3_api_template
        RAISING   Lcx_abapgit_exception,
      w3_api_set_attributes
        IMPORTING ii_template TYPE REF TO if_w3_api_template
                  is_attr     TYPE w3tempattr
        RAISING   Lcx_abapgit_exception,
      w3_api_set_source
        IMPORTING ii_template TYPE REF TO if_w3_api_template
                  it_source   TYPE w3htmltabtype
        RAISING   Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_IATU definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_IAXU

*"* local type definitions
*include zcl_abapgit_object_iaxu=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_IAXU definition
*"* public declarations
*include zcl_abapgit_object_iaxu=======cu.
CLASS Lcl_abapgit_object_iaxu DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

*"* protected declarations
*include zcl_abapgit_object_iaxu=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_iaxu=======ci.
  PRIVATE SECTION.
    DATA: mv_source_style_2006 TYPE w3style VALUE 'XML',
          mv_generator_class   TYPE w3styleclass VALUE 'CL_ITS_GENERATE_XML3'.

    METHODS:
      read
        RETURNING VALUE(rs_attr) TYPE w3tempattr
        RAISING   Lcx_abapgit_exception,
      save
        IMPORTING is_attr TYPE w3tempattr
        RAISING   Lcx_abapgit_exception,
      w3_api_load
        IMPORTING is_name    TYPE iacikeyt
        EXPORTING eo_xml_api TYPE REF TO object
                  es_attr    TYPE w3tempattr
        RAISING   Lcx_abapgit_exception,
      w3_api_set_changeable
        IMPORTING io_xml_api    TYPE REF TO object
                  iv_changeable TYPE abap_bool
        RAISING   Lcx_abapgit_exception,
      w3_api_delete
        IMPORTING io_xml_api TYPE REF TO object
        RAISING   Lcx_abapgit_exception,
      w3_api_save
        IMPORTING io_xml_api TYPE REF TO object
        RAISING   Lcx_abapgit_exception,
      w3_api_create_new
        IMPORTING is_attr           TYPE w3tempattr
        RETURNING VALUE(ro_xml_api) TYPE REF TO object
        RAISING   Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_IAXU definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_IDOC

*"* local type definitions
*include zcl_abapgit_object_idoc=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_IDOC definition
*"* public declarations
*include zcl_abapgit_object_idoc=======cu.
CLASS Lcl_abapgit_object_idoc DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras.
    CLASS-METHODS clear_idoc_segement_fields CHANGING cg_structure TYPE any.
*"* protected declarations
*include zcl_abapgit_object_idoc=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_idoc=======ci.
  PRIVATE SECTION.
    TYPES:
      BEGIN OF ty_idoc,
        attributes TYPE edi_iapi01,
        t_syntax   TYPE STANDARD TABLE OF edi_iapi02 WITH NON-UNIQUE DEFAULT KEY,
      END OF ty_idoc.

    DATA: mv_idoctyp TYPE edi_iapi00-idoctyp.

    CLASS-METHODS clear_idoc_segement_field
      IMPORTING iv_fieldname TYPE csequence
      CHANGING  cg_structure TYPE any.

    METHODS is_closed
      RETURNING
        VALUE(rv_closed) TYPE abap_bool.
endclass. "ZCL_ABAPGIT_OBJECT_IDOC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_IEXT

*"* local type definitions
*include zcl_abapgit_object_iext=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_IEXT definition
*"* public declarations
*include zcl_abapgit_object_iext=======cu.
CLASS Lcl_abapgit_object_iext DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_iext=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_iext=======ci.
  PRIVATE SECTION.
    TYPES: BEGIN OF ty_extention,
             attributes TYPE edi_iapi01,
             t_syntax   TYPE STANDARD TABLE OF edi_iapi03 WITH NON-UNIQUE DEFAULT KEY,
           END OF ty_extention.

    CONSTANTS c_dataname_iext TYPE string VALUE 'IEXT' ##NO_TEXT.
    DATA: mv_extension TYPE edi_cimtyp.

endclass. "ZCL_ABAPGIT_OBJECT_IEXT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_IOBJ

*"* local type definitions
*include zcl_abapgit_object_iobj=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_IOBJ definition
*"* public declarations
*include zcl_abapgit_object_iobj=======cu.
CLASS Lcl_abapgit_object_iobj DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_iobj=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_iobj=======ci.
  PRIVATE SECTION.
    METHODS:
      clear_field
        IMPORTING
          iv_fieldname TYPE string
        CHANGING
          cg_metadata  TYPE any.

endclass. "ZCL_ABAPGIT_OBJECT_IOBJ definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_IWMO

*"* local type definitions
*include zcl_abapgit_object_iwmo=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_IWMO definition
*"* public declarations
*include zcl_abapgit_object_iwmo=======cu.
CLASS Lcl_abapgit_object_iwmo DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_iwmo=======co.
  PROTECTED SECTION.

    METHODS get_generic
      RETURNING
        VALUE(ro_generic) TYPE REF TO Lcl_abapgit_objects_generic
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_object_iwmo=======ci.
  PRIVATE SECTION.
    METHODS get_field_rules
      RETURNING
        VALUE(ro_result) TYPE REF TO Lif_abapgit_field_rules.
endclass. "ZCL_ABAPGIT_OBJECT_IWMO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_IWOM

*"* local type definitions
*include zcl_abapgit_object_iwom=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_IWOM definition
*"* public declarations
*include zcl_abapgit_object_iwom=======cu.
CLASS Lcl_abapgit_object_iwom DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_iwom=======co.
  PROTECTED SECTION.

    METHODS get_generic
      RETURNING
        VALUE(ro_generic) TYPE REF TO Lcl_abapgit_objects_generic
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_object_iwom=======ci.
  PRIVATE SECTION.
    METHODS get_field_rules
      RETURNING
        VALUE(ro_result) TYPE REF TO Lif_abapgit_field_rules.
endclass. "ZCL_ABAPGIT_OBJECT_IWOM definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_IWPR

*"* local type definitions
*include zcl_abapgit_object_iwpr=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_IWPR definition
*"* public declarations
*include zcl_abapgit_object_iwpr=======cu.
CLASS Lcl_abapgit_object_iwpr DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_iwpr=======co.
  PROTECTED SECTION.

    METHODS get_generic
      RETURNING
        VALUE(ro_generic) TYPE REF TO Lcl_abapgit_objects_generic
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_object_iwpr=======ci.
  PRIVATE SECTION.
    METHODS get_field_rules
      RETURNING
        VALUE(ro_result) TYPE REF TO Lif_abapgit_field_rules.
endclass. "ZCL_ABAPGIT_OBJECT_IWPR definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_IWSG

*"* local type definitions
*include zcl_abapgit_object_iwsg=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_IWSG definition
*"* public declarations
*include zcl_abapgit_object_iwsg=======cu.
CLASS Lcl_abapgit_object_iwsg DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_iwsg=======co.
  PROTECTED SECTION.

    METHODS get_generic
      RETURNING
        VALUE(ro_generic) TYPE REF TO Lcl_abapgit_objects_generic
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_object_iwsg=======ci.
  PRIVATE SECTION.
    METHODS get_field_rules
      RETURNING
        VALUE(ro_result) TYPE REF TO Lif_abapgit_field_rules.
endclass. "ZCL_ABAPGIT_OBJECT_IWSG definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_IWSV

*"* local type definitions
*include zcl_abapgit_object_iwsv=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_IWSV definition
*"* public declarations
*include zcl_abapgit_object_iwsv=======cu.
CLASS Lcl_abapgit_object_iwsv DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_iwsv=======co.
  PROTECTED SECTION.

    METHODS get_generic
      RETURNING
        VALUE(ro_generic) TYPE REF TO Lcl_abapgit_objects_generic
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_object_iwsv=======ci.
  PRIVATE SECTION.
    METHODS get_field_rules
      RETURNING
        VALUE(ro_result) TYPE REF TO Lif_abapgit_field_rules.
endclass. "ZCL_ABAPGIT_OBJECT_IWSV definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_IWVB

*"* local type definitions
*include zcl_abapgit_object_iwvb=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_IWVB definition
*"* public declarations
*include zcl_abapgit_object_iwvb=======cu.
CLASS Lcl_abapgit_object_iwvb DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_iwvb=======co.
  PROTECTED SECTION.

    METHODS get_generic
      RETURNING
        VALUE(ro_generic) TYPE REF TO Lcl_abapgit_objects_generic
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_object_iwvb=======ci.
  PRIVATE SECTION.
    METHODS get_field_rules
      RETURNING
        VALUE(ro_result) TYPE REF TO Lif_abapgit_field_rules.
endclass. "ZCL_ABAPGIT_OBJECT_IWVB definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_JOBD

*"* local type definitions
*include zcl_abapgit_object_jobd=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_JOBD definition
*"* public declarations
*include zcl_abapgit_object_jobd=======cu.
CLASS Lcl_abapgit_object_jobd DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

*"* protected declarations
*include zcl_abapgit_object_jobd=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_jobd=======ci.
  PRIVATE SECTION.
    TYPES: ty_jd_name TYPE c LENGTH 32.

endclass. "ZCL_ABAPGIT_OBJECT_JOBD definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_MSAG

*"* local type definitions
*include zcl_abapgit_object_msag=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_MSAG definition
*"* public declarations
*include zcl_abapgit_object_msag=======cu.
CLASS Lcl_abapgit_object_msag DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_msag=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_msag=======ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_t100_text,
        sprsl TYPE t100-sprsl,
        msgnr TYPE t100-msgnr,
        text  TYPE t100-text,
      END OF ty_t100_text .
    TYPES:
      ty_t100_texts TYPE STANDARD TABLE OF ty_t100_text .
    TYPES:
      ty_t100s      TYPE STANDARD TABLE OF t100
                           WITH NON-UNIQUE DEFAULT KEY .

    CONSTANTS c_longtext_id_msag TYPE dokil-id VALUE 'NA'.

    METHODS serialize_texts
      IMPORTING
        !ii_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_texts
      IMPORTING
        !ii_xml TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception .
    METHODS serialize_longtexts_msag
      IMPORTING
        !it_t100 TYPE ty_t100s
        !ii_xml  TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
    METHODS delete_msgid
      IMPORTING
        !iv_message_id TYPE arbgb .
    METHODS free_access_permission
      IMPORTING
        !iv_message_id TYPE arbgb .
    METHODS delete_documentation
      IMPORTING
        !iv_message_id TYPE arbgb .
endclass. "ZCL_ABAPGIT_OBJECT_MSAG definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_NONT

*"* local type definitions
*include zcl_abapgit_object_nont=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_NONT definition
*"* public declarations
*include zcl_abapgit_object_nont=======cu.
CLASS Lcl_abapgit_object_nont DEFINITION
*public
  INHERITING FROM Lcl_abapgit_object_common_aff
  CREATE PUBLIC.

  PUBLIC SECTION.
    METHODS Lif_abapgit_object~changed_by REDEFINITION.

*"* protected declarations
*include zcl_abapgit_object_nont=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_nont=======ci.
  PRIVATE SECTION.
    CONSTANTS c_table_name TYPE tabname VALUE 'NONT_HEADER'.
endclass. "ZCL_ABAPGIT_OBJECT_NONT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_NROB

*"* local type definitions
*include zcl_abapgit_object_nrob=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_NROB definition
*"* public declarations
*include zcl_abapgit_object_nrob=======cu.
CLASS Lcl_abapgit_object_nrob DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_nrob=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_nrob=======ci.
  PRIVATE SECTION.
    METHODS:
      delete_intervals IMPORTING iv_object TYPE inri-object
                       RAISING   Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_NROB definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_NSPC

*"* local type definitions
*include zcl_abapgit_object_nspc=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_NSPC definition
*"* public declarations
*include zcl_abapgit_object_nspc=======cu.
CLASS Lcl_abapgit_object_nspc DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_nspc=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_nspc=======ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_nspc,
        namespace  TYPE trnspacet-namespace,
        replicense TYPE trnspacet-replicense,
        sscrflag   TYPE trnspacet-sscrflag,
        sapflag    TYPE trnspacet-sapflag,
        gen_only   TYPE trnspacet-gen_only,
      END OF ty_nspc .
    TYPES:
      BEGIN OF ty_nspc_text,
        spras     TYPE trnspacett-spras,
        descriptn TYPE trnspacett-descriptn,
        owner     TYPE trnspacett-owner,
      END OF ty_nspc_text .
    TYPES:
      ty_nspc_texts TYPE STANDARD TABLE OF ty_nspc_text .

    METHODS serialize_texts
      IMPORTING
        !ii_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_texts
      IMPORTING
        !ii_xml       TYPE REF TO Lif_abapgit_xml_input
        !iv_namespace TYPE namespace
      RAISING
        Lcx_abapgit_exception .
    METHODS add_to_transport
      IMPORTING
        !iv_package TYPE devclass
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECT_NSPC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_OA2P

*"* local type definitions
*include zcl_abapgit_object_oa2p=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_OA2P definition
*"* public declarations
*include zcl_abapgit_object_oa2p=======cu.
CLASS Lcl_abapgit_object_oa2p DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
    METHODS constructor
      IMPORTING
        is_item     TYPE Lif_abapgit_definitions=>ty_item
        iv_language TYPE spras.

*"* protected declarations
*include zcl_abapgit_object_oa2p=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_oa2p=======ci.
  PRIVATE SECTION.
    DATA: mv_profile TYPE c LENGTH 30.

endclass. "ZCL_ABAPGIT_OBJECT_OA2P definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ODSO

*"* local type definitions
*include zcl_abapgit_object_odso=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ODSO definition
*"* public declarations
*include zcl_abapgit_object_odso=======cu.
CLASS Lcl_abapgit_object_odso DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_odso=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_odso=======ci.
  PRIVATE SECTION.

    METHODS:
      clear_field
        IMPORTING
          iv_fieldname TYPE string
        CHANGING
          cg_metadata  TYPE any.
endclass. "ZCL_ABAPGIT_OBJECT_ODSO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_OTGR

*"* local type definitions
*include zcl_abapgit_object_otgr=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_OTGR definition
*"* public declarations
*include zcl_abapgit_object_otgr=======cu.
CLASS Lcl_abapgit_object_otgr DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .

*"* protected declarations
*include zcl_abapgit_object_otgr=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_otgr=======ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_otgr,
        cls_type_group TYPE cls_type_group,
        texts          TYPE STANDARD TABLE OF cls_type_groupt WITH DEFAULT KEY,
        elements       TYPE STANDARD TABLE OF cls_tygr_element WITH DEFAULT KEY,
      END OF ty_otgr .

    METHODS instantiate_and_lock_otgr
      RETURNING
        VALUE(ro_otgr) TYPE REF TO cl_cls_object_type_group
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECT_OTGR definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_PARA

*"* local type definitions
*include zcl_abapgit_object_para=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_PARA definition
*"* public declarations
*include zcl_abapgit_object_para=======cu.
CLASS Lcl_abapgit_object_para DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_para=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_para=======ci.
  PRIVATE SECTION.

    METHODS unlock
      IMPORTING
        !iv_paramid TYPE memoryid .

endclass. "ZCL_ABAPGIT_OBJECT_PARA definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_PDXX_SUPER

*"* local type definitions
*include zcl_abapgit_object_pdxx_super=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_PDXX_SUPER definition
*"* public declarations
*include zcl_abapgit_object_pdxx_super=cu.
CLASS Lcl_abapgit_object_pdxx_super DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  ABSTRACT.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS constructor IMPORTING is_item     TYPE Lif_abapgit_definitions=>ty_item
                                  iv_language TYPE spras
                        RAISING   Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_object_pdxx_super=co.
  PROTECTED SECTION.
    DATA ms_objkey TYPE hrsobject.

    METHODS check_subrc_for IMPORTING iv_call TYPE clike OPTIONAL
                            RAISING   Lcx_abapgit_exception.

*"* private declarations
*include zcl_abapgit_object_pdxx_super=ci.
  PRIVATE SECTION.

endclass. "ZCL_ABAPGIT_OBJECT_PDXX_SUPER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_PERS

*"* local type definitions
*include zcl_abapgit_object_pers=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_PERS definition
*"* public declarations
*include zcl_abapgit_object_pers=======cu.
CLASS Lcl_abapgit_object_pers DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_pers=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_pers=======ci.
  PRIVATE SECTION.
    TYPES:
      BEGIN OF ty_personalization_object,
        pers_reg      TYPE spers_reg,
        pers_reg_text TYPE spers_regt,
      END OF ty_personalization_object.

    DATA:
      mv_pers_key TYPE spers_key.

    METHODS:
      get_personalization_object
        IMPORTING
          iv_create                        TYPE abap_bool OPTIONAL
          iv_view_only                     TYPE abap_bool OPTIONAL
        RETURNING
          VALUE(ro_personalization_object) TYPE REF TO cl_pers_reg
        RAISING
          Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_PERS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_PINF

*"* local type definitions
*include zcl_abapgit_object_pinf=======ccdef.
INTERFACE SHRITEFUH64VYIPO5IWUYB3KW5FSFY.
  TYPES ty_tpak_package_interf_elem_tt TYPE STANDARD TABLE OF tpak_package_interf_elem_ref WITH DEFAULT KEY.

  METHODS:
    get_elements
      RETURNING
        VALUE(rt_elements) TYPE ty_tpak_package_interf_elem_tt
      RAISING
        Lcx_abapgit_exception,

    set_elements_changeable
      IMPORTING
        iv_changeable TYPE abap_bool
      RAISING
        Lcx_abapgit_exception,

    save_elements
      RAISING
        Lcx_abapgit_exception,

    get_all_attributes
      RETURNING
        VALUE(rs_package_interface_data) TYPE scompidtln
      RAISING
        Lcx_abapgit_exception,

    set_changeable
      IMPORTING
        iv_changeable TYPE abap_bool
      RAISING
        Lcx_abapgit_exception,

    delete
      RAISING
        Lcx_abapgit_exception,

    save
      RAISING
        Lcx_abapgit_exception,

    remove_elements
      IMPORTING
        it_elements TYPE tpak_package_interf_elem_list
      RAISING
        Lcx_abapgit_exception,

    add_elements
      IMPORTING
        it_elements_data TYPE scomeldata
      RAISING
        Lcx_abapgit_exception,

    set_all_attributes
      IMPORTING
        is_package_interface_data TYPE scompidtln
        is_data_sign              TYPE scompisign
      RAISING
        Lcx_abapgit_exception,

    get_changeable
      RETURNING
        VALUE(rv_changeable) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception.

ENDINTERFACE.

CLASS SHRITEFUH64VYIPO5IWUYB3KW5GSFY DEFINITION.

  PUBLIC SECTION.
    INTERFACES:
      SHRITEFUH64VYIPO5IWUYB3KW5FSFY.

    METHODS:
      constructor
        IMPORTING
          ii_interface TYPE REF TO if_package_interface.

  PRIVATE SECTION.
    DATA: mi_interface TYPE REF TO if_package_interface.

ENDCLASS.

*"* class ZCL_ABAPGIT_OBJECT_PINF definition
*"* public declarations
*include zcl_abapgit_object_pinf=======cu.
CLASS Lcl_abapgit_object_pinf DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

*"* protected declarations
*include zcl_abapgit_object_pinf=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_pinf=======ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_pinf,
        attributes TYPE scompidtln,
        elements   TYPE STANDARD TABLE OF scomeldtln WITH DEFAULT KEY,
      END OF ty_pinf .
    TYPES:
      ty_elements TYPE STANDARD TABLE OF tpak_package_interf_elem_ref WITH DEFAULT KEY .

    METHODS create_or_load
      IMPORTING
        !is_pinf            TYPE ty_pinf
        !iv_package         TYPE devclass
      RETURNING
        VALUE(ri_interface) TYPE REF TO SHRITEFUH64VYIPO5IWUYB3KW5FSFY
      RAISING
        Lcx_abapgit_exception .
    METHODS delete_elements
      IMPORTING
        !ii_interface TYPE REF TO SHRITEFUH64VYIPO5IWUYB3KW5FSFY
      RAISING
        Lcx_abapgit_exception .
    METHODS update_attributes
      IMPORTING
        !iv_package   TYPE devclass
        !is_pinf      TYPE ty_pinf
        !ii_interface TYPE REF TO SHRITEFUH64VYIPO5IWUYB3KW5FSFY
      RAISING
        Lcx_abapgit_exception .
    METHODS update_elements
      IMPORTING
        !iv_package   TYPE devclass
        !is_pinf      TYPE ty_pinf
        !ii_interface TYPE REF TO SHRITEFUH64VYIPO5IWUYB3KW5FSFY
      RAISING
        Lcx_abapgit_exception .
    METHODS load
      IMPORTING
        iv_name             TYPE scomifnam
      RETURNING
        VALUE(ri_interface) TYPE REF TO SHRITEFUH64VYIPO5IWUYB3KW5FSFY.
    METHODS create_facade
      IMPORTING
        ii_interface     TYPE REF TO if_package_interface
      RETURNING
        VALUE(ri_facade) TYPE REF TO SHRITEFUH64VYIPO5IWUYB3KW5FSFY.

endclass. "ZCL_ABAPGIT_OBJECT_PINF definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_PRAG

*"* local type definitions
*include zcl_abapgit_object_prag=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_PRAG definition
*"* public declarations
*include zcl_abapgit_object_prag=======cu.
CLASS Lcl_abapgit_object_prag DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

*"* protected declarations
*include zcl_abapgit_object_prag=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_prag=======ci.
  PRIVATE SECTION.
    TYPES: BEGIN OF ty_pragma,
             pragma      TYPE c LENGTH 40,
             extension   TYPE c LENGTH 1,
             signature   TYPE c LENGTH 10,
             description TYPE c LENGTH 255,
           END OF ty_pragma.

endclass. "ZCL_ABAPGIT_OBJECT_PRAG definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_RONT

*"* local type definitions
*include zcl_abapgit_object_ront=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_RONT definition
*"* public declarations
*include zcl_abapgit_object_ront=======cu.
CLASS Lcl_abapgit_object_ront DEFINITION
*public
  INHERITING FROM Lcl_abapgit_object_common_aff
  CREATE PUBLIC.

  PUBLIC SECTION.
    METHODS Lif_abapgit_object~changed_by REDEFINITION.

*"* protected declarations
*include zcl_abapgit_object_ront=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_ront=======ci.
  PRIVATE SECTION.
    CONSTANTS c_table_name TYPE tabname VALUE 'RONT_HEADER'.
endclass. "ZCL_ABAPGIT_OBJECT_RONT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SAXX_SUPER

*"* local type definitions
*include zcl_abapgit_object_saxx_super=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SAXX_SUPER definition
*"* public declarations
*include zcl_abapgit_object_saxx_super=cu.
CLASS Lcl_abapgit_object_saxx_super DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  ABSTRACT
  CREATE PUBLIC .

* common class for SAPC and SAMC objects
  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .

*"* protected declarations
*include zcl_abapgit_object_saxx_super=co.
  PROTECTED SECTION.

    METHODS get_persistence_class_name
      ABSTRACT
      RETURNING
        VALUE(rv_persistence_class_name) TYPE seoclsname .
    METHODS get_data_class_name
      ABSTRACT
      RETURNING
        VALUE(rv_data_class_name) TYPE seoclsname .
    METHODS get_data_structure_name
      ABSTRACT
      RETURNING
        VALUE(rv_data_structure_name) TYPE string .

*"* private declarations
*include zcl_abapgit_object_saxx_super=ci.
  PRIVATE SECTION.

    DATA mi_persistence TYPE REF TO if_wb_object_persist .
    DATA mi_appl_obj_data TYPE REF TO if_wb_object_data_model .
    DATA mv_data_structure_name TYPE string .
    DATA mv_appl_obj_cls_name TYPE seoclsname .
    DATA mv_persistence_cls_name TYPE seoclsname .

    METHODS create_channel_objects
      RAISING
        Lcx_abapgit_exception .
    METHODS get_data
      EXPORTING
        !eg_data TYPE any
      RAISING
        Lcx_abapgit_exception .
    METHODS lock
      RAISING
        Lcx_abapgit_exception .
    METHODS unlock
      RAISING
        Lcx_abapgit_exception .
    METHODS get_names .
endclass. "ZCL_ABAPGIT_OBJECT_SAXX_SUPER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SCP1

*"* local type definitions
*include zcl_abapgit_object_scp1=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SCP1 definition
*"* public declarations
*include zcl_abapgit_object_scp1=======cu.
CLASS Lcl_abapgit_object_scp1 DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_scp1=======co.
  PROTECTED SECTION.

    TYPES:
      BEGIN OF ty_scp1,
        scprattr TYPE scprattr,
        scprtext TYPE STANDARD TABLE OF scprtext WITH DEFAULT KEY,
        scprvals TYPE STANDARD TABLE OF scprvals WITH DEFAULT KEY,
        scprvall TYPE STANDARD TABLE OF scprvall WITH DEFAULT KEY,
        scprreca TYPE STANDARD TABLE OF scprreca WITH DEFAULT KEY,
        scprfldv TYPE STANDARD TABLE OF scprfldv WITH DEFAULT KEY,
        subprofs TYPE STANDARD TABLE OF scprpprl WITH DEFAULT KEY,
      END OF ty_scp1 .

    METHODS dequeue .
    METHODS enqueue
      RAISING
        Lcx_abapgit_exception .
    METHODS save
      IMPORTING
        !is_scp1 TYPE ty_scp1
      RAISING
        Lcx_abapgit_exception .
    METHODS save_hier
      IMPORTING
        !is_scp1 TYPE ty_scp1
      RAISING
        Lcx_abapgit_exception .
    METHODS adjust_inbound
      CHANGING
        !cs_scp1 TYPE ty_scp1 .
    METHODS adjust_outbound
      CHANGING
        !cs_scp1 TYPE ty_scp1 .
    METHODS load
      CHANGING
        !cs_scp1 TYPE ty_scp1 .
    METHODS load_hier
      CHANGING
        !cs_scp1 TYPE ty_scp1 .
    METHODS call_delete_fms
      IMPORTING
        !iv_profile_id TYPE scpr_id
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_object_scp1=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_SCP1 definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SCVI

*"* local type definitions
*include zcl_abapgit_object_scvi=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SCVI definition
*"* public declarations
*include zcl_abapgit_object_scvi=======cu.
CLASS Lcl_abapgit_object_scvi DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_scvi=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_scvi=======ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_screen_variant,
        shdsvci    TYPE shdsvci,
        shdsvtxci  TYPE STANDARD TABLE OF shdsvtxci  WITH DEFAULT KEY,
        shdsvfvci  TYPE STANDARD TABLE OF shdsvfvci  WITH DEFAULT KEY,
        shdguixt   TYPE STANDARD TABLE OF shdguixt   WITH DEFAULT KEY,
        shdgxtcode TYPE STANDARD TABLE OF shdgxtcode WITH DEFAULT KEY,
      END OF ty_screen_variant .
endclass. "ZCL_ABAPGIT_OBJECT_SCVI definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SFBF

*"* local type definitions
*include zcl_abapgit_object_sfbf=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SFBF definition
*"* public declarations
*include zcl_abapgit_object_sfbf=======cu.
CLASS Lcl_abapgit_object_sfbf DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        !is_item     TYPE Lif_abapgit_definitions=>ty_item
        !iv_language TYPE spras.

*"* protected declarations
*include zcl_abapgit_object_sfbf=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_sfbf=======ci.
  PRIVATE SECTION.

    CONSTANTS c_longtext_id_sfbf TYPE dokil-id VALUE 'BF'.

    DATA mv_bf TYPE sfw_bfunction.

    METHODS:
      unlock,
      activate
        RAISING Lcx_abapgit_exception,
      create
        RETURNING VALUE(ro_bf) TYPE REF TO cl_sfw_bf
        RAISING   Lcx_abapgit_exception,
      get
        RETURNING VALUE(ro_bf) TYPE REF TO cl_sfw_bf
        RAISING   Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_SFBF definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SFBS

*"* local type definitions
*include zcl_abapgit_object_sfbs=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SFBS definition
*"* public declarations
*include zcl_abapgit_object_sfbs=======cu.
CLASS Lcl_abapgit_object_sfbs DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        !is_item     TYPE Lif_abapgit_definitions=>ty_item
        !iv_language TYPE spras.

*"* protected declarations
*include zcl_abapgit_object_sfbs=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_sfbs=======ci.
  PRIVATE SECTION.

    CONSTANTS c_longtext_id_sfbs TYPE dokil-id VALUE 'BS'.

    DATA mv_bfset TYPE sfw_bset.

    METHODS:
      unlock,
      activate
        RAISING Lcx_abapgit_exception,
      create
        RETURNING VALUE(ro_bfs) TYPE REF TO cl_sfw_bfs
        RAISING   Lcx_abapgit_exception,
      get
        RETURNING VALUE(ro_bfs) TYPE REF TO cl_sfw_bfs
        RAISING   Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_SFBS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SFPF

*"* local type definitions
*include zcl_abapgit_object_sfpf=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SFPF definition
*"* public declarations
*include zcl_abapgit_object_sfpf=======cu.
CLASS Lcl_abapgit_object_sfpf DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .

    CLASS-METHODS fix_oref
      IMPORTING
        !ii_document TYPE REF TO if_ixml_document
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_object_sfpf=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_sfpf=======ci.
  PRIVATE SECTION.

    CONSTANTS c_layout_file_ext TYPE string VALUE 'xdp'.

    METHODS:
      load
        RETURNING VALUE(ri_wb_form) TYPE REF TO if_fp_wb_form
        RAISING   Lcx_abapgit_exception,
      form_to_xstring
        RETURNING VALUE(rv_xstr) TYPE xstring
        RAISING   Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_SFPF definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SFPI

*"* local type definitions
*include zcl_abapgit_object_sfpi=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SFPI definition
*"* public declarations
*include zcl_abapgit_object_sfpi=======cu.
CLASS Lcl_abapgit_object_sfpi DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_sfpi=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_sfpi=======ci.
  PRIVATE SECTION.
    METHODS:
      load
        RETURNING VALUE(ri_wb_interface) TYPE REF TO if_fp_wb_interface
        RAISING   Lcx_abapgit_exception,
      interface_to_xstring
        RETURNING VALUE(rv_xstr) TYPE xstring
        RAISING   Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_SFPI definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SFSW

*"* local type definitions
*include zcl_abapgit_object_sfsw=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SFSW definition
*"* public declarations
*include zcl_abapgit_object_sfsw=======cu.
CLASS Lcl_abapgit_object_sfsw DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        !is_item     TYPE Lif_abapgit_definitions=>ty_item
        !iv_language TYPE spras.

*"* protected declarations
*include zcl_abapgit_object_sfsw=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_sfsw=======ci.
  PRIVATE SECTION.

    CONSTANTS c_longtext_id_sfsw TYPE dokil-id VALUE 'SW'.

    DATA mv_switch TYPE sfw_switch_id.

    METHODS:
      unlock,
      activate
        RAISING Lcx_abapgit_exception,
      create
        RETURNING VALUE(ro_switch) TYPE REF TO cl_sfw_sw
        RAISING   Lcx_abapgit_exception,
      get
        RETURNING VALUE(ro_switch) TYPE REF TO cl_sfw_sw
        RAISING   Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_SFSW definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SHI3

*"* local type definitions
*include zcl_abapgit_object_shi3=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SHI3 definition
*"* public declarations
*include zcl_abapgit_object_shi3=======cu.
CLASS Lcl_abapgit_object_shi3 DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        is_item     TYPE Lif_abapgit_definitions=>ty_item
        iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_shi3=======co.
  PROTECTED SECTION.

    METHODS has_authorization
      IMPORTING
        !iv_devclass     TYPE devclass
        !iv_structure_id TYPE hier_guid
        !iv_activity     TYPE activ_auth
      RAISING
        Lcx_abapgit_exception .
    METHODS is_used
      IMPORTING
        !iv_structure_id TYPE hier_guid
      RAISING
        Lcx_abapgit_exception .
    METHODS delete_tree_structure
      IMPORTING
        !iv_structure_id TYPE hier_guid .
*"* private declarations
*include zcl_abapgit_object_shi3=======ci.
  PRIVATE SECTION.

    DATA mv_tree_id TYPE ttree-id.

    METHODS insert_transport
      IMPORTING
        !iv_transport TYPE trkorr
      RAISING
        Lcx_abapgit_exception.
    METHODS jump_se43
      RAISING
        Lcx_abapgit_exception.
    METHODS jump_sbach04
      RAISING
        Lcx_abapgit_exception.
    METHODS clear_fields
      CHANGING
        !cs_head  TYPE ttree
        !ct_nodes TYPE hier_iface_t.
endclass. "ZCL_ABAPGIT_OBJECT_SHI3 definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SHI5

*"* local type definitions
*include zcl_abapgit_object_shi5=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SHI5 definition
*"* public declarations
*include zcl_abapgit_object_shi5=======cu.
CLASS Lcl_abapgit_object_shi5 DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        is_item     TYPE Lif_abapgit_definitions=>ty_item
        iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_shi5=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_shi5=======ci.
  PRIVATE SECTION.
    TYPES: ty_ttree_extt TYPE STANDARD TABLE OF ttree_extt
                               WITH NON-UNIQUE DEFAULT KEY,
           BEGIN OF ty_extension,
             header    TYPE ttree_ext,
             texts     TYPE ty_ttree_extt,
             sequences TYPE STANDARD TABLE OF ttrees WITH NON-UNIQUE DEFAULT KEY,
           END OF ty_extension.

    DATA: mv_extension TYPE hier_names.

endclass. "ZCL_ABAPGIT_OBJECT_SHI5 definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SHI8

*"* local type definitions
*include zcl_abapgit_object_shi8=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SHI8 definition
*"* public declarations
*include zcl_abapgit_object_shi8=======cu.
CLASS Lcl_abapgit_object_shi8 DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        is_item     TYPE Lif_abapgit_definitions=>ty_item
        iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_shi8=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_shi8=======ci.
  PRIVATE SECTION.
    DATA: mv_assignment_id  TYPE hier_sfw_id.

endclass. "ZCL_ABAPGIT_OBJECT_SHI8 definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SHLP

*"* local type definitions
*include zcl_abapgit_object_shlp=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SHLP definition
*"* public declarations
*include zcl_abapgit_object_shlp=======cu.
CLASS Lcl_abapgit_object_shlp DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_shlp=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_shlp=======ci.
  PRIVATE SECTION.

    METHODS handle_dependencies
      IMPORTING
        !iv_step TYPE Lif_abapgit_definitions=>ty_deserialization_step
      CHANGING
        !cv_exit TYPE dd30v-selmexit
        !cv_done TYPE abap_bool.

    METHODS adjust_exit
      CHANGING
        !cv_exit TYPE dd30v-selmexit.

    METHODS check_exit
      IMPORTING
        !iv_exit       TYPE dd30v-selmexit
      RETURNING
        VALUE(rv_done) TYPE abap_bool.

endclass. "ZCL_ABAPGIT_OBJECT_SHLP definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SHMA

*"* local type definitions
*include zcl_abapgit_object_shma=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SHMA definition
*"* public declarations
*include zcl_abapgit_object_shma=======cu.
CLASS Lcl_abapgit_object_shma DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

*"* protected declarations
*include zcl_abapgit_object_shma=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_shma=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_SHMA definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SICF

*"* local type definitions
*include zcl_abapgit_object_sicf=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SICF definition
*"* public declarations
*include zcl_abapgit_object_sicf=======cu.
CLASS Lcl_abapgit_object_sicf DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .

*"* protected declarations
*include zcl_abapgit_object_sicf=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_sicf=======ci.
  PRIVATE SECTION.

    TYPES ty_hash TYPE c LENGTH 25.

    TYPES:
      ty_icfhandler_tt TYPE STANDARD TABLE OF icfhandler WITH DEFAULT KEY .
    TYPES:
      BEGIN OF ty_sicf_key,
        icf_name   TYPE icfservice-icf_name,
        icfparguid TYPE icfservice-icfparguid,
      END OF ty_sicf_key .

    METHODS serialize_otr
      IMPORTING
        !io_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_otr
      IMPORTING
        !iv_package TYPE devclass
        !io_xml     TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception .
    METHODS read
      IMPORTING
        !iv_clear      TYPE abap_bool DEFAULT abap_true
      EXPORTING
        !es_icfservice TYPE icfservice
        !es_icfdocu    TYPE icfdocu
        !et_icfhandler TYPE ty_icfhandler_tt
        !ev_url        TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS insert_sicf
      IMPORTING
        !is_icfservice TYPE icfservice
        !is_icfdocu    TYPE icfdocu
        !it_icfhandler TYPE ty_icfhandler_tt
        !iv_package    TYPE devclass
        !iv_url        TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS change_sicf
      IMPORTING
        !is_icfservice TYPE icfservice
        !is_icfdocu    TYPE icfdocu
        !it_icfhandler TYPE ty_icfhandler_tt
        !iv_package    TYPE devclass
        !iv_parent     TYPE icfparguid
      RAISING
        Lcx_abapgit_exception .
    METHODS to_icfhndlist
      IMPORTING
        !it_list       TYPE ty_icfhandler_tt
      RETURNING
        VALUE(rt_list) TYPE icfhndlist .
    METHODS find_parent
      IMPORTING
        !iv_url          TYPE string
      RETURNING
        VALUE(rv_parent) TYPE icfparguid
      RAISING
        Lcx_abapgit_exception .

    CLASS-METHODS get_hash_from_object
      IMPORTING
        !iv_obj_name   TYPE tadir-obj_name
      RETURNING
        VALUE(rv_hash) TYPE ty_hash
      RAISING
        Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_OBJECT_SICF definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SKTD

*"* local type definitions
*include zcl_abapgit_object_sktd=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SKTD definition
*"* public declarations
*include zcl_abapgit_object_sktd=======cu.
CLASS Lcl_abapgit_object_sktd DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .

    METHODS constructor
      IMPORTING
        !is_item     TYPE Lif_abapgit_definitions=>ty_item
        !iv_language TYPE spras
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_object_sktd=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_sktd=======ci.
  PRIVATE SECTION.

    DATA mr_data TYPE REF TO data .
    DATA mv_object_key TYPE seu_objkey .
    DATA mi_persistence TYPE REF TO if_wb_object_persist .
    DATA mi_wb_object_operator TYPE REF TO object .

    METHODS clear_fields
      CHANGING
        !cs_data TYPE any .
    METHODS clear_field
      IMPORTING
        !iv_fieldname TYPE csequence
      CHANGING
        !cs_data      TYPE any .
    METHODS get_wb_object_operator
      RETURNING
        VALUE(ri_wb_object_operator) TYPE REF TO object
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECT_SKTD definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SMBC

*"* local type definitions
*include zcl_abapgit_object_smbc=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SMBC definition
*"* public declarations
*include zcl_abapgit_object_smbc=======cu.
CLASS Lcl_abapgit_object_smbc DEFINITION
*public
  INHERITING FROM Lcl_abapgit_object_common_aff
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    METHODS Lif_abapgit_object~changed_by REDEFINITION.
*"* protected declarations
*include zcl_abapgit_object_smbc=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_smbc=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_SMBC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SMIM

*"* local type definitions
*include zcl_abapgit_object_smim=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SMIM definition
*"* public declarations
*include zcl_abapgit_object_smim=======cu.
CLASS Lcl_abapgit_object_smim DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_smim=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_smim=======ci.
  PRIVATE SECTION.
    METHODS get_filename
      IMPORTING iv_url             TYPE string
      RETURNING VALUE(rv_filename) TYPE string.

    METHODS find_content
      IMPORTING iv_url            TYPE string
      RETURNING VALUE(rv_content) TYPE xstring
      RAISING   Lcx_abapgit_exception.

    METHODS build_filename
      IMPORTING iv_filename        TYPE string
      RETURNING VALUE(rv_filename) TYPE string.

    METHODS get_url_for_io
      EXPORTING ev_url       TYPE string
                ev_is_folder TYPE abap_bool
      RAISING   Lcx_abapgit_not_found
                Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_SMIM definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SMTG

*"* local type definitions
*include zcl_abapgit_object_smtg=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SMTG definition
*"* public declarations
*include zcl_abapgit_object_smtg=======cu.
CLASS Lcl_abapgit_object_smtg DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras
        RAISING
          Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_object_smtg=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_smtg=======ci.
  PRIVATE SECTION.
    DATA:
      mv_template_id TYPE c LENGTH 30,
      mo_structdescr TYPE REF TO cl_abap_structdescr.

    METHODS:
      clear_field
        IMPORTING
          iv_fieldname TYPE string
        CHANGING
          cg_header    TYPE any,

      get_structure
        RETURNING
          VALUE(ro_structdescr) TYPE REF TO cl_abap_structdescr
        RAISING
          Lcx_abapgit_exception,

      add_component
        IMPORTING
          iv_fielname       TYPE string
          iv_structure_name TYPE string
        CHANGING
          ct_components     TYPE abap_component_tab
        RAISING
          Lcx_abapgit_exception,

      get_template
        EXPORTING
          es_template TYPE any
        RAISING
          Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_SMTG definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SOBJ

*"* local type definitions
*include zcl_abapgit_object_sobj=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SOBJ definition
*"* public declarations
*include zcl_abapgit_object_sobj=======cu.
CLASS Lcl_abapgit_object_sobj DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_sobj=======co.
  PROTECTED SECTION.
    METHODS get_generic
      RETURNING
        VALUE(ro_generic) TYPE REF TO Lcl_abapgit_objects_generic
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_object_sobj=======ci.
  PRIVATE SECTION.
    METHODS get_field_rules
      RETURNING
        VALUE(ri_rules) TYPE REF TO Lif_abapgit_field_rules.
    METHODS is_locked RETURNING VALUE(rv_is_locked) TYPE abap_bool.
    METHODS is_objtype_locked RETURNING VALUE(rv_is_locked) TYPE abap_bool.
    METHODS is_program_locked RETURNING VALUE(rv_is_locked) TYPE abap_bool.
    METHODS get_program RETURNING VALUE(rv_program) TYPE tojtb-progname.
endclass. "ZCL_ABAPGIT_OBJECT_SOBJ definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SOD1

*"* local type definitions
*include zcl_abapgit_object_sod1=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SOD1 definition
*"* public declarations
*include zcl_abapgit_object_sod1=======cu.
CLASS Lcl_abapgit_object_sod1 DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        !is_item     TYPE Lif_abapgit_definitions=>ty_item
        !iv_language TYPE spras
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_object_sod1=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_sod1=======ci.
  PRIVATE SECTION.

    CONSTANTS: c_xml_transformation_name TYPE string VALUE 'SOD1',
               c_data_model_class_name   TYPE string VALUE 'CL_APS_ODA_WBI_SOD1_DATA_MODEL'.

    METHODS create_wb_object_operator
      IMPORTING
        !is_object_type              TYPE wbobjtype
        !iv_object_key               TYPE seu_objkey
        !iv_transport_request        TYPE trkorr OPTIONAL
        !iv_do_commits               TYPE abap_bool DEFAULT abap_true
        !iv_run_in_test_mode         TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ro_wb_object_operator) TYPE REF TO object
      RAISING
        Lcx_abapgit_exception.

    METHODS get_wb_object_operator
      IMPORTING
        !is_object_type              TYPE wbobjtype
        !iv_object_key               TYPE seu_objkey
        !iv_transport_request        TYPE trkorr OPTIONAL
      RETURNING
        VALUE(ro_wb_object_operator) TYPE REF TO object
      RAISING
        Lcx_abapgit_exception.

    METHODS clear_metadata_fields
      CHANGING
        !cs_data TYPE any.

    METHODS clear_content_fields
      CHANGING
        !cs_data TYPE any.

    METHODS clear_field
      IMPORTING
        !iv_fieldname TYPE csequence
      CHANGING
        !cs_metadata  TYPE any.

endclass. "ZCL_ABAPGIT_OBJECT_SOD1 definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SOD2

*"* local type definitions
*include zcl_abapgit_object_sod2=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SOD2 definition
*"* public declarations
*include zcl_abapgit_object_sod2=======cu.
CLASS Lcl_abapgit_object_sod2 DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        !is_item     TYPE Lif_abapgit_definitions=>ty_item
        !iv_language TYPE spras
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_object_sod2=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_sod2=======ci.
  PRIVATE SECTION.

    CONSTANTS: c_xml_transformation_name TYPE string VALUE 'SOD2',
               c_data_model_class_name   TYPE string VALUE 'CL_APS_ODA_WBI_SOD2_DATA_MODEL'.

    METHODS create_wb_object_operator
      IMPORTING
        !is_object_type              TYPE wbobjtype
        !iv_object_key               TYPE seu_objkey
        !iv_transport_request        TYPE trkorr OPTIONAL
        !iv_do_commits               TYPE abap_bool DEFAULT abap_true
        !iv_run_in_test_mode         TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ro_wb_object_operator) TYPE REF TO object
      RAISING
        Lcx_abapgit_exception.

    METHODS get_wb_object_operator
      IMPORTING
        !is_object_type              TYPE wbobjtype
        !iv_object_key               TYPE seu_objkey
        !iv_transport_request        TYPE trkorr OPTIONAL
      RETURNING
        VALUE(ro_wb_object_operator) TYPE REF TO object
      RAISING
        Lcx_abapgit_exception.

    METHODS clear_metadata_fields
      CHANGING
        !cs_data TYPE any.

    METHODS clear_content_fields
      CHANGING
        !cs_data TYPE any.

    METHODS clear_field
      IMPORTING
        !iv_fieldname TYPE csequence
      CHANGING
        !cs_metadata  TYPE any.

endclass. "ZCL_ABAPGIT_OBJECT_SOD2 definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SOTS

*"* local type definitions
*include zcl_abapgit_object_sots=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SOTS definition
*"* public declarations
*include zcl_abapgit_object_sots=======cu.
CLASS Lcl_abapgit_object_sots DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_sots=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_sots=======ci.
  PRIVATE SECTION.
    TYPES:
      BEGIN OF ty_sots,
        header  TYPE sotr_headu,
        entries TYPE sotr_textl_tt,
      END OF ty_sots,
      ty_sots_tt TYPE STANDARD TABLE OF ty_sots
                    WITH NON-UNIQUE DEFAULT KEY.

    METHODS:
      read_sots
        RETURNING
          VALUE(rt_sots) TYPE ty_sots_tt,

      create_sots
        IMPORTING
          is_sots    TYPE ty_sots
          iv_package TYPE devclass
          iv_object  TYPE trobjtype
        RAISING
          Lcx_abapgit_exception,

      get_raw_text_filename
        IMPORTING
          is_entry           TYPE sotr_textl
        RETURNING
          VALUE(rv_filename) TYPE string.

endclass. "ZCL_ABAPGIT_OBJECT_SOTS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SPLO

*"* local type definitions
*include zcl_abapgit_object_splo=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SPLO definition
*"* public declarations
*include zcl_abapgit_object_splo=======cu.
CLASS Lcl_abapgit_object_splo DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_splo=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_splo=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_SPLO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SPPF

*"* local type definitions
*include zcl_abapgit_object_sppf=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SPPF definition
*"* public declarations
*include zcl_abapgit_object_sppf=======cu.
CLASS Lcl_abapgit_object_sppf DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_sppf=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_sppf=======ci.
  PRIVATE SECTION.

    METHODS get_generic
      RETURNING
        VALUE(ro_generic) TYPE REF TO Lcl_abapgit_objects_generic
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECT_SPPF definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SPRX

*"* local type definitions
*include zcl_abapgit_object_sprx=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SPRX definition
*"* public declarations
*include zcl_abapgit_object_sprx=======cu.
CLASS Lcl_abapgit_object_sprx DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras
        RAISING
          Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_object_sprx=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_sprx=======ci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_proxy,
        data   TYPE string VALUE 'PROXY_DATA' ##NO_TEXT,
        header TYPE string VALUE 'PROXY_HEADER' ##NO_TEXT,
      END OF c_proxy .
    DATA mv_object TYPE sproxhdr-object .
    DATA mv_obj_name TYPE sproxhdr-obj_name .

    METHODS load_db
      RETURNING
        VALUE(rs_data) TYPE sprx_db_data .
    METHODS get_object_and_name
      EXPORTING
        !ev_object   TYPE sproxhdr-object
        !ev_obj_name TYPE sproxhdr-obj_name .
    METHODS delta_handling
      IMPORTING
        !ii_xml          TYPE REF TO Lif_abapgit_xml_input
      EXPORTING
        !et_sproxhdr_new TYPE sprx_hdr_t
        !et_sproxdat_new TYPE sprx_dat_t
      RAISING
        Lcx_abapgit_exception .
    METHODS check_sprx_tadir
      RAISING
        Lcx_abapgit_exception .
    METHODS save
      IMPORTING
        !it_sproxhdr_new TYPE sprx_hdr_t
        !it_sproxdat_new TYPE sprx_dat_t .
endclass. "ZCL_ABAPGIT_OBJECT_SPRX definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SQSC

*"* local type definitions
*include zcl_abapgit_object_sqsc=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SQSC definition
*"* public declarations
*include zcl_abapgit_object_sqsc=======cu.
CLASS Lcl_abapgit_object_sqsc DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras
        RAISING
          Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_object_sqsc=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_sqsc=======ci.
  PRIVATE SECTION.
    " Downport original structures from
    "   - IF_DBPROC_PROXY_UI
    "   - IF_DBPROC_PROXY_BASIC_TYPES

    TYPES:
      ty_db_name         TYPE c LENGTH 256,
      ty_abap_name       TYPE c LENGTH 30,
      ty_param_direction TYPE c LENGTH 10,
      ty_param_kind      TYPE c LENGTH 10,
      ty_ddic_name       TYPE ddobjname,

      BEGIN OF ty_db_simple_type_s,
        name   TYPE ty_db_name,
        length TYPE i,
        decs   TYPE i,
      END OF ty_db_simple_type_s,

      BEGIN OF ty_abap_simple_type_s,
        name   TYPE ty_abap_name,
        length TYPE i,
        decs   TYPE i,
      END OF ty_abap_simple_type_s,

      BEGIN OF ty_abap_simple_type_ui_s,
        typ  TYPE ty_abap_simple_type_s,
        text TYPE string,
      END OF ty_abap_simple_type_ui_s,

      BEGIN OF ty_header_ui_s,
        db_repository_package   TYPE ty_db_name,
        db_repository_proc_name TYPE ty_db_name,
        db_catalog_schema       TYPE ty_db_name,
        db_catalog_proc_name    TYPE ty_db_name,
        read_only               TYPE abap_bool,
        interface_pool          TYPE ty_abap_name,
      END OF  ty_header_ui_s,

      BEGIN OF ty_param_ui_s,
        position              TYPE i,
        db_name               TYPE ty_db_name,
        direction             TYPE ty_param_direction,
        kind                  TYPE ty_param_kind,
        db_table_type_schema  TYPE ty_db_name,
        db_table_type_name    TYPE ty_db_name,
        db_table_type_is_ddic TYPE abap_bool,
        transfer_table_schema TYPE ty_db_name,
        transfer_table_name   TYPE ty_db_name,
        abap_name             TYPE ty_abap_name,
        abap_name_is_ro       TYPE abap_bool,
        ddic_table            TYPE ty_ddic_name,
        ddic_table_is_ro      TYPE abap_bool,
      END OF  ty_param_ui_s,
      ty_param_ui_t            TYPE STANDARD TABLE OF ty_param_ui_s WITH KEY position,

      ty_abap_simple_type_ui_t TYPE STANDARD TABLE OF ty_abap_simple_type_ui_s WITH DEFAULT KEY,

      BEGIN OF ty_param_type_ui_s,
        param_position       TYPE i,
        comp_index           TYPE i,
        db_comp_name         TYPE ty_db_name,
        abap_comp_name       TYPE ty_abap_name,
        abap_comp_name_is_ro TYPE abap_bool,
        db_type              TYPE ty_db_simple_type_s,
        db_type_text         TYPE string,
        abap_type            TYPE ty_abap_simple_type_ui_s,
        abap_type_is_ro      TYPE abap_bool,
        abap_type_selection  TYPE ty_abap_simple_type_ui_t,
        ddic_type            TYPE ty_ddic_name,
        ddic_type_is_ro      TYPE abap_bool,
      END OF ty_param_type_ui_s ,
      ty_param_type_ui_t TYPE STANDARD TABLE OF ty_param_type_ui_s WITH KEY param_position comp_index,

      BEGIN OF ty_proxy,
        description     TYPE ddtext,
        header          TYPE ty_header_ui_s,
        parameters      TYPE ty_param_ui_t,
        parameter_types TYPE ty_param_type_ui_t,
      END OF ty_proxy.

    DATA:
      mo_proxy TYPE REF TO object.

    METHODS:
      delete_interface_if_it_exists
        IMPORTING
          iv_package   TYPE devclass
          iv_transport TYPE trkorr
          iv_interface TYPE ty_abap_name
        RAISING
          Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_OBJECT_SQSC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SRFC

*"* local type definitions
*include zcl_abapgit_object_srfc=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SRFC definition
*"* public declarations
*include zcl_abapgit_object_srfc=======cu.
CLASS Lcl_abapgit_object_srfc DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .

    METHODS constructor
      IMPORTING
        !is_item     TYPE Lif_abapgit_definitions=>ty_item
        !iv_language TYPE spras
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_object_srfc=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_srfc=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_SRFC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SRVB

*"* local type definitions
*include zcl_abapgit_object_srvb=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SRVB definition
*"* public declarations
*include zcl_abapgit_object_srvb=======cu.
CLASS Lcl_abapgit_object_srvb DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras
        RAISING
          Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_object_srvb=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_srvb=======ci.
  PRIVATE SECTION.
    METHODS:
      clear_fields
        CHANGING
          cs_service_binding TYPE any,

      clear_field
        IMPORTING
          iv_fieldname       TYPE csequence
        CHANGING
          cs_service_binding TYPE any.
    METHODS get_wb_object_operator
      RETURNING
        VALUE(ro_object_operator) TYPE REF TO object
      RAISING
        Lcx_abapgit_exception .
    METHODS merge_object_data
      IMPORTING
        !io_object_data              TYPE REF TO object
      RETURNING
        VALUE(ro_object_data_merged) TYPE REF TO if_wb_object_data_model
      RAISING
        Lcx_abapgit_exception .
    METHODS get_object_data
      IMPORTING
        !io_xml               TYPE REF TO Lif_abapgit_xml_input
      RETURNING
        VALUE(ro_object_data) TYPE REF TO if_wb_object_data_model
      RAISING
        Lcx_abapgit_exception .
    METHODS is_ai_supported
      RETURNING VALUE(rv_ai_supported) TYPE abap_bool.

    DATA:
      mi_persistence           TYPE REF TO if_wb_object_persist,
      mv_is_inactive_supported TYPE abap_bool,
      mv_service_binding_key   TYPE seu_objkey,
      mr_service_binding       TYPE REF TO data,
      mr_srvb_svrs_config      TYPE REF TO object,
      mo_object_operator       TYPE REF TO object.
endclass. "ZCL_ABAPGIT_OBJECT_SRVB definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SRVD

*"* local type definitions
*include zcl_abapgit_object_srvd=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SRVD definition
*"* public declarations
*include zcl_abapgit_object_srvd=======cu.
CLASS Lcl_abapgit_object_srvd DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras
        RAISING
          Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_object_srvd=======co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_object_srvd=======ci.
  PRIVATE SECTION.

    DATA mv_service_definition_key TYPE seu_objkey .
    DATA mr_service_definition TYPE REF TO data .
    CONSTANTS c_source_file TYPE string VALUE 'srvdsrv' ##NO_TEXT.
    CONSTANTS c_xml_parent_name TYPE string VALUE 'SRVD' ##NO_TEXT.
    DATA mo_object_operator TYPE REF TO object .

    METHODS clear_fields
      CHANGING
        !cs_metadata TYPE any .
    METHODS clear_field
      IMPORTING
        !iv_fieldname TYPE csequence
      CHANGING
        !cs_metadata  TYPE any .
    METHODS get_object_data
      IMPORTING
        !io_xml               TYPE REF TO Lif_abapgit_xml_input
      RETURNING
        VALUE(ro_object_data) TYPE REF TO if_wb_object_data_model
      RAISING
        Lcx_abapgit_exception .
    METHODS get_wb_object_operator
      RETURNING
        VALUE(ro_object_operator) TYPE REF TO object
      RAISING
        Lcx_abapgit_exception .
    METHODS merge_object_data
      IMPORTING
        !io_object_data              TYPE REF TO object
      RETURNING
        VALUE(ro_object_data_merged) TYPE REF TO if_wb_object_data_model
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECT_SRVD definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SSFO

*"* local type definitions
*include zcl_abapgit_object_ssfo=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SSFO definition
*"* public declarations
*include zcl_abapgit_object_ssfo=======cu.
CLASS Lcl_abapgit_object_ssfo DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_ssfo=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_ssfo=======ci.
  PRIVATE SECTION.

    TYPES:
      ty_string_range TYPE RANGE OF string .

    CLASS-DATA gt_range_node_codes TYPE ty_string_range .
    CONSTANTS c_attrib_abapgit_leadig_spaces TYPE string VALUE 'abapgit-leadig-spaces' ##NO_TEXT.

    METHODS fix_ids
      IMPORTING
        !ii_xml_doc TYPE REF TO if_ixml_document .
    METHODS sort_texts
      IMPORTING
        !ii_xml_doc TYPE REF TO if_ixml_document
      RAISING
        Lcx_abapgit_exception .
    METHODS handle_attrib_leading_spaces
      IMPORTING
        !iv_name                TYPE string
        !ii_node                TYPE REF TO if_ixml_node
      CHANGING
        !cv_within_code_section TYPE abap_bool .
    METHODS get_range_node_codes
      RETURNING
        VALUE(rt_range_node_codes) TYPE ty_string_range .
    METHODS code_item_section_handling
      IMPORTING
        !iv_name                TYPE string
        !ii_node                TYPE REF TO if_ixml_node
      EXPORTING
        !ei_code_item_element   TYPE REF TO if_ixml_element
      CHANGING
        !cv_within_code_section TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECT_SSFO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SSST

*"* local type definitions
*include zcl_abapgit_object_ssst=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SSST definition
*"* public declarations
*include zcl_abapgit_object_ssst=======cu.
CLASS Lcl_abapgit_object_ssst DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    CONSTANTS: c_style_active TYPE tdactivate VALUE 'A'.
*"* protected declarations
*include zcl_abapgit_object_ssst=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_ssst=======ci.
  PRIVATE SECTION.
    METHODS validate_font
      IMPORTING iv_tdfamily TYPE tdfamily
      RAISING   Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_SSST definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_STVI

*"* local type definitions
*include zcl_abapgit_object_stvi=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_STVI definition
*"* public declarations
*include zcl_abapgit_object_stvi=======cu.
CLASS Lcl_abapgit_object_stvi DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_stvi=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_stvi=======ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_transaction_variant,
        shdtvciu   TYPE shdtvciu,
        shdttciu   TYPE STANDARD TABLE OF shdttciu   WITH DEFAULT KEY,
        shdfvguicu TYPE STANDARD TABLE OF shdfvguicu WITH DEFAULT KEY,
        shdtvsvciu TYPE STANDARD TABLE OF shdtvsvciu WITH DEFAULT KEY,
      END OF ty_transaction_variant.
endclass. "ZCL_ABAPGIT_OBJECT_STVI definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_STYL

*"* local type definitions
*include zcl_abapgit_object_styl=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_STYL definition
*"* public declarations
*include zcl_abapgit_object_styl=======cu.
CLASS Lcl_abapgit_object_styl DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_styl=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_styl=======ci.
  PRIVATE SECTION.
    TYPES: BEGIN OF ty_style,
             header     TYPE itcda,
             paragraphs TYPE STANDARD TABLE OF itcdp WITH DEFAULT KEY,
             strings    TYPE STANDARD TABLE OF itcds WITH DEFAULT KEY,
             tabs       TYPE STANDARD TABLE OF itcdq WITH DEFAULT KEY,
           END OF ty_style.

endclass. "ZCL_ABAPGIT_OBJECT_STYL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SUCU

*"* local type definitions
*include zcl_abapgit_object_sucu=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SUCU definition
*"* public declarations
*include zcl_abapgit_object_sucu=======cu.
CLASS Lcl_abapgit_object_sucu DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_sucu=======co.
  PROTECTED SECTION.

    METHODS get_generic
      RETURNING
        VALUE(ro_generic) TYPE REF TO Lcl_abapgit_objects_generic
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_object_sucu=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_SUCU definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SUSC

*"* local type definitions
*include zcl_abapgit_object_susc=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SUSC definition
*"* public declarations
*include zcl_abapgit_object_susc=======cu.
CLASS Lcl_abapgit_object_susc DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_susc=======co.
  PROTECTED SECTION.

    CONSTANTS c_transobjecttype_class TYPE c LENGTH 1 VALUE 'C' ##NO_TEXT.

    METHODS has_authorization
      IMPORTING
        !iv_class    TYPE tobc-oclss
        !iv_activity TYPE activ_auth
      RAISING
        Lcx_abapgit_exception .
    METHODS is_used
      IMPORTING
        !iv_auth_object_class TYPE tobc-oclss
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_object_susc=======ci.
  PRIVATE SECTION.

    METHODS delete_class
      IMPORTING
        !iv_auth_object_class TYPE tobc-oclss .
    METHODS put_delete_to_transport
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECT_SUSC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SUSH

*"* local type definitions
*include zcl_abapgit_object_sush=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SUSH definition
*"* public declarations
*include zcl_abapgit_object_sush=======cu.
CLASS Lcl_abapgit_object_sush DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .

    METHODS constructor
      IMPORTING
        is_item     TYPE Lif_abapgit_definitions=>ty_item
        iv_language TYPE spras
      RAISING
        Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_object_sush=======co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_object_sush=======ci.
  PRIVATE SECTION.
    METHODS clear_metadata
      CHANGING
        cs_data_head TYPE any
        ct_usobx     TYPE table
        ct_usobt     TYPE table
        ct_usobx_ext TYPE table
        ct_usobt_ext TYPE table.

endclass. "ZCL_ABAPGIT_OBJECT_SUSH definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SUSO

*"* local type definitions
*include zcl_abapgit_object_suso=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SUSO definition
*"* public declarations
*include zcl_abapgit_object_suso=======cu.
CLASS Lcl_abapgit_object_suso DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_suso=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_suso=======ci.
  PRIVATE SECTION.
    CONSTANTS c_longtext_id_suso TYPE dokil-id VALUE 'UO'.

    DATA:
      mv_objectname TYPE tobj-objct.

    METHODS:
      delete_documentation
        RAISING
          Lcx_abapgit_exception,

      pre_check
        RAISING
          Lcx_abapgit_exception,

      regenerate_sap_all.

endclass. "ZCL_ABAPGIT_OBJECT_SUSO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SXCI

*"* local type definitions
*include zcl_abapgit_object_sxci=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SXCI definition
*"* public declarations
*include zcl_abapgit_object_sxci=======cu.
CLASS Lcl_abapgit_object_sxci DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

*"* protected declarations
*include zcl_abapgit_object_sxci=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_sxci=======ci.
  PRIVATE SECTION.
    TYPES: BEGIN OF ty_classic_badi_implementation,
             implementation_data TYPE impl_data,
             function_codes      TYPE seex_fcode_table,
             control_composites  TYPE seex_coco_table,
             customer_includes   TYPE seex_table_table,
             screens             TYPE seex_screen_table,
             filters             TYPE seex_filter_table,
           END OF ty_classic_badi_implementation.
endclass. "ZCL_ABAPGIT_OBJECT_SXCI definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_TABL

*"* local type definitions
*include zcl_abapgit_object_tabl=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_TABL definition
*"* public declarations
*include zcl_abapgit_object_tabl=======cu.
CLASS Lcl_abapgit_object_tabl DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_tabl=======co.
  PROTECTED SECTION.
    TYPES: BEGIN OF ty_segment_definition,
             segmentheader     TYPE edisegmhd,
             segmentdefinition TYPE edisegmdef,
             segmentstructures TYPE STANDARD TABLE OF edisegstru WITH DEFAULT KEY,
           END OF ty_segment_definition.
    TYPES: ty_segment_definitions TYPE STANDARD TABLE OF ty_segment_definition WITH DEFAULT KEY.

    TYPES: BEGIN OF ty_tabl_extras,
             tddat TYPE tddat,
           END OF ty_tabl_extras.

    "! get additional data like table authorization group
    "! @parameter iv_tabname | name of the table
    METHODS read_extras IMPORTING iv_tabname            TYPE ddobjname
                        RETURNING VALUE(rs_tabl_extras) TYPE ty_tabl_extras.

    "! Update additional data
    "! @parameter iv_tabname | name of the table
    "! @parameter is_tabl_extras | additional table data
    METHODS update_extras IMPORTING iv_tabname     TYPE ddobjname
                                    is_tabl_extras TYPE ty_tabl_extras.

    "! Delete additional data
    "! @parameter iv_tabname | name of the table
    METHODS delete_extras IMPORTING iv_tabname TYPE ddobjname.

    "! Serialize IDoc Segment type/definition if exits
    "! @parameter io_xml | XML writer
    "! @raising zcx_abapgit_exception | Exceptions
    METHODS serialize_idoc_segment IMPORTING io_xml TYPE REF TO Lif_abapgit_xml_output
                                   RAISING   Lcx_abapgit_exception.

    "! Deserialize IDoc Segment type/definition if exits
    "! @parameter io_xml | XML writer
    "! @parameter iv_package | Target package
    "! @parameter rv_deserialized | It's a segment and was desserialized
    "! @raising zcx_abapgit_exception | Exceptions
    METHODS deserialize_idoc_segment IMPORTING io_xml                 TYPE REF TO Lif_abapgit_xml_input
                                               iv_transport           TYPE trkorr
                                               iv_package             TYPE devclass
                                     RETURNING VALUE(rv_deserialized) TYPE abap_bool
                                     RAISING   Lcx_abapgit_exception.
    "! Delete the IDoc Segment type if exists
    "! @parameter rv_deleted | It's a segment and was deleted
    "! @raising zcx_abapgit_exception | Exceptions
    METHODS delete_idoc_segment RETURNING VALUE(rv_deleted) TYPE abap_bool
                                RAISING   Lcx_abapgit_exception.
*"* private declarations
*include zcl_abapgit_object_tabl=======ci.
  PRIVATE SECTION.

    TYPES:
      ty_dd03p_tt TYPE STANDARD TABLE OF dd03p .
    TYPES:
      BEGIN OF ty_dd02_text,
        ddlanguage TYPE dd02t-ddlanguage,
        ddtext     TYPE dd02t-ddtext,
      END OF ty_dd02_text .
    TYPES:
      ty_dd02_texts TYPE STANDARD TABLE OF ty_dd02_text .

    CONSTANTS c_longtext_id_tabl TYPE dokil-id VALUE 'TB' ##NO_TEXT.
    CONSTANTS:
      BEGIN OF c_s_dataname,
        segment_definition TYPE string VALUE 'SEGMENT_DEFINITION',
        tabl_extras        TYPE string VALUE 'TABL_EXTRAS',
      END OF c_s_dataname .

    METHODS deserialize_indexes
      IMPORTING
        !io_xml TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception .
    METHODS clear_dd03p_fields
      CHANGING
        !ct_dd03p TYPE ty_dd03p_tt .
    "! Check if structure is an IDoc segment
    "! @parameter rv_is_idoc_segment | It's an IDoc segment or not
    METHODS is_idoc_segment
      RETURNING
        VALUE(rv_is_idoc_segment) TYPE abap_bool .
    METHODS clear_dd03p_fields_common
      CHANGING
        !cs_dd03p TYPE dd03p .
    METHODS clear_dd03p_fields_dataelement
      CHANGING
        !cs_dd03p TYPE dd03p .
    METHODS serialize_texts
      IMPORTING
        !ii_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_texts
      IMPORTING
        !ii_xml   TYPE REF TO Lif_abapgit_xml_input
        !is_dd02v TYPE dd02v
      RAISING
        Lcx_abapgit_exception .
    METHODS is_db_table_category
      IMPORTING
        !iv_tabclass               TYPE dd02l-tabclass
      RETURNING
        VALUE(rv_is_db_table_type) TYPE dd02l-tabclass .
endclass. "ZCL_ABAPGIT_OBJECT_TABL definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_TOBJ

*"* local type definitions
*include zcl_abapgit_object_tobj=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_TOBJ definition
*"* public declarations
*include zcl_abapgit_object_tobj=======cu.
CLASS Lcl_abapgit_object_tobj DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_tobj=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_tobj=======ci.
  PRIVATE SECTION.
    TYPES: BEGIN OF ty_tobj,
             tddat TYPE tddat,
             tvdir TYPE tvdir,
             tvimf TYPE STANDARD TABLE OF tvimf WITH DEFAULT KEY,
           END OF ty_tobj.

    METHODS:
      read_extra IMPORTING iv_tabname     TYPE vim_name
                 RETURNING VALUE(rs_tobj) TYPE ty_tobj,
      update_extra IMPORTING is_tobj TYPE ty_tobj,
      delete_extra IMPORTING iv_tabname TYPE vim_name.

endclass. "ZCL_ABAPGIT_OBJECT_TOBJ definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_TRAN

*"* local type definitions
*include zcl_abapgit_object_tran=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_TRAN definition
*"* public declarations
*include zcl_abapgit_object_tran=======cu.
CLASS Lcl_abapgit_object_tran DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC


.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_tran=======co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_object_tran=======ci.
  PRIVATE SECTION.
    TYPES:
      ty_param_values TYPE STANDARD TABLE OF rsparam
                                     WITH NON-UNIQUE DEFAULT KEY ,
      ty_tstca        TYPE STANDARD TABLE OF tstca
                                     WITH DEFAULT KEY.

    CONSTANTS:
      c_oo_program   TYPE c LENGTH 9 VALUE '\PROGRAM=' ##NO_TEXT,
      c_oo_class     TYPE c LENGTH 7 VALUE '\CLASS=' ##NO_TEXT,
      c_oo_method    TYPE c LENGTH 8 VALUE '\METHOD=' ##NO_TEXT,
      c_oo_tcode     TYPE tcode VALUE 'OS_APPLICATION' ##NO_TEXT,
      c_oo_frclass   TYPE c LENGTH 30 VALUE 'CLASS' ##NO_TEXT,
      c_oo_frmethod  TYPE c LENGTH 30 VALUE 'METHOD' ##NO_TEXT,
      c_oo_frupdtask TYPE c LENGTH 30 VALUE 'UPDATE_MODE' ##NO_TEXT,
      c_oo_synchron  TYPE c VALUE 'S' ##NO_TEXT,
      c_oo_asynchron TYPE c VALUE 'U' ##NO_TEXT,
      c_true         TYPE c VALUE 'X' ##NO_TEXT,
      c_false        TYPE c VALUE space ##NO_TEXT,
      BEGIN OF c_variant_type,
        dialog     TYPE rglif-docutype VALUE 'D' ##NO_TEXT,
        report     TYPE rglif-docutype VALUE 'R' ##NO_TEXT,
        variant    TYPE rglif-docutype VALUE 'V' ##NO_TEXT,
        parameters TYPE rglif-docutype VALUE 'P' ##NO_TEXT,
        object     TYPE rglif-docutype VALUE 'O' ##NO_TEXT,
      END OF c_variant_type.

    DATA:
      mt_bcdata TYPE STANDARD TABLE OF bdcdata .

    METHODS transaction_read
      IMPORTING
        iv_transaction TYPE tcode
      EXPORTING
        es_transaction TYPE tstc
        es_gui_attr    TYPE tstcc
      RAISING
        Lcx_abapgit_exception.
    METHODS shift_param
      CHANGING
        !ct_rsparam TYPE s_param
        !cs_tstcp   TYPE tstcp .
    METHODS add_data
      IMPORTING
        !iv_fnam TYPE bdcdata-fnam
        !iv_fval TYPE clike .
    METHODS call_se93
      RAISING
        Lcx_abapgit_exception .
    METHODS set_oo_parameters
      IMPORTING
        !it_rsparam TYPE s_param
      CHANGING
        !cs_rsstcd  TYPE rsstcd .
    METHODS split_parameters
      CHANGING
        !ct_rsparam TYPE s_param
        !cs_rsstcd  TYPE rsstcd
        !cs_tstcp   TYPE tstcp
        !cs_tstc    TYPE tstc .
    METHODS split_parameters_comp
      IMPORTING
        !ig_type  TYPE any
        !ig_param TYPE any
      CHANGING
        !cg_value TYPE any .
    METHODS serialize_texts
      IMPORTING
        !ii_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_texts
      IMPORTING
        !ii_xml TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_oo_transaction
      IMPORTING
        !iv_package TYPE devclass
        !is_tstc    TYPE tstc
        !is_tstcc   TYPE tstcc
        !is_tstct   TYPE tstct
        !is_rsstcd  TYPE rsstcd
      RAISING
        Lcx_abapgit_exception .
    METHODS save_authorizations
      IMPORTING
        iv_transaction    TYPE tstc-tcode
        it_authorizations TYPE ty_tstca
      RAISING
        Lcx_abapgit_exception.
    METHODS clear_functiongroup_globals.
    METHODS is_variant_transaction IMPORTING is_tstcp                      TYPE tstcp
                                   RETURNING VALUE(rv_variant_transaction) TYPE abap_bool.
endclass. "ZCL_ABAPGIT_OBJECT_TRAN definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_TTYP

*"* local type definitions
*include zcl_abapgit_object_ttyp=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_TTYP definition
*"* public declarations
*include zcl_abapgit_object_ttyp=======cu.
CLASS Lcl_abapgit_object_ttyp DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_ttyp=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_ttyp=======ci.
  PRIVATE SECTION.
    CONSTANTS c_longtext_id_ttyp TYPE dokil-id VALUE 'TT'.
endclass. "ZCL_ABAPGIT_OBJECT_TTYP definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_TYPE

*"* local type definitions
*include zcl_abapgit_object_type=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_TYPE definition
*"* public declarations
*include zcl_abapgit_object_type=======cu.
CLASS Lcl_abapgit_object_type DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_type=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_type=======ci.
  PRIVATE SECTION.
    CONSTANTS: c_prefix TYPE c LENGTH 3 VALUE '%_C'.

    METHODS read
      EXPORTING ev_ddtext TYPE ddtypet-ddtext
                et_source TYPE abaptxt255_tab
      RAISING   Lcx_abapgit_exception.

    METHODS create
      IMPORTING iv_ddtext   TYPE ddtypet-ddtext
                it_source   TYPE abaptxt255_tab
                iv_devclass TYPE devclass
      RAISING   Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_TYPE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_UCSA

*"* local type definitions
*include zcl_abapgit_object_ucsa=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_UCSA definition
*"* public declarations
*include zcl_abapgit_object_ucsa=======cu.
CLASS Lcl_abapgit_object_ucsa DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

*"* protected declarations
*include zcl_abapgit_object_ucsa=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_ucsa=======ci.
  PRIVATE SECTION.
    CONSTANTS:
      BEGIN OF c_version,
        active   TYPE r3state VALUE 'A',
        inactive TYPE r3state VALUE 'I',
      END OF c_version .

    TYPES:
      ty_id TYPE c LENGTH 30.

    METHODS:
      get_persistence
        IMPORTING
          iv_id                 TYPE ty_id
        RETURNING
          VALUE(ro_persistence) TYPE REF TO object,

      clear_dynamic_fields
        CHANGING
          cg_complete_comm_assembly TYPE any,

      clear_field
        IMPORTING
          iv_fieldname TYPE csequence
        CHANGING
          cg_header    TYPE any.

endclass. "ZCL_ABAPGIT_OBJECT_UCSA definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_UDMO

*"* local type definitions
*include zcl_abapgit_object_udmo=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_UDMO definition
*"* public declarations
*include zcl_abapgit_object_udmo=======cu.
CLASS Lcl_abapgit_object_udmo DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .

    METHODS constructor
      IMPORTING
        !is_item     TYPE Lif_abapgit_definitions=>ty_item
        !iv_language TYPE spras .
*"* protected declarations
*include zcl_abapgit_object_udmo=======co.
  PROTECTED SECTION.

    METHODS corr_insert
        REDEFINITION .
*"* private declarations
*include zcl_abapgit_object_udmo=======ci.
  PRIVATE SECTION.

    TYPES:
        " You are reminded that the text serialisation / de-serialisation methods depend upon a common type.
        " To make the dependency explicit, there is one common definition.
      BEGIN OF ty_udmo_text_type.
    TYPES sprache TYPE dm40t-sprache.
    TYPES dmoid TYPE dm40t-dmoid.
    TYPES langbez TYPE dm40t-langbez.
    TYPES as4local TYPE dm40t-as4local.
    TYPES END OF ty_udmo_text_type .

    DATA mv_data_model TYPE uddmodl .
    DATA mv_text_object TYPE doku_obj .
    DATA mv_lxe_text_name TYPE lxeobjname .
    DATA mv_activation_state TYPE as4local .
    DATA ms_object_type TYPE rsdeo .
    CONSTANTS c_transport_object_class TYPE trobjtype VALUE 'SUDM' ##NO_TEXT.
    CONSTANTS c_lxe_text_type TYPE lxeobjtype VALUE 'IM' ##NO_TEXT.
    CONSTANTS c_correction_object_type TYPE rsdeo-objtype VALUE 'UDMO' ##NO_TEXT.
    CONSTANTS c_active_state TYPE as4local VALUE 'A' ##NO_TEXT.

    METHODS is_name_permitted
      RAISING
        Lcx_abapgit_exception .
    METHODS update_tree .
    METHODS serialize_short_texts
      IMPORTING
        !io_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_short_texts
      IMPORTING
        !io_xml TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception .
    METHODS serialize_long_texts
      IMPORTING
        !io_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_long_texts
      IMPORTING
        !io_xml TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception .
    METHODS serialize_entities
      IMPORTING
        !io_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_entities
      IMPORTING
        !io_xml TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception .
    METHODS access_modify
      RETURNING
        VALUE(rv_result) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS access_free
      RETURNING
        VALUE(rv_result) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_model
      IMPORTING
        !io_xml TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception .
    METHODS serialize_model
      IMPORTING
        !io_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECT_UDMO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_UENO

*"* local type definitions
*include zcl_abapgit_object_ueno=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_UENO definition
*"* public declarations
*include zcl_abapgit_object_ueno=======cu.
CLASS Lcl_abapgit_object_ueno DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object.

    METHODS constructor
      IMPORTING
        !is_item     TYPE Lif_abapgit_definitions=>ty_item
        !iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_ueno=======co.
  PROTECTED SECTION.



*"* private declarations
*include zcl_abapgit_object_ueno=======ci.
  PRIVATE SECTION.

    TYPES BEGIN OF ty_docu.
    TYPES language TYPE dm40t-sprache.
    TYPES header   TYPE thead.
    TYPES content TYPE xstring.
    TYPES itf     TYPE tsftext.
    TYPES END OF ty_docu.

    TYPES ty_docu_lines TYPE STANDARD TABLE OF ty_docu WITH DEFAULT KEY.

    DATA mv_entity_id TYPE udentity.

    CONSTANTS c_text_object_type TYPE lxeobjtype VALUE 'IM' ##NO_TEXT.
    CONSTANTS c_active_state TYPE as4local VALUE 'A' ##NO_TEXT.


    METHODS build_text_name
      IMPORTING iv_id            TYPE tdid
      RETURNING VALUE(rv_result) TYPE doku_obj.

    METHODS is_name_permitted
      RAISING
        Lcx_abapgit_exception.

    METHODS delete_docu_uen
      RAISING Lcx_abapgit_exception.

    METHODS delete_docu_url
      RAISING Lcx_abapgit_exception.

    METHODS delete_docu_usp
      RAISING Lcx_abapgit_exception.



    METHODS deserialize_docu_uen
      IMPORTING
        io_xml TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception.

    METHODS deserialize_docu_url
      IMPORTING
        io_xml TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception.

    METHODS deserialize_docu_usp
      IMPORTING
        io_xml TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception.



    METHODS serialize_docu_uen
      IMPORTING
        io_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception.

    METHODS serialize_docu_url
      IMPORTING
        io_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception.

    METHODS serialize_docu_xxxx
      IMPORTING iv_id            TYPE tdid
      RETURNING VALUE(rt_result) TYPE ty_docu_lines.

    METHODS serialize_docu_usp
      IMPORTING
        io_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception.

    METHODS deserialize_docu_xxxx
      IMPORTING
        it_docu TYPE ty_docu_lines
      RAISING
        Lcx_abapgit_exception.


    METHODS get_generic
      RETURNING
        VALUE(ro_generic) TYPE REF TO Lcl_abapgit_objects_generic
      RAISING
        Lcx_abapgit_exception .
    METHODS get_field_rules
      RETURNING
        VALUE(ro_result) TYPE REF TO Lif_abapgit_field_rules.
endclass. "ZCL_ABAPGIT_OBJECT_UENO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_VCLS

*"* local type definitions
*include zcl_abapgit_object_vcls=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_VCLS definition
*"* public declarations
*include zcl_abapgit_object_vcls=======cu.
CLASS Lcl_abapgit_object_vcls DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

*"* protected declarations
*include zcl_abapgit_object_vcls=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_vcls=======ci.
  PRIVATE SECTION.

* See include MTOBJCON:
    CONSTANTS c_cluster_type TYPE c VALUE 'C' ##NO_TEXT.
    CONSTANTS c_mode_insert TYPE obj_para-maint_mode VALUE 'I' ##NO_TEXT.

    METHODS is_locked
      IMPORTING
        !iv_tabname         TYPE tabname
        !iv_argument        TYPE seqg3-garg
      RETURNING
        VALUE(rv_is_locked) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECT_VCLS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_VIEW

*"* local type definitions
*include zcl_abapgit_object_view=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_VIEW definition
*"* public declarations
*include zcl_abapgit_object_view=======cu.
CLASS Lcl_abapgit_object_view DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_view=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_view=======ci.
  PRIVATE SECTION.
    TYPES: ty_dd26v TYPE STANDARD TABLE OF dd26v
                          WITH NON-UNIQUE DEFAULT KEY,
           ty_dd27p TYPE STANDARD TABLE OF dd27p
                          WITH NON-UNIQUE DEFAULT KEY,
           ty_dd28j TYPE STANDARD TABLE OF dd28j
                          WITH NON-UNIQUE DEFAULT KEY,
           ty_dd28v TYPE STANDARD TABLE OF dd28v
                          WITH NON-UNIQUE DEFAULT KEY,
           BEGIN OF ty_dd25_text,
             ddlanguage TYPE dd25t-ddlanguage,
             ddtext     TYPE dd25t-ddtext,
           END OF ty_dd25_text ,
           ty_dd25_texts TYPE STANDARD TABLE OF ty_dd25_text.
    CONSTANTS c_longtext_id_view TYPE dokil-id VALUE 'VW'.

    METHODS:
      read_view
        IMPORTING
          iv_language TYPE sy-langu
        EXPORTING
          ev_state    TYPE ddgotstate
          es_dd25v    TYPE dd25v
          es_dd09l    TYPE dd09l
          et_dd26v    TYPE ty_dd26v
          et_dd27p    TYPE ty_dd27p
          et_dd28j    TYPE ty_dd28j
          et_dd28v    TYPE ty_dd28v
        RAISING
          Lcx_abapgit_exception,

      serialize_texts
        IMPORTING
          ii_xml TYPE REF TO Lif_abapgit_xml_output
        RAISING
          Lcx_abapgit_exception,

      deserialize_texts
        IMPORTING
          ii_xml   TYPE REF TO Lif_abapgit_xml_input
          is_dd25v TYPE dd25v
        RAISING
          Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_VIEW definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_W3XX_SUPER

*"* local type definitions
*include zcl_abapgit_object_w3xx_super=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_W3XX_SUPER definition
*"* public declarations
*include zcl_abapgit_object_w3xx_super=cu.
CLASS Lcl_abapgit_object_w3xx_super DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  ABSTRACT
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .

    TYPES:
      ty_wwwparams_tt TYPE STANDARD TABLE OF wwwparams WITH DEFAULT KEY .

    CONSTANTS:
      BEGIN OF c_param_names,
        version  TYPE w3_name VALUE 'version',
        fileext  TYPE w3_name VALUE 'fileextension',
        filesize TYPE w3_name VALUE 'filesize',
        filename TYPE w3_name VALUE 'filename',
        mimetype TYPE w3_name VALUE 'mimetype',
      END OF c_param_names .

    METHODS constructor
      IMPORTING
        !is_item     TYPE Lif_abapgit_definitions=>ty_item
        !iv_language TYPE spras .
*"* protected declarations
*include zcl_abapgit_object_w3xx_super=co.
  PROTECTED SECTION.
    TYPES ty_bdcdata TYPE STANDARD TABLE OF bdcdata
                           WITH NON-UNIQUE DEFAULT KEY.

    METHODS change_bdc_jump_data ABSTRACT
      CHANGING
        ct_bdcdata TYPE ty_bdcdata.

*"* private declarations
*include zcl_abapgit_object_w3xx_super=ci.
  PRIVATE SECTION.

    DATA ms_key TYPE wwwdatatab.

    METHODS get_ext
      IMPORTING it_params     TYPE ty_wwwparams_tt
      RETURNING VALUE(rv_ext) TYPE string
      RAISING   Lcx_abapgit_exception.

    METHODS normalize_params
      IMPORTING iv_size   TYPE i
      CHANGING  ct_params TYPE ty_wwwparams_tt  " Param table to patch
      RAISING   Lcx_abapgit_exception.

    METHODS strip_params
      CHANGING ct_params TYPE ty_wwwparams_tt
      RAISING  Lcx_abapgit_exception.

    METHODS find_param
      IMPORTING it_params       TYPE ty_wwwparams_tt
                iv_name         TYPE w3_name
      RETURNING VALUE(rv_value) TYPE string
      RAISING   Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_W3XX_SUPER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_WAPA

*"* local type definitions
*include zcl_abapgit_object_wapa=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_WAPA definition
*"* public declarations
*include zcl_abapgit_object_wapa=======cu.
CLASS Lcl_abapgit_object_wapa DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_wapa=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_wapa=======ci.
  PRIVATE SECTION.
    TYPES: BEGIN OF ty_page,
             attributes     TYPE o2pagattr,
             event_handlers TYPE o2pagevh_tabletype,
             parameters     TYPE o2pagpar_tabletype,
             types          TYPE rswsourcet,
           END OF ty_page.

    TYPES: ty_pages_tt TYPE STANDARD TABLE OF ty_page WITH DEFAULT KEY.

    CONSTANTS: c_active TYPE so2_version VALUE 'A'.

    METHODS:
      get_page_content
        IMPORTING io_page           TYPE REF TO cl_o2_api_pages
        RETURNING VALUE(rv_content) TYPE xstring
        RAISING   Lcx_abapgit_exception,
      to_page_content
        IMPORTING iv_content        TYPE xstring
        RETURNING VALUE(rt_content) TYPE o2pageline_table
        RAISING   Lcx_abapgit_exception,
      read_page
        IMPORTING is_page         TYPE o2pagattr
                  iv_no_files_add TYPE abap_bool OPTIONAL
        RETURNING VALUE(rs_page)  TYPE ty_page
        RAISING   Lcx_abapgit_exception,
      create_new_application
        IMPORTING is_attributes TYPE o2applattr
                  it_nodes      TYPE o2applnode_table
                  it_navgraph   TYPE o2applgrap_table
        RETURNING VALUE(ro_bsp) TYPE REF TO cl_o2_api_application
        RAISING   Lcx_abapgit_exception,
      create_new_page
        IMPORTING
          is_page_attributes TYPE o2pagattr
        RETURNING
          VALUE(ro_page)     TYPE REF TO cl_o2_api_pages
        RAISING
          Lcx_abapgit_exception,
      delete_superfluous_pages
        IMPORTING
          it_local_pages  TYPE o2pagelist
          it_remote_pages TYPE ty_pages_tt
        RAISING
          Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_WAPA definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_WDCA

*"* local type definitions
*include zcl_abapgit_object_wdca=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_WDCA definition
*"* public declarations
*include zcl_abapgit_object_wdca=======cu.
CLASS Lcl_abapgit_object_wdca DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_wdca=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_wdca=======ci.
  PRIVATE SECTION.

    METHODS read
      EXPORTING
        !es_outline TYPE wdy_cfg_outline_data
        !et_data    TYPE wdy_cfg_persist_data_appl_tab
      RAISING
        Lcx_abapgit_exception .
    METHODS save
      IMPORTING
        !is_outline   TYPE wdy_cfg_outline_data
        !it_data      TYPE wdy_cfg_persist_data_appl_tab
        !iv_package   TYPE devclass
        !iv_transport TYPE trkorr
      RAISING
        Lcx_abapgit_exception .
    METHODS delete
      IMPORTING
        !iv_package   TYPE devclass
        !iv_transport TYPE trkorr
      RAISING
        Lcx_abapgit_exception .
    METHODS check
      IMPORTING
        !it_messages TYPE cts_messages
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECT_WDCA definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_WDCC

*"* local type definitions
*include zcl_abapgit_object_wdcc=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_WDCC definition
*"* public declarations
*include zcl_abapgit_object_wdcc=======cu.
CLASS Lcl_abapgit_object_wdcc DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_wdcc=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_wdcc=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_WDCC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_WDYA

*"* local type definitions
*include zcl_abapgit_object_wdya=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_WDYA definition
*"* public declarations
*include zcl_abapgit_object_wdya=======cu.
CLASS Lcl_abapgit_object_wdya DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_wdya=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_wdya=======ci.
  PRIVATE SECTION.
    CONSTANTS c_longtext_id_wdya TYPE dokil-id VALUE 'WA'.

    METHODS read
      EXPORTING es_app        TYPE wdy_application
                et_properties TYPE wdy_app_property_table
      RAISING   Lcx_abapgit_exception.

    METHODS save
      IMPORTING is_app        TYPE wdy_application
                it_properties TYPE wdy_app_property_table
                iv_package    TYPE devclass
      RAISING   Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_WDYA definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_WDYN

*"* local type definitions
*include zcl_abapgit_object_wdyn=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_WDYN definition
*"* public declarations
*include zcl_abapgit_object_wdyn=======cu.
CLASS Lcl_abapgit_object_wdyn DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .
*"* protected declarations
*include zcl_abapgit_object_wdyn=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_wdyn=======ci.
  PRIVATE SECTION.

    CONSTANTS c_longtext_id_wc TYPE dokil-id VALUE 'WC' ##NO_TEXT.
    CONSTANTS c_longtext_id_wd TYPE dokil-id VALUE 'WD' ##NO_TEXT.
    CONSTANTS c_longtext_name_wc TYPE string VALUE 'LONGTEXTS_WC' ##NO_TEXT.

    DATA:
      mt_components TYPE TABLE OF wdy_ctlr_compo_vrs,
      mt_sources    TYPE TABLE OF wdy_ctlr_compo_source_vrs.

    METHODS:
      get_limu_objects
        RETURNING VALUE(rt_objects) TYPE wdy_md_transport_keys,
      read
        RETURNING VALUE(rs_component) TYPE wdy_component_metadata
        RAISING   Lcx_abapgit_exception,
      read_controller
        IMPORTING is_key               TYPE wdy_md_controller_key
        RETURNING VALUE(rs_controller) TYPE wdy_md_controller_meta_data
        RAISING   Lcx_abapgit_exception,
      read_definition
        IMPORTING is_key               TYPE wdy_md_component_key
        RETURNING VALUE(rs_definition) TYPE wdy_md_component_meta_data
        RAISING   Lcx_abapgit_exception,
      read_view
        IMPORTING is_key         TYPE wdy_md_view_key
        RETURNING VALUE(rs_view) TYPE wdy_md_view_meta_data
        RAISING   Lcx_abapgit_exception,
      recover_controller
        IMPORTING is_controller TYPE wdy_md_controller_meta_data
        RAISING   Lcx_abapgit_exception,
      recover_definition
        IMPORTING is_definition TYPE wdy_md_component_meta_data
                  iv_package    TYPE devclass
        RAISING   Lcx_abapgit_exception,
      recover_view
        IMPORTING is_view TYPE wdy_md_view_meta_data
        RAISING   Lcx_abapgit_exception,
      delta_controller
        IMPORTING is_controller   TYPE wdy_md_controller_meta_data
        RETURNING VALUE(rs_delta) TYPE svrs2_xversionable_object
        RAISING   Lcx_abapgit_exception,
      delta_definition
        IMPORTING is_definition     TYPE wdy_md_component_meta_data
                  VALUE(iv_package) TYPE devclass
        RETURNING VALUE(rs_delta)   TYPE svrs2_xversionable_object
        RAISING   Lcx_abapgit_exception,
      delta_view
        IMPORTING is_view         TYPE wdy_md_view_meta_data
        RETURNING VALUE(rs_delta) TYPE svrs2_xversionable_object
        RAISING   Lcx_abapgit_exception,
      add_fm_param_exporting
        IMPORTING iv_name  TYPE string
                  ig_value TYPE any
        CHANGING  ct_param TYPE abap_func_parmbind_tab,
      add_fm_param_tables
        IMPORTING iv_name  TYPE string
        CHANGING  ct_value TYPE ANY TABLE
                  ct_param TYPE abap_func_parmbind_tab,
      add_fm_exception
        IMPORTING iv_name      TYPE string
                  iv_value     TYPE i
        CHANGING  ct_exception TYPE abap_func_excpbind_tab,
      add_with_inactive_parts
        RAISING
          Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_WDYN definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_WEBI

*"* local type definitions
*include zcl_abapgit_object_webi=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_WEBI definition
*"* public declarations
*include zcl_abapgit_object_webi=======cu.
CLASS Lcl_abapgit_object_webi DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

*"* protected declarations
*include zcl_abapgit_object_webi=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_webi=======ci.
  PRIVATE SECTION.
    TYPES: BEGIN OF ty_webi,
             veptext         TYPE veptext,
             pvepheader      TYPE STANDARD TABLE OF vepheader WITH DEFAULT KEY,
             pvepfunction    TYPE STANDARD TABLE OF vepfunction WITH DEFAULT KEY,
             pvepfault       TYPE STANDARD TABLE OF vepfault WITH DEFAULT KEY,
             pvepparameter   TYPE STANDARD TABLE OF vepparameter WITH DEFAULT KEY,
             pveptype        TYPE STANDARD TABLE OF veptype WITH DEFAULT KEY,
             pvepelemtype    TYPE STANDARD TABLE OF vepelemtype WITH DEFAULT KEY,
             pveptabletype   TYPE STANDARD TABLE OF veptabletype WITH DEFAULT KEY,
             pvepstrutype    TYPE STANDARD TABLE OF vepstrutype WITH DEFAULT KEY,
             pveptypesoapext TYPE STANDARD TABLE OF veptypesoapext WITH DEFAULT KEY,
             pvepeletypsoap  TYPE STANDARD TABLE OF vepeletypsoap WITH DEFAULT KEY,
             pveptabtypsoap  TYPE STANDARD TABLE OF veptabtypsoap WITH DEFAULT KEY,
             pvepfuncsoapext TYPE STANDARD TABLE OF vepfuncsoapext WITH DEFAULT KEY,
             pvepfieldref    TYPE STANDARD TABLE OF vepfieldref WITH DEFAULT KEY,
             pvependpoint    TYPE STANDARD TABLE OF vependpoint WITH DEFAULT KEY,
             pvepvisoapext   TYPE STANDARD TABLE OF vepvisoapext WITH DEFAULT KEY,
             pvepparasoapext TYPE STANDARD TABLE OF vepparasoapext WITH DEFAULT KEY,
             pwsheader       TYPE STANDARD TABLE OF wsheader WITH DEFAULT KEY,
             pwssoapprop     TYPE STANDARD TABLE OF wssoapprop WITH DEFAULT KEY,
           END OF ty_webi.

    DATA: mi_vi TYPE REF TO if_ws_md_vif.

    METHODS:
      handle_endpoint
        IMPORTING is_webi TYPE ty_webi
        RAISING   Lcx_abapgit_exception
                  cx_ws_md_exception,
      handle_types
        IMPORTING is_webi TYPE ty_webi
        RAISING   Lcx_abapgit_exception
                  cx_ws_md_exception,
      handle_soap
        IMPORTING is_webi TYPE ty_webi
        RAISING   Lcx_abapgit_exception
                  cx_ws_md_exception,
      handle_function
        IMPORTING is_webi TYPE ty_webi
        RAISING   Lcx_abapgit_exception
                  cx_ws_md_exception.
    METHODS handle_single_parameter
      IMPORTING
        iv_parameter_type   TYPE vepparamtype
        iv_name             TYPE vepparameter-vepparam
        ii_function         TYPE REF TO if_ws_md_vif_func
      RETURNING
        VALUE(ri_parameter) TYPE REF TO if_ws_md_vif_param
      RAISING
        Lcx_abapgit_exception
        cx_ws_md_exception.
    METHODS sort
      CHANGING
        cs_webi TYPE ty_webi.

endclass. "ZCL_ABAPGIT_OBJECT_WEBI definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_XINX

*"* local type definitions
*include zcl_abapgit_object_xinx=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_XINX definition
*"* public declarations
*include zcl_abapgit_object_xinx=======cu.
CLASS Lcl_abapgit_object_xinx DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    METHODS:
      constructor
        IMPORTING
          is_item     TYPE Lif_abapgit_definitions=>ty_item
          iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_xinx=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_xinx=======ci.
  PRIVATE SECTION.
    TYPES:
      BEGIN OF ty_extension_index,
        dd12v   TYPE dd12v,
        t_dd17v TYPE STANDARD TABLE OF dd17v
                   WITH NON-UNIQUE DEFAULT KEY,
      END OF ty_extension_index.

    CONSTANTS:
      c_objtype_extension_index   TYPE trobjtype VALUE 'XINX'.

    CONSTANTS c_longtext_id_xinx TYPE dokil-id VALUE 'XI'.

    DATA:
      mv_name TYPE ddobjname,
      mv_id   TYPE ddobjectid.

    METHODS:
      xinx_delete_docu
        IMPORTING
          iv_objname TYPE ddobjname
          iv_id      TYPE ddobjectid.

endclass. "ZCL_ABAPGIT_OBJECT_XINX definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_XSLT

*"* local type definitions
*include zcl_abapgit_object_xslt=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_XSLT definition
*"* public declarations
*include zcl_abapgit_object_xslt=======cu.
CLASS Lcl_abapgit_object_xslt DEFINITION  INHERITING FROM Lcl_abapgit_objects_super FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_xslt=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_xslt=======ci.
  PRIVATE SECTION.
    METHODS:
      get
        RETURNING VALUE(ro_xslt) TYPE REF TO cl_o2_api_xsltdesc
        RAISING   Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_OBJECT_XSLT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OO_BASE

*"* local type definitions
*include zcl_abapgit_oo_base===========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OO_BASE definition
*"* public declarations
*include zcl_abapgit_oo_base===========cu.
CLASS Lcl_abapgit_oo_base DEFINITION
*public
  ABSTRACT
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_oo_object_fnc .
    CONSTANTS c_cp_program_type TYPE c LENGTH 1 VALUE 'K'.
    CONSTANTS c_include_program_type TYPE c LENGTH 1 VALUE 'I'.
    CONSTANTS c_ip_program_type TYPE c LENGTH 1 VALUE 'J'.
*"* protected declarations
*include zcl_abapgit_oo_base===========co.
  PROTECTED SECTION.
    CLASS-METHODS:
      convert_attrib_to_vseoattrib
        IMPORTING iv_clsname           TYPE seoclsname
                  it_attributes        TYPE Lif_abapgit_definitions=>ty_obj_attribute_tt
        RETURNING VALUE(rt_vseoattrib) TYPE seoo_attributes_r.

*"* private declarations
*include zcl_abapgit_oo_base===========ci.
  PRIVATE SECTION.
    CONSTANTS c_docu_state_active TYPE dokstate VALUE 'A'. " See include SDOC_CONSTANTS

    DATA mv_skip_test_classes TYPE abap_bool .

endclass. "ZCL_ABAPGIT_OO_BASE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OO_CLASS

*"* local type definitions
*include zcl_abapgit_oo_class==========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OO_CLASS definition
*"* public declarations
*include zcl_abapgit_oo_class==========cu.
CLASS Lcl_abapgit_oo_class DEFINITION
*public
  INHERITING FROM Lcl_abapgit_oo_base
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS Lif_abapgit_oo_object_fnc~create
        REDEFINITION .
    METHODS Lif_abapgit_oo_object_fnc~create_sotr
        REDEFINITION .
    METHODS Lif_abapgit_oo_object_fnc~delete
        REDEFINITION .
    METHODS Lif_abapgit_oo_object_fnc~deserialize_source
        REDEFINITION .
    METHODS Lif_abapgit_oo_object_fnc~generate_locals
        REDEFINITION .
    METHODS Lif_abapgit_oo_object_fnc~get_class_properties
        REDEFINITION .
    METHODS Lif_abapgit_oo_object_fnc~get_includes
        REDEFINITION .
    METHODS Lif_abapgit_oo_object_fnc~insert_text_pool
        REDEFINITION .
    METHODS Lif_abapgit_oo_object_fnc~read_sotr
        REDEFINITION .
    METHODS Lif_abapgit_oo_object_fnc~read_text_pool
        REDEFINITION .
    METHODS Lif_abapgit_oo_object_fnc~exists
        REDEFINITION .
*"* protected declarations
*include zcl_abapgit_oo_class==========co.
  PROTECTED SECTION.

    TYPES:
      ty_char1 TYPE c LENGTH 1 .
    TYPES:
      ty_char2 TYPE c LENGTH 2 .
*"* private declarations
*include zcl_abapgit_oo_class==========ci.
  PRIVATE SECTION.

    CLASS-METHODS update_source_index
      IMPORTING
        !iv_clsname TYPE csequence
        !io_scanner TYPE REF TO cl_oo_source_scanner_class .
    CLASS-METHODS update_report
      IMPORTING
        !iv_program       TYPE syrepid
        !it_source        TYPE string_table
        !iv_package       TYPE devclass
        !iv_version       TYPE uccheck
      RETURNING
        VALUE(rv_updated) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS generate_classpool
      IMPORTING
        !iv_name TYPE seoclsname
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS update_meta
      IMPORTING
        !iv_name     TYPE seoclsname
        !iv_exposure TYPE seoexpose
        !it_source   TYPE rswsourcet
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS determine_method_include
      IMPORTING
        !iv_name          TYPE seoclsname
        !iv_method        TYPE seocpdname
      RETURNING
        VALUE(rv_program) TYPE syrepid
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS init_scanner
      IMPORTING
        !it_source        TYPE Lif_abapgit_definitions=>ty_string_tt
        !iv_name          TYPE seoclsname
      RETURNING
        VALUE(ro_scanner) TYPE REF TO cl_oo_source_scanner_class
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS update_full_class_include
      IMPORTING
        !iv_classname TYPE seoclsname
        !it_source    TYPE string_table
        !it_methods   TYPE cl_oo_source_scanner_class=>type_method_implementations
        !iv_package   TYPE devclass
        !iv_version   TYPE uccheck
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS create_report
      IMPORTING
        !iv_program      TYPE syrepid
        !it_source       TYPE string_table
        !iv_extension    TYPE ty_char2
        !iv_program_type TYPE ty_char1
        !iv_state        TYPE r3state
        !iv_package      TYPE devclass
        !iv_version      TYPE uccheck
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS update_cs_number_of_methods
      IMPORTING
        !iv_classname              TYPE seoclsname
        !iv_number_of_impl_methods TYPE i .
    CLASS-METHODS delete_report
      IMPORTING
        !iv_program TYPE syrepid
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS get_method_includes
      IMPORTING
        !iv_classname      TYPE seoclsname
      RETURNING
        VALUE(rt_includes) TYPE seop_methods_w_include.
    CLASS-METHODS repair_classpool
      IMPORTING
        !is_key TYPE seoclskey
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS repair_redefinitions
      IMPORTING
        !is_key TYPE seoclskey
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OO_CLASS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OO_INTERFACE

*"* local type definitions
*include zcl_abapgit_oo_interface======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OO_INTERFACE definition
*"* public declarations
*include zcl_abapgit_oo_interface======cu.
CLASS Lcl_abapgit_oo_interface DEFINITION
*public
  INHERITING FROM Lcl_abapgit_oo_base
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS Lif_abapgit_oo_object_fnc~create
        REDEFINITION .
    METHODS Lif_abapgit_oo_object_fnc~delete
        REDEFINITION .
    METHODS Lif_abapgit_oo_object_fnc~get_includes
        REDEFINITION .
    METHODS Lif_abapgit_oo_object_fnc~get_interface_properties
        REDEFINITION .
    METHODS Lif_abapgit_oo_object_fnc~deserialize_source
        REDEFINITION .
    METHODS Lif_abapgit_oo_object_fnc~exists
        REDEFINITION .
*"* protected declarations
*include zcl_abapgit_oo_interface======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_oo_interface======ci.
  PRIVATE SECTION.

    CLASS-METHODS update_report
      IMPORTING
        !iv_program       TYPE syrepid
        !it_source        TYPE string_table
        !iv_package       TYPE devclass
        !iv_version       TYPE uccheck
      RETURNING
        VALUE(rv_updated) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS update_meta
      IMPORTING
        !iv_name   TYPE seoclsname
        !it_source TYPE rswsourcet
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS init_scanner
      IMPORTING
        !it_source        TYPE Lif_abapgit_definitions=>ty_string_tt
        !iv_name          TYPE seoclsname
      RETURNING
        VALUE(ro_scanner) TYPE REF TO cl_oo_source_scanner_interface
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OO_INTERFACE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OO_SERIALIZER

*"* local type definitions
*include zcl_abapgit_oo_serializer=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OO_SERIALIZER definition
*"* public declarations
*include zcl_abapgit_oo_serializer=====cu.
CLASS Lcl_abapgit_oo_serializer DEFINITION
*public
  CREATE PUBLIC


.

  PUBLIC SECTION.

    METHODS serialize_abap_clif_source
      IMPORTING
        !is_class_key    TYPE seoclskey
      RETURNING
        VALUE(rt_source) TYPE Lif_abapgit_definitions=>ty_string_tt
      RAISING
        Lcx_abapgit_exception
        cx_sy_dyn_call_error .
    METHODS are_test_classes_skipped
      RETURNING
        VALUE(rv_return) TYPE abap_bool .
    METHODS serialize_locals_imp
      IMPORTING
        !is_clskey       TYPE seoclskey
      RETURNING
        VALUE(rt_source) TYPE Lif_abapgit_definitions=>ty_string_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS serialize_locals_def
      IMPORTING
        !is_clskey       TYPE seoclskey
      RETURNING
        VALUE(rt_source) TYPE Lif_abapgit_definitions=>ty_string_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS serialize_testclasses
      IMPORTING
        !is_clskey       TYPE seoclskey
      RETURNING
        VALUE(rt_source) TYPE Lif_abapgit_definitions=>ty_string_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS serialize_macros
      IMPORTING
        !is_clskey       TYPE seoclskey
      RETURNING
        VALUE(rt_source) TYPE Lif_abapgit_definitions=>ty_string_tt
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_oo_serializer=====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_oo_serializer=====ci.
  PRIVATE SECTION.

    DATA mv_skip_testclass TYPE abap_bool .

    METHODS calculate_skip_testclass
      IMPORTING
        !it_source               TYPE Lif_abapgit_definitions=>ty_string_tt
      RETURNING
        VALUE(rv_skip_testclass) TYPE abap_bool .
    METHODS serialize_abap_old
      IMPORTING
        !is_clskey       TYPE seoclskey
      RETURNING
        VALUE(rt_source) TYPE Lif_abapgit_definitions=>ty_string_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS serialize_abap_new
      IMPORTING
        !is_clskey       TYPE seoclskey
      RETURNING
        VALUE(rt_source) TYPE Lif_abapgit_definitions=>ty_string_tt
      RAISING
        Lcx_abapgit_exception
        cx_sy_dyn_call_error .
    METHODS remove_signatures
      CHANGING
        !ct_source TYPE Lif_abapgit_definitions=>ty_string_tt .
    METHODS read_include
      IMPORTING
        !is_clskey       TYPE seoclskey
        !iv_type         TYPE seop_include_ext_app
      RETURNING
        VALUE(rt_source) TYPE seop_source_string
      RAISING
        Lcx_abapgit_exception.
    METHODS reduce
      CHANGING
        !ct_source TYPE Lif_abapgit_definitions=>ty_string_tt .
endclass. "ZCL_ABAPGIT_OO_SERIALIZER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_PERSISTENCE_DB

*"* local type definitions
*include zcl_abapgit_persistence_db====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_PERSISTENCE_DB definition
*"* public declarations
*include zcl_abapgit_persistence_db====cu.
CLASS Lcl_abapgit_persistence_db DEFINITION
*public
  CREATE PRIVATE .

  PUBLIC SECTION.
    CONSTANTS c_tabname TYPE c LENGTH 30 VALUE 'ZABAPGIT' ##NO_TEXT.
    CONSTANTS c_lock TYPE c LENGTH 30 VALUE 'EZABAPGIT' ##NO_TEXT.

    CONSTANTS:
      c_type_settings   TYPE Lif_abapgit_persistence=>ty_type VALUE 'SETTINGS' ##NO_TEXT,
      c_type_repo       TYPE Lif_abapgit_persistence=>ty_type VALUE 'REPO' ##NO_TEXT,
      c_type_repo_csum  TYPE Lif_abapgit_persistence=>ty_type VALUE 'REPO_CS' ##NO_TEXT,
      c_type_background TYPE Lif_abapgit_persistence=>ty_type VALUE 'BACKGROUND' ##NO_TEXT,
      c_type_packages   TYPE Lif_abapgit_persistence=>ty_type VALUE 'PACKAGES' ##NO_TEXT,
      c_type_user       TYPE Lif_abapgit_persistence=>ty_type VALUE 'USER' ##NO_TEXT.

    CLASS-METHODS get_instance
      RETURNING
        VALUE(ro_db) TYPE REF TO Lcl_abapgit_persistence_db .
    METHODS add
      IMPORTING
        !iv_type  TYPE Lif_abapgit_persistence=>ty_type
        !iv_value TYPE Lif_abapgit_persistence=>ty_content-value
        !iv_data  TYPE Lif_abapgit_persistence=>ty_content-data_str
      RAISING
        Lcx_abapgit_exception .
    METHODS delete
      IMPORTING
        !iv_type  TYPE Lif_abapgit_persistence=>ty_type
        !iv_value TYPE Lif_abapgit_persistence=>ty_content-value
      RAISING
        Lcx_abapgit_exception .
    METHODS list
      RETURNING
        VALUE(rt_content) TYPE Lif_abapgit_persistence=>ty_contents .
    METHODS list_by_type
      IMPORTING
        !iv_type          TYPE Lif_abapgit_persistence=>ty_type
      RETURNING
        VALUE(rt_content) TYPE Lif_abapgit_persistence=>ty_contents .
    METHODS list_by_keys
      IMPORTING it_keys            TYPE Lif_abapgit_persistence=>ty_repo_keys
                iv_type            TYPE Lif_abapgit_persistence=>ty_type
      RETURNING VALUE(rt_contents) TYPE Lif_abapgit_persistence=>ty_contents.
    METHODS lock
      IMPORTING
        !iv_mode  TYPE enqmode DEFAULT 'E'
        !iv_type  TYPE Lif_abapgit_persistence=>ty_type
        !iv_value TYPE Lif_abapgit_persistence=>ty_content-value
      RAISING
        Lcx_abapgit_exception .
    METHODS modify
      IMPORTING
        !iv_type  TYPE Lif_abapgit_persistence=>ty_type
        !iv_value TYPE Lif_abapgit_persistence=>ty_content-value
        !iv_data  TYPE Lif_abapgit_persistence=>ty_content-data_str
      RAISING
        Lcx_abapgit_exception .
    METHODS read
      IMPORTING
        !iv_type       TYPE Lif_abapgit_persistence=>ty_type
        !iv_value      TYPE Lif_abapgit_persistence=>ty_content-value
      RETURNING
        VALUE(rv_data) TYPE Lif_abapgit_persistence=>ty_content-data_str
      RAISING
        Lcx_abapgit_not_found .
    METHODS update
      IMPORTING
        !iv_type  TYPE Lif_abapgit_persistence=>ty_type
        !iv_value TYPE Lif_abapgit_persistence=>ty_content-value
        !iv_data  TYPE Lif_abapgit_persistence=>ty_content-data_str
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS validate_entry_type
      IMPORTING
        !iv_type  TYPE Lif_abapgit_persistence=>ty_type
      RAISING
        Lcx_abapgit_exception .

*"* protected declarations
*include zcl_abapgit_persistence_db====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_persistence_db====ci.
  PRIVATE SECTION.

    CLASS-DATA go_db TYPE REF TO Lcl_abapgit_persistence_db .
    DATA mv_update_function TYPE funcname .

    METHODS get_update_function
      RETURNING
        VALUE(rv_funcname) TYPE funcname .
    METHODS validate_and_unprettify_xml
      IMPORTING
        !iv_xml       TYPE string
      RETURNING
        VALUE(rv_xml) TYPE string
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_PERSISTENCE_DB definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_PERSISTENCE_REPO

*"* local type definitions
*include zcl_abapgit_persistence_repo==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_PERSISTENCE_REPO definition
*"* public declarations
*include zcl_abapgit_persistence_repo==cu.
CLASS Lcl_abapgit_persistence_repo DEFINITION
*public
  CREATE PROTECTED
  friends Lcl_abapgit_persist_factory .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_persist_repo .
    INTERFACES Lif_abapgit_persist_repo_cs .

    METHODS constructor .
    METHODS rewrite_repo_meta
      IMPORTING
        !iv_repo_key TYPE Lif_abapgit_persistence=>ty_repo-key
      RAISING
        Lcx_abapgit_exception
        Lcx_abapgit_not_found.
*"* protected declarations
*include zcl_abapgit_persistence_repo==co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_persistence_repo==ci.
  PRIVATE SECTION.

    DATA mt_meta_fields TYPE STANDARD TABLE OF abap_compname.
    DATA mo_db TYPE REF TO Lcl_abapgit_persistence_db .

    METHODS from_xml
      IMPORTING
        !iv_repo_xml_string TYPE string
      RETURNING
        VALUE(rs_repo)      TYPE Lif_abapgit_persistence=>ty_repo_xml
      RAISING
        Lcx_abapgit_exception .
    METHODS to_xml
      IMPORTING
        !is_repo                  TYPE Lif_abapgit_persistence=>ty_repo
      RETURNING
        VALUE(rv_repo_xml_string) TYPE string .
    METHODS get_next_id
      RETURNING
        VALUE(rv_next_repo_id) TYPE Lif_abapgit_persistence=>ty_content-value
      RAISING
        Lcx_abapgit_exception .
    METHODS get_repo_from_content
      IMPORTING
        is_content    TYPE Lif_abapgit_persistence=>ty_content
      RETURNING
        VALUE(rs_result) TYPE Lif_abapgit_persistence=>ty_repo
      RAISING
        Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_PERSISTENCE_REPO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_PERSISTENCE_USER

*"* local type definitions
*include zcl_abapgit_persistence_user==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_PERSISTENCE_USER definition
*"* public declarations
*include zcl_abapgit_persistence_user==cu.
CLASS Lcl_abapgit_persistence_user DEFINITION
*public
  CREATE PRIVATE .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_persist_user .

    CLASS-METHODS get_instance
      IMPORTING
        !iv_user       TYPE sy-uname DEFAULT sy-uname
      RETURNING
        VALUE(ri_user) TYPE REF TO Lif_abapgit_persist_user
      RAISING
        Lcx_abapgit_exception .
    METHODS constructor
      IMPORTING
        !iv_user TYPE sy-uname DEFAULT sy-uname
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_persistence_user==co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_persistence_user==ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_repo_config,
        url              TYPE Lif_abapgit_persistence=>ty_repo-url,
        login            TYPE string,
        git_user         TYPE Lif_abapgit_git_definitions=>ty_git_user,
        last_change_seen TYPE string,
      END OF ty_repo_config .
    TYPES:
      ty_repo_configs TYPE STANDARD TABLE OF ty_repo_config WITH DEFAULT KEY .
    TYPES:
      BEGIN OF ty_user,
        default_git_user TYPE Lif_abapgit_git_definitions=>ty_git_user,
        repo_show        TYPE Lif_abapgit_persistence=>ty_repo-key,
        hide_files       TYPE abap_bool,
        changes_only     TYPE abap_bool,
        order_by         TYPE string,
        order_descending TYPE abap_bool,
        diff_first       TYPE abap_bool,
        diff_unified     TYPE abap_bool,
        favorites        TYPE Lif_abapgit_persist_user=>ty_favorites,
        repo_config      TYPE ty_repo_configs,
        settings         TYPE Lif_abapgit_definitions=>ty_s_user_settings,
        show_folders     TYPE abap_bool,
        list_settings    TYPE Lif_abapgit_definitions=>ty_list_settings,
      END OF ty_user .

    DATA mv_user TYPE sy-uname .
    DATA ms_user TYPE ty_user.
    CLASS-DATA gi_current_user TYPE REF TO Lif_abapgit_persist_user .

    METHODS from_xml
      IMPORTING
        !iv_xml        TYPE string
      RETURNING
        VALUE(rs_user) TYPE ty_user
      RAISING
        Lcx_abapgit_exception .
    METHODS read
      RAISING
        Lcx_abapgit_exception .
    METHODS read_repo_config
      IMPORTING
        !iv_url               TYPE Lif_abapgit_persistence=>ty_repo-url
      RETURNING
        VALUE(rs_repo_config) TYPE ty_repo_config
      RAISING
        Lcx_abapgit_exception .
    METHODS to_xml
      IMPORTING
        !is_user      TYPE ty_user
      RETURNING
        VALUE(rv_xml) TYPE string .
    METHODS update
      RAISING
        Lcx_abapgit_exception .
    METHODS update_repo_config
      IMPORTING
        !iv_url         TYPE Lif_abapgit_persistence=>ty_repo-url
        !is_repo_config TYPE ty_repo_config
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_PERSISTENCE_USER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_PERSIST_BACKGROUND

*"* local type definitions
*include zcl_abapgit_persist_backgroundccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_PERSIST_BACKGROUND definition
*"* public declarations
*include zcl_abapgit_persist_backgroundcu.
CLASS Lcl_abapgit_persist_background DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    TYPES:
      BEGIN OF ty_xml,
        method   TYPE string,
        username TYPE string,
        password TYPE string,
        settings TYPE Lif_abapgit_background=>ty_settings_tt,
      END OF ty_xml .
    TYPES:
      BEGIN OF ty_background,
        key TYPE Lif_abapgit_persistence=>ty_value.
        INCLUDE TYPE ty_xml.
    TYPES: END OF ty_background .
    TYPES:
      ty_background_keys TYPE STANDARD TABLE OF ty_background WITH DEFAULT KEY .

    METHODS constructor .
    METHODS list
      RETURNING
        VALUE(rt_list) TYPE ty_background_keys
      RAISING
        Lcx_abapgit_exception .
    METHODS get_by_key
      IMPORTING
        !iv_key        TYPE ty_background-key
      RETURNING
        VALUE(rs_data) TYPE ty_background
      RAISING
        Lcx_abapgit_exception
        Lcx_abapgit_not_found .
    METHODS modify
      IMPORTING
        !is_data TYPE ty_background
      RAISING
        Lcx_abapgit_exception .
    METHODS delete
      IMPORTING
        !iv_key TYPE ty_background-key
      RAISING
        Lcx_abapgit_exception .
    METHODS exists
      IMPORTING
        !iv_key       TYPE ty_background-key
      RETURNING
        VALUE(rv_yes) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_persist_backgroundco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_persist_backgroundci.
  PRIVATE SECTION.

    DATA mo_db TYPE REF TO Lcl_abapgit_persistence_db .

    METHODS from_xml
      IMPORTING
        !iv_string    TYPE string
      RETURNING
        VALUE(rs_xml) TYPE ty_xml
      RAISING
        Lcx_abapgit_exception .
    METHODS to_xml
      IMPORTING
        !is_background   TYPE ty_background
      RETURNING
        VALUE(rv_string) TYPE string .
endclass. "ZCL_ABAPGIT_PERSIST_BACKGROUND definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_POPUPS

*"* local type definitions
*include zcl_abapgit_popups============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_POPUPS definition
*"* public declarations
*include zcl_abapgit_popups============cu.
CLASS Lcl_abapgit_popups DEFINITION
*public
  FINAL
  CREATE PRIVATE
  friends Lcl_abapgit_ui_factory .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_popups .

    CLASS-METHODS center
      IMPORTING
        !iv_width          TYPE i
        !iv_height         TYPE i
      RETURNING
        VALUE(rs_position) TYPE Lif_abapgit_popups=>ty_popup_position.

*"* protected declarations
*include zcl_abapgit_popups============co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_popups============ci.
  PRIVATE SECTION.

    TYPES:
      ty_lt_fields TYPE STANDARD TABLE OF sval WITH DEFAULT KEY .

    TYPES:
      BEGIN OF ty_commit_value_tab,
        commit   TYPE Lif_abapgit_git_definitions=>ty_sha1,
        message  TYPE c LENGTH 100,
        datetime TYPE c LENGTH 20,
      END OF ty_commit_value_tab.
    TYPES:
      ty_commit_value_tab_tt TYPE STANDARD TABLE OF ty_commit_value_tab WITH DEFAULT KEY.

    CONSTANTS c_answer_cancel      TYPE c LENGTH 1 VALUE 'A' ##NO_TEXT.

    DATA ms_position TYPE Lif_abapgit_popups=>ty_popup_position.
    TYPES ty_sval_tt TYPE STANDARD TABLE OF sval WITH DEFAULT KEY.

    METHODS add_field
      IMPORTING
        !iv_tabname    TYPE sval-tabname
        !iv_fieldname  TYPE sval-fieldname
        !iv_fieldtext  TYPE sval-fieldtext
        !iv_value      TYPE clike DEFAULT ''
        !iv_field_attr TYPE sval-field_attr DEFAULT ''
        !iv_obligatory TYPE spo_obl OPTIONAL
      CHANGING
        !ct_fields     TYPE ty_sval_tt .
    METHODS _popup_3_get_values
      IMPORTING
        !iv_popup_title    TYPE string
        !iv_no_value_check TYPE abap_bool DEFAULT abap_false
      EXPORTING
        !ev_value_1        TYPE spo_value
        !ev_value_2        TYPE spo_value
        !ev_value_3        TYPE spo_value
      CHANGING
        !ct_fields         TYPE ty_lt_fields
      RAISING
        Lcx_abapgit_exception .
    METHODS commit_list_build
      IMPORTING
        !iv_repo_url    TYPE string
        !iv_branch_name TYPE string
      EXPORTING
        !et_value_tab   TYPE ty_commit_value_tab_tt
        !et_commits     TYPE Lif_abapgit_git_definitions=>ty_commit_tt
      RAISING
        Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_POPUPS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_PO_FILE

*"* local type definitions
*include zcl_abapgit_po_file===========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_PO_FILE definition
*"* public declarations
*include zcl_abapgit_po_file===========cu.
CLASS Lcl_abapgit_po_file DEFINITION
*public
  FINAL
  CREATE PUBLIC


.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_i18n_file.

    METHODS constructor
      IMPORTING
        iv_lang TYPE laiso.

    METHODS parse
      IMPORTING
        iv_xdata TYPE xstring
      RAISING
        Lcx_abapgit_exception.

    METHODS push_text_pairs
      IMPORTING
        iv_objtype    TYPE trobjtype
        iv_objname    TYPE lxeobjname
        it_text_pairs TYPE Lif_abapgit_lxe_texts=>ty_text_pairs
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_po_file===========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_po_file===========ci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_comment,
        translator TYPE i VALUE 1,
        extracted  TYPE i VALUE 2,
        reference  TYPE i VALUE 3,
        flag       TYPE i VALUE 4,
        previous   TYPE i VALUE 5,
      END OF c_comment.
    TYPES:
      BEGIN OF ty_comment,
        kind TYPE i,
        text TYPE string,
      END OF ty_comment.
    TYPES:
      BEGIN OF ty_msg_pair,
        source   TYPE string,
        target   TYPE string,
        comments TYPE STANDARD TABLE OF ty_comment WITH KEY kind text,
      END OF ty_msg_pair.


    DATA mv_lang TYPE laiso.
    DATA mt_pairs TYPE SORTED TABLE OF ty_msg_pair WITH UNIQUE KEY source.

    METHODS build_po_body
      RETURNING
        VALUE(ro_buf) TYPE REF TO Lcl_abapgit_string_buffer.
    METHODS build_po_head
      RETURNING
        VALUE(ro_buf) TYPE REF TO Lcl_abapgit_string_buffer.
    METHODS parse_po
      IMPORTING
        iv_data TYPE string
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS get_comment_marker
      IMPORTING
        iv_comment_kind  TYPE i
      RETURNING
        VALUE(rv_marker) TYPE string.

    CLASS-METHODS quote
      IMPORTING
        iv_text        TYPE string
      RETURNING
        VALUE(rv_text) TYPE string.
    CLASS-METHODS unquote
      IMPORTING
        iv_text        TYPE string
      RETURNING
        VALUE(rv_text) TYPE string
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_PO_FILE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_PR_ENUM_GITHUB

*"* local type definitions
*include zcl_abapgit_pr_enum_github====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_PR_ENUM_GITHUB definition
*"* public declarations
*include zcl_abapgit_pr_enum_github====cu.
CLASS Lcl_abapgit_pr_enum_github DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_pr_enum_provider .

    METHODS constructor
      IMPORTING
        !iv_user_and_repo TYPE string
        !ii_http_agent    TYPE REF TO Lif_abapgit_http_agent
      RAISING
        Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_pr_enum_github====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_pr_enum_github====ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_info,
        repo_json TYPE REF TO Lif_abapgit_ajson,
        pulls     TYPE Lif_abapgit_pr_enum_provider=>ty_pull_requests,
      END OF ty_info.

    DATA mi_http_agent TYPE REF TO Lif_abapgit_http_agent.
    DATA mv_repo_url TYPE string.

    METHODS fetch_repo_by_url
      IMPORTING
        iv_repo_url    TYPE string
      RETURNING
        VALUE(rs_info) TYPE ty_info
      RAISING
        Lcx_abapgit_exception.

    METHODS convert_list
      IMPORTING
        ii_json         TYPE REF TO Lif_abapgit_ajson
      RETURNING
        VALUE(rt_pulls) TYPE Lif_abapgit_pr_enum_provider=>ty_pull_requests.

    METHODS clean_url
      IMPORTING
        iv_url        TYPE string
      RETURNING
        VALUE(rv_url) TYPE string.
endclass. "ZCL_ABAPGIT_PR_ENUM_GITHUB definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_REPO

*"* local type definitions
*include zcl_abapgit_repo==============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_REPO definition
*"* public declarations
*include zcl_abapgit_repo==============cu.
CLASS Lcl_abapgit_repo DEFINITION
*public
  ABSTRACT
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_repo .

    ALIASES ms_data
      FOR Lif_abapgit_repo~ms_data .
    ALIASES deserialize
      FOR Lif_abapgit_repo~deserialize .
    ALIASES deserialize_checks
      FOR Lif_abapgit_repo~deserialize_checks .
    ALIASES get_dot_abapgit
      FOR Lif_abapgit_repo~get_dot_abapgit .
    ALIASES get_tadir_objects
      FOR Lif_abapgit_repo~get_tadir_objects .
    ALIASES get_files_local
      FOR Lif_abapgit_repo~get_files_local .
    ALIASES get_files_local_filtered
      FOR Lif_abapgit_repo~get_files_local_filtered .
    ALIASES get_files_remote
      FOR Lif_abapgit_repo~get_files_remote .
    ALIASES get_key
      FOR Lif_abapgit_repo~get_key .
    ALIASES get_local_settings
      FOR Lif_abapgit_repo~get_local_settings .
    ALIASES get_name
      FOR Lif_abapgit_repo~get_name .
    ALIASES get_package
      FOR Lif_abapgit_repo~get_package .
    ALIASES is_offline
      FOR Lif_abapgit_repo~is_offline .
    ALIASES refresh
      FOR Lif_abapgit_repo~refresh .
    ALIASES set_dot_abapgit
      FOR Lif_abapgit_repo~set_dot_abapgit .
    ALIASES has_remote_source
      FOR Lif_abapgit_repo~has_remote_source .

    METHODS bind_listener
      IMPORTING
        !ii_listener TYPE REF TO Lif_abapgit_repo_listener .
    METHODS constructor
      IMPORTING
        !is_data TYPE Lif_abapgit_persistence=>ty_repo .
    METHODS create_new_log
      IMPORTING
        !iv_title     TYPE string OPTIONAL
      RETURNING
        VALUE(ri_log) TYPE REF TO Lif_abapgit_log .
    METHODS delete_checks
      RETURNING
        VALUE(rs_checks) TYPE Lif_abapgit_definitions=>ty_delete_checks
      RAISING
        Lcx_abapgit_exception .
    METHODS find_remote_dot_abapgit
      RETURNING
        VALUE(ro_dot) TYPE REF TO Lcl_abapgit_dot_abapgit
      RAISING
        Lcx_abapgit_exception .
    METHODS get_data_config
      RETURNING
        VALUE(ri_config) TYPE REF TO Lif_abapgit_data_config
      RAISING
        Lcx_abapgit_exception .
    METHODS get_dot_apack
      RETURNING
        VALUE(ro_dot_apack) TYPE REF TO Lcl_abapgit_apack_reader .
    METHODS get_log
      RETURNING
        VALUE(ri_log) TYPE REF TO Lif_abapgit_log .
    METHODS get_unsupported_objects_local
      RETURNING
        VALUE(rt_objects) TYPE Lif_abapgit_definitions=>ty_items_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS refresh_local_object
      IMPORTING
        !iv_obj_type TYPE tadir-object
        !iv_obj_name TYPE tadir-obj_name
      RAISING
        Lcx_abapgit_exception .
    METHODS refresh_local_objects
      RAISING
        Lcx_abapgit_exception .
    METHODS remove_ignored_files
      CHANGING
        !ct_files TYPE Lif_abapgit_git_definitions=>ty_files_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS set_files_remote
      IMPORTING
        !it_files TYPE Lif_abapgit_git_definitions=>ty_files_tt .
    METHODS set_local_settings
      IMPORTING
        !is_settings TYPE Lif_abapgit_persistence=>ty_repo-local_settings
      RAISING
        Lcx_abapgit_exception .
    METHODS switch_repo_type
      IMPORTING
        !iv_offline TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_repo==============co.
  PROTECTED SECTION.

    DATA mt_local TYPE Lif_abapgit_definitions=>ty_files_item_tt .
    DATA mt_remote TYPE Lif_abapgit_git_definitions=>ty_files_tt .
    DATA mv_request_local_refresh TYPE abap_bool .
    DATA mv_request_remote_refresh TYPE abap_bool .
    DATA mi_log TYPE REF TO Lif_abapgit_log .
    DATA mi_listener TYPE REF TO Lif_abapgit_repo_listener .
    DATA mo_apack_reader TYPE REF TO Lcl_abapgit_apack_reader .
    DATA mi_data_config TYPE REF TO Lif_abapgit_data_config .

    METHODS find_remote_dot_apack
      RETURNING
        VALUE(ro_dot) TYPE REF TO Lcl_abapgit_apack_reader
      RAISING
        Lcx_abapgit_exception .
    METHODS reset_remote .
    METHODS set
      IMPORTING
        !iv_url             TYPE Lif_abapgit_persistence=>ty_repo-url OPTIONAL
        !iv_branch_name     TYPE Lif_abapgit_persistence=>ty_repo-branch_name OPTIONAL
        !iv_selected_commit TYPE Lif_abapgit_persistence=>ty_repo-selected_commit OPTIONAL
        !iv_head_branch     TYPE Lif_abapgit_persistence=>ty_repo-head_branch OPTIONAL
        !iv_offline         TYPE Lif_abapgit_persistence=>ty_repo-offline OPTIONAL
        !is_dot_abapgit     TYPE Lif_abapgit_persistence=>ty_repo-dot_abapgit OPTIONAL
        !is_local_settings  TYPE Lif_abapgit_persistence=>ty_repo-local_settings OPTIONAL
        !iv_deserialized_at TYPE Lif_abapgit_persistence=>ty_repo-deserialized_at OPTIONAL
        !iv_deserialized_by TYPE Lif_abapgit_persistence=>ty_repo-deserialized_by OPTIONAL
        !iv_switched_origin TYPE Lif_abapgit_persistence=>ty_repo-switched_origin OPTIONAL
      RAISING
        Lcx_abapgit_exception .
    METHODS set_dot_apack
      IMPORTING
        !io_dot_apack TYPE REF TO Lcl_abapgit_apack_reader
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_repo==============ci.
  PRIVATE SECTION.

    METHODS check_language
      RAISING
        Lcx_abapgit_exception .
    METHODS check_write_protect
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_data
      IMPORTING
        !is_checks TYPE Lif_abapgit_definitions=>ty_deserialize_checks
      CHANGING
        !ct_files  TYPE Lif_abapgit_git_definitions=>ty_file_signatures_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_dot_abapgit
      CHANGING
        !ct_files TYPE Lif_abapgit_git_definitions=>ty_file_signatures_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_objects
      IMPORTING
        !is_checks TYPE Lif_abapgit_definitions=>ty_deserialize_checks
        !ii_log    TYPE REF TO Lif_abapgit_log
      CHANGING
        !ct_files  TYPE Lif_abapgit_git_definitions=>ty_file_signatures_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS normalize_local_settings
      CHANGING
        !cs_local_settings TYPE Lif_abapgit_persistence=>ty_local_settings .
    METHODS notify_listener
      IMPORTING
        !is_change_mask TYPE Lif_abapgit_persistence=>ty_repo_meta_mask
      RAISING
        Lcx_abapgit_exception .
    METHODS update_last_deserialize
      RAISING
        Lcx_abapgit_exception .
    METHODS check_abap_language_version
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_REPO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_REPO_CONTENT_LIST

*"* local type definitions
*include zcl_abapgit_repo_content_list=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_REPO_CONTENT_LIST definition
*"* public declarations
*include zcl_abapgit_repo_content_list=cu.
CLASS Lcl_abapgit_repo_content_list DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    METHODS constructor
      IMPORTING io_repo TYPE REF TO Lcl_abapgit_repo.

    METHODS list
      IMPORTING iv_path              TYPE string
                iv_by_folders        TYPE abap_bool OPTIONAL
                iv_changes_only      TYPE abap_bool OPTIONAL
                iv_transports        TYPE abap_bool OPTIONAL
      RETURNING VALUE(rt_repo_items) TYPE Lif_abapgit_definitions=>ty_repo_item_tt
      RAISING   Lcx_abapgit_exception.

    METHODS get_log
      RETURNING VALUE(ri_log) TYPE REF TO Lif_abapgit_log.
*"* protected declarations
*include zcl_abapgit_repo_content_list=co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_repo_content_list=ci.
  PRIVATE SECTION.
    CONSTANTS: BEGIN OF c_sortkey,
                 default    TYPE i VALUE 9999,
                 parent_dir TYPE i VALUE 0,
                 dir        TYPE i VALUE 1,
                 orphan     TYPE i VALUE 2,
                 changed    TYPE i VALUE 3,
                 inactive   TYPE i VALUE 4,
               END OF c_sortkey.

    DATA: mo_repo TYPE REF TO Lcl_abapgit_repo,
          mi_log  TYPE REF TO Lif_abapgit_log.

    METHODS build_repo_items
      RETURNING VALUE(rt_repo_items) TYPE Lif_abapgit_definitions=>ty_repo_item_tt
      RAISING   Lcx_abapgit_exception.

    METHODS build_folders
      IMPORTING iv_cur_dir    TYPE string
      CHANGING  ct_repo_items TYPE Lif_abapgit_definitions=>ty_repo_item_tt
      RAISING   Lcx_abapgit_exception.

    METHODS determine_transports
      CHANGING ct_repo_items TYPE Lif_abapgit_definitions=>ty_repo_item_tt.

    METHODS filter_changes
      CHANGING ct_repo_items TYPE Lif_abapgit_definitions=>ty_repo_item_tt.

    METHODS check_repo_size
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_REPO_CONTENT_LIST definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_REPO_CS_MIGRATION

*"* local type definitions
*include zcl_abapgit_repo_cs_migration=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_REPO_CS_MIGRATION definition
*"* public declarations
*include zcl_abapgit_repo_cs_migration=cu.
CLASS Lcl_abapgit_repo_cs_migration DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    CLASS-METHODS run
      RAISING
        Lcx_abapgit_exception
        Lcx_abapgit_not_found.
*"* protected declarations
*include zcl_abapgit_repo_cs_migration=co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_repo_cs_migration=ci.
  PRIVATE SECTION.
    TYPES:
      ty_repo_ids TYPE SORTED TABLE OF Lif_abapgit_persistence=>ty_repo-key WITH UNIQUE KEY table_line.

    CLASS-METHODS get_unconverted_repo_ids
      RETURNING
        VALUE(rt_repo_ids) TYPE ty_repo_ids.
    CLASS-METHODS clear_repo_metadata
      IMPORTING
        iv_repo_key TYPE Lif_abapgit_persistence=>ty_repo-key
      RAISING
        Lcx_abapgit_exception
        Lcx_abapgit_not_found.
    CLASS-METHODS convert_checksums
      IMPORTING
        iv_repo_key TYPE Lif_abapgit_persistence=>ty_repo-key
      RAISING
        Lcx_abapgit_exception
        Lcx_abapgit_not_found.

endclass. "ZCL_ABAPGIT_REPO_CS_MIGRATION definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_REPO_FILTER

*"* local type definitions
*include zcl_abapgit_repo_filter=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_REPO_FILTER definition
*"* public declarations
*include zcl_abapgit_repo_filter=======cu.
CLASS Lcl_abapgit_repo_filter DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    METHODS apply
      IMPORTING
        it_filter TYPE Lif_abapgit_definitions=>ty_tadir_tt
      CHANGING
        ct_tadir  TYPE Lif_abapgit_definitions=>ty_tadir_tt .

    METHODS apply_object_filter
      IMPORTING
        it_filter   TYPE Lif_abapgit_definitions=>ty_tadir_tt
        io_dot      TYPE REF TO Lcl_abapgit_dot_abapgit OPTIONAL
        iv_devclass TYPE devclass OPTIONAL
      CHANGING
        ct_files    TYPE Lif_abapgit_git_definitions=>ty_files_tt
      RAISING
        Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_repo_filter=======co.
  PROTECTED SECTION.

    METHODS filter_generated_tadir
      CHANGING
        !ct_tadir TYPE Lif_abapgit_definitions=>ty_tadir_tt .

*"* private declarations
*include zcl_abapgit_repo_filter=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_REPO_FILTER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_REPO_LABELS

*"* local type definitions
*include zcl_abapgit_repo_labels=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_REPO_LABELS definition
*"* public declarations
*include zcl_abapgit_repo_labels=======cu.
CLASS Lcl_abapgit_repo_labels DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    TYPES:
      BEGIN OF ty_label_color,
        label TYPE string,
        color TYPE string,
      END OF ty_label_color,
      ty_label_colors TYPE STANDARD TABLE OF ty_label_color WITH KEY label.

    TYPES:
      BEGIN OF ty_color,
        cls    TYPE string,
        fg     TYPE string,
        bg     TYPE string,
        border TYPE string,
      END OF ty_color.

    CONSTANTS c_allowed_chars TYPE string VALUE `-_. a-zA-Z0-9` ##NO_TEXT.

    " it is easier to allow chars, though potentially other chars can be added later if needed
    CLASS-METHODS class_constructor.
    CLASS-METHODS validate
      IMPORTING
        !iv_labels TYPE string
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS split
      IMPORTING
        !iv_labels       TYPE string
      RETURNING
        VALUE(rt_labels) TYPE string_table.
    CLASS-METHODS normalize
      IMPORTING
        !iv_labels       TYPE string
      RETURNING
        VALUE(rv_labels) TYPE string.

    CLASS-METHODS validate_colors
      IMPORTING
        !iv_config TYPE string
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS split_colors
      IMPORTING
        !iv_config             TYPE string
      RETURNING
        VALUE(rt_label_colors) TYPE ty_label_colors.
    CLASS-METHODS split_colors_into_map
      IMPORTING
        !iv_config    TYPE string
      RETURNING
        VALUE(ro_map) TYPE REF TO Lcl_abapgit_string_map.
    CLASS-METHODS normalize_colors
      IMPORTING
        !iv_config       TYPE string
      RETURNING
        VALUE(rv_config) TYPE string.

    CLASS-METHODS parse_color
      IMPORTING
        iv_color         TYPE string
      RETURNING
        VALUE(rs_parsed) TYPE ty_color.

*"* protected declarations
*include zcl_abapgit_repo_labels=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_repo_labels=======ci.
  PRIVATE SECTION.
    CLASS-DATA gv_regex TYPE string.

    CLASS-METHODS validate_one_label_color
      IMPORTING
        !is_lc    TYPE ty_label_color
        !iv_index TYPE i DEFAULT 0
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS validate_rgb_color
      IMPORTING
        !iv_color TYPE string
        !iv_index TYPE i DEFAULT 0
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_REPO_LABELS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_REPO_OFFLINE

*"* local type definitions
*include zcl_abapgit_repo_offline======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_REPO_OFFLINE definition
*"* public declarations
*include zcl_abapgit_repo_offline======cu.
CLASS Lcl_abapgit_repo_offline DEFINITION
*public
  INHERITING FROM Lcl_abapgit_repo
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
*"* protected declarations
*include zcl_abapgit_repo_offline======co.
  PROTECTED SECTION.

    METHODS reset_remote
        REDEFINITION .
*"* private declarations
*include zcl_abapgit_repo_offline======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_REPO_OFFLINE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_REPO_ONLINE

*"* local type definitions
*include zcl_abapgit_repo_online=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_REPO_ONLINE definition
*"* public declarations
*include zcl_abapgit_repo_online=======cu.
CLASS Lcl_abapgit_repo_online DEFINITION
*public
  INHERITING FROM Lcl_abapgit_repo
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_repo_online .

    ALIASES create_branch
      FOR Lif_abapgit_repo_online~create_branch .
    ALIASES get_current_remote
      FOR Lif_abapgit_repo_online~get_current_remote .
    ALIASES get_selected_branch
      FOR Lif_abapgit_repo_online~get_selected_branch .
    ALIASES get_selected_commit
      FOR Lif_abapgit_repo_online~get_selected_commit .
    ALIASES get_url
      FOR Lif_abapgit_repo_online~get_url .
    ALIASES push
      FOR Lif_abapgit_repo_online~push .
    ALIASES select_branch
      FOR Lif_abapgit_repo_online~select_branch .
    ALIASES select_commit
      FOR Lif_abapgit_repo_online~select_commit .
    ALIASES set_url
      FOR Lif_abapgit_repo_online~set_url .
    ALIASES switch_origin
      FOR Lif_abapgit_repo_online~switch_origin .
    ALIASES get_switched_origin
      FOR Lif_abapgit_repo_online~get_switched_origin.



    METHODS Lif_abapgit_repo~get_files_remote
        REDEFINITION .
    METHODS Lif_abapgit_repo~get_name
        REDEFINITION .

*"* protected declarations
*include zcl_abapgit_repo_online=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_repo_online=======ci.
  PRIVATE SECTION.

    DATA mt_objects TYPE Lif_abapgit_definitions=>ty_objects_tt .
    DATA mv_current_commit TYPE Lif_abapgit_git_definitions=>ty_sha1 .

    METHODS handle_stage_ignore
      IMPORTING
        !io_stage TYPE REF TO Lcl_abapgit_stage
      RAISING
        Lcx_abapgit_exception .
    METHODS set_objects
      IMPORTING
        !it_objects TYPE Lif_abapgit_definitions=>ty_objects_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS fetch_remote
      RAISING
        Lcx_abapgit_exception .
    METHODS get_objects
      RETURNING
        VALUE(rt_objects) TYPE Lif_abapgit_definitions=>ty_objects_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS raise_error_if_branch_exists
      IMPORTING
        iv_name TYPE string
      RAISING
        Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_REPO_ONLINE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_REPO_SRV

*"* local type definitions
*include zcl_abapgit_repo_srv==========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_REPO_SRV definition
*"* public declarations
*include zcl_abapgit_repo_srv==========cu.
CLASS Lcl_abapgit_repo_srv DEFINITION
*public
  FINAL
  CREATE PRIVATE .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_repo_srv .
    INTERFACES Lif_abapgit_repo_listener .

    CLASS-METHODS get_instance
      RETURNING
        VALUE(ri_srv) TYPE REF TO Lif_abapgit_repo_srv .
    CLASS-METHODS inject_instance
      IMPORTING
        ii_srv TYPE REF TO Lif_abapgit_repo_srv.

*"* protected declarations
*include zcl_abapgit_repo_srv==========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_repo_srv==========ci.
  PRIVATE SECTION.

    CLASS-DATA gi_ref TYPE REF TO Lif_abapgit_repo_srv .
    DATA mv_init TYPE abap_bool.
    DATA mv_only_favorites TYPE abap_bool.
    DATA mt_list TYPE Lif_abapgit_repo_srv=>ty_repo_list .

    METHODS determine_branch_name
      IMPORTING
        !iv_name       TYPE string
        !iv_url        TYPE string
      RETURNING
        VALUE(rv_name) TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS refresh_all
      RAISING
        Lcx_abapgit_exception .
    METHODS refresh_favorites
      RAISING
        Lcx_abapgit_exception .
    METHODS instantiate_and_add
      IMPORTING
        !is_repo_meta  TYPE Lif_abapgit_persistence=>ty_repo
      RETURNING
        VALUE(ri_repo) TYPE REF TO Lif_abapgit_repo
      RAISING
        Lcx_abapgit_exception .
    METHODS add
      IMPORTING
        !ii_repo TYPE REF TO Lif_abapgit_repo
      RAISING
        Lcx_abapgit_exception .
    METHODS reinstantiate_repo
      IMPORTING
        !iv_key  TYPE Lif_abapgit_persistence=>ty_repo-key
        !is_meta TYPE Lif_abapgit_persistence=>ty_repo_xml
      RAISING
        Lcx_abapgit_exception .
    METHODS validate_sub_super_packages
      IMPORTING
        !iv_package    TYPE devclass
        !it_repos      TYPE Lif_abapgit_persistence=>ty_repos
        !iv_ign_subpkg TYPE abap_bool DEFAULT abap_false
      EXPORTING
        VALUE(ei_repo) TYPE REF TO Lif_abapgit_repo
        !ev_reason     TYPE string
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_REPO_SRV definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_REQUIREMENT_HELPER

*"* local type definitions
*include zcl_abapgit_requirement_helperccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_REQUIREMENT_HELPER definition
*"* public declarations
*include zcl_abapgit_requirement_helpercu.
CLASS Lcl_abapgit_requirement_helper DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS requirements_popup
      IMPORTING
        !it_requirements TYPE Lif_abapgit_dot_abapgit=>ty_requirement_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS is_requirements_met
      IMPORTING
        !it_requirements TYPE Lif_abapgit_dot_abapgit=>ty_requirement_tt
      RETURNING
        VALUE(rv_status) TYPE Lif_abapgit_definitions=>ty_yes_no
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_requirement_helperco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_requirement_helperci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_requirement_status,
        met               TYPE abap_bool,
        component         TYPE tdevc-dlvunit,
        description       TYPE string,
        installed_release TYPE saprelease,
        installed_patch   TYPE sappatchlv,
        required_release  TYPE saprelease,
        required_patch    TYPE sappatchlv,
      END OF ty_requirement_status .
    TYPES:
      ty_requirement_status_tt TYPE STANDARD TABLE OF ty_requirement_status WITH DEFAULT KEY .

    CLASS-METHODS show_requirement_popup
      IMPORTING
        !it_requirements TYPE ty_requirement_status_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS get_requirement_met_status
      IMPORTING
        !it_requirements TYPE Lif_abapgit_dot_abapgit=>ty_requirement_tt
      RETURNING
        VALUE(rt_status) TYPE ty_requirement_status_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS is_version_greater_or_equal
      IMPORTING
        !is_status     TYPE ty_requirement_status
      RETURNING
        VALUE(rv_true) TYPE abap_bool .
endclass. "ZCL_ABAPGIT_REQUIREMENT_HELPER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SAP_NAMESPACE

*"* local type definitions
*include zcl_abapgit_sap_namespace=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SAP_NAMESPACE definition
*"* public declarations
*include zcl_abapgit_sap_namespace=====cu.
CLASS Lcl_abapgit_sap_namespace DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_sap_namespace.
*"* protected declarations
*include zcl_abapgit_sap_namespace=====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_sap_namespace=====ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_SAP_NAMESPACE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SAP_PACKAGE

*"* local type definitions
*include zcl_abapgit_sap_package=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SAP_PACKAGE definition
*"* public declarations
*include zcl_abapgit_sap_package=======cu.
CLASS Lcl_abapgit_sap_package DEFINITION
*public
  CREATE PRIVATE
  friends Lcl_abapgit_factory .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_sap_package .

    METHODS constructor
      IMPORTING
        !iv_package TYPE devclass .
*"* protected declarations
*include zcl_abapgit_sap_package=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_sap_package=======ci.
  PRIVATE SECTION.
    DATA: mv_package TYPE devclass.

    METHODS get_transport_layer
      RETURNING
        VALUE(rv_transport_layer) TYPE devlayer
      RAISING
        Lcx_abapgit_exception .

endclass. "ZCL_ABAPGIT_SAP_PACKAGE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SAP_REPORT

*"* local type definitions
*include zcl_abapgit_sap_report========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SAP_REPORT definition
*"* public declarations
*include zcl_abapgit_sap_report========cu.
CLASS Lcl_abapgit_sap_report DEFINITION
*public
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_sap_report.

*"* protected declarations
*include zcl_abapgit_sap_report========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_sap_report========ci.
  PRIVATE SECTION.

    METHODS authorization_check
      IMPORTING
        iv_mode TYPE csequence
        is_item TYPE Lif_abapgit_definitions=>ty_item
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_SAP_REPORT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SERVICES_GIT

*"* local type definitions
*include zcl_abapgit_services_git======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SERVICES_GIT definition
*"* public declarations
*include zcl_abapgit_services_git======cu.
CLASS Lcl_abapgit_services_git DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    CLASS-METHODS pull
      IMPORTING
        !iv_key TYPE Lif_abapgit_persistence=>ty_repo-key
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS create_branch
      IMPORTING
        !iv_key TYPE Lif_abapgit_persistence=>ty_repo-key
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS switch_branch
      IMPORTING
        !iv_key TYPE Lif_abapgit_persistence=>ty_repo-key
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS delete_branch
      IMPORTING
        !iv_key TYPE Lif_abapgit_persistence=>ty_repo-key
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS delete_tag
      IMPORTING
        !iv_key TYPE Lif_abapgit_persistence=>ty_repo-key
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS switch_tag
      IMPORTING
        !iv_key TYPE Lif_abapgit_persistence=>ty_repo-key
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS commit
      IMPORTING
        !io_repo   TYPE REF TO Lcl_abapgit_repo_online
        !is_commit TYPE Lif_abapgit_services_git=>ty_commit_fields
        !io_stage  TYPE REF TO Lcl_abapgit_stage
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_services_git======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_services_git======ci.
  PRIVATE SECTION.

endclass. "ZCL_ABAPGIT_SERVICES_GIT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SETTINGS

*"* local type definitions
*include zcl_abapgit_settings==========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SETTINGS definition
*"* public declarations
*include zcl_abapgit_settings==========cu.
CLASS Lcl_abapgit_settings DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    CONSTANTS c_commitmsg_comment_length_dft TYPE i VALUE 50 ##NO_TEXT.
    CONSTANTS c_commitmsg_body_size_dft TYPE i VALUE 72 ##NO_TEXT.
    CONSTANTS:
      BEGIN OF c_icon_scaling,
        large TYPE c VALUE 'L',
        small TYPE c VALUE 'S',
      END OF c_icon_scaling .
    CONSTANTS:
      BEGIN OF c_ui_theme,
        default         TYPE string VALUE 'default',
        dark            TYPE string VALUE 'dark',
        belize          TYPE string VALUE 'belize',
        synced_with_gui TYPE string VALUE 'synced_with_gui',
      END OF c_ui_theme .

    METHODS set_proxy_url
      IMPORTING
        !iv_url TYPE string .
    METHODS set_proxy_port
      IMPORTING
        !iv_port TYPE string .
    METHODS set_proxy_authentication
      IMPORTING
        !iv_auth TYPE abap_bool .
    METHODS set_proxy_bypass
      IMPORTING
        !it_bypass TYPE Lif_abapgit_definitions=>ty_range_proxy_bypass_url OPTIONAL .
    METHODS get_proxy_url
      RETURNING
        VALUE(rv_proxy_url) TYPE string .
    METHODS get_proxy_port
      RETURNING
        VALUE(rv_port) TYPE string .
    METHODS get_proxy_authentication
      RETURNING
        VALUE(rv_auth) TYPE abap_bool .
    METHODS get_proxy_bypass
      RETURNING
        VALUE(rt_bypass) TYPE Lif_abapgit_definitions=>ty_range_proxy_bypass_url .
    METHODS set_run_critical_tests
      IMPORTING
        !iv_run TYPE abap_bool .
    METHODS get_run_critical_tests
      RETURNING
        VALUE(rv_run) TYPE abap_bool .
    METHODS set_experimental_features
      IMPORTING
        !iv_features TYPE string.
    METHODS get_experimental_features
      RETURNING
        VALUE(rv_features) TYPE string.
    METHODS set_max_lines
      IMPORTING
        !iv_lines TYPE i .
    METHODS get_max_lines
      RETURNING
        VALUE(rv_lines) TYPE i .
    METHODS set_adt_jump_enanbled
      IMPORTING
        !iv_adt_jump_enabled TYPE abap_bool .
    METHODS get_adt_jump_enabled
      RETURNING
        VALUE(rv_adt_jump_enabled) TYPE abap_bool .
    METHODS set_commitmsg_comment_length
      IMPORTING
        !iv_length TYPE i .
    METHODS get_commitmsg_comment_length
      RETURNING
        VALUE(rv_length) TYPE i .
    METHODS set_commitmsg_comment_default
      IMPORTING
        !iv_default TYPE string .
    METHODS get_commitmsg_comment_default
      RETURNING
        VALUE(rv_default) TYPE string .
    METHODS set_commitmsg_body_size
      IMPORTING
        !iv_length TYPE i .
    METHODS get_commitmsg_body_size
      RETURNING
        VALUE(rv_length) TYPE i .
    METHODS set_commitmsg_hide_author
      IMPORTING
        !iv_hide_author TYPE abap_bool.
    METHODS get_commitmsg_hide_author
      RETURNING
        VALUE(rv_hide_author) TYPE abap_bool.
    METHODS get_settings_xml
      RETURNING
        VALUE(rv_settings_xml) TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS get_user_settings
      RETURNING
        VALUE(rs_settings) TYPE Lif_abapgit_definitions=>ty_s_user_settings
      RAISING
        Lcx_abapgit_exception .
    METHODS set_xml_settings
      IMPORTING
        !iv_settings_xml TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS set_defaults .
    METHODS set_user_settings
      IMPORTING
        !is_user_settings TYPE Lif_abapgit_definitions=>ty_s_user_settings .
    METHODS get_show_default_repo
      RETURNING
        VALUE(rv_show_default_repo) TYPE abap_bool .
    METHODS set_show_default_repo
      IMPORTING
        !iv_show_default_repo TYPE abap_bool .
    METHODS set_link_hints_enabled
      IMPORTING
        !iv_link_hints_enabled TYPE abap_bool .
    METHODS get_link_hints_enabled
      RETURNING
        VALUE(rv_link_hints_enabled) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS set_link_hint_key
      IMPORTING
        !iv_link_hint_key TYPE string .
    METHODS get_link_hint_key
      RETURNING
        VALUE(rv_link_hint_key) TYPE string .
    METHODS set_parallel_proc_disabled
      IMPORTING
        !iv_disable_parallel_proc TYPE abap_bool .
    METHODS get_parallel_proc_disabled
      RETURNING
        VALUE(rv_disable_parallel_proc) TYPE abap_bool .
    METHODS get_icon_scaling
      RETURNING
        VALUE(rv_scaling) TYPE Lif_abapgit_definitions=>ty_s_user_settings-icon_scaling .
    METHODS set_icon_scaling
      IMPORTING
        !iv_scaling TYPE Lif_abapgit_definitions=>ty_s_user_settings-icon_scaling .
    METHODS get_ui_theme
      IMPORTING
        !iv_resolve_synced TYPE abap_bool DEFAULT abap_true
      RETURNING
        VALUE(rv_ui_theme) TYPE Lif_abapgit_definitions=>ty_s_user_settings-ui_theme .
    METHODS set_ui_theme
      IMPORTING
        !iv_ui_theme TYPE Lif_abapgit_definitions=>ty_s_user_settings-ui_theme .
    METHODS get_activate_wo_popup
      RETURNING
        VALUE(rv_act_wo_popup) TYPE Lif_abapgit_definitions=>ty_s_user_settings-activate_wo_popup .
    METHODS set_activate_wo_popup
      IMPORTING
        !iv_act_wo_popup TYPE Lif_abapgit_definitions=>ty_s_user_settings-activate_wo_popup .
*"* protected declarations
*include zcl_abapgit_settings==========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_settings==========ci.
  PRIVATE SECTION.
    TYPES: BEGIN OF ty_s_settings,
             proxy_url                TYPE string,
             proxy_port               TYPE string,
             proxy_auth               TYPE string,
             proxy_bypass             TYPE Lif_abapgit_definitions=>ty_range_proxy_bypass_url,
             run_critical_tests       TYPE abap_bool,
             experimental_features    TYPE string,
             commitmsg_comment_length TYPE i,
             commitmsg_comment_deflt  TYPE string,
             commitmsg_body_size      TYPE i,
             commitmsg_hide_author    TYPE abap_bool,
           END OF ty_s_settings.

    DATA: ms_settings      TYPE ty_s_settings,
          ms_user_settings TYPE Lif_abapgit_definitions=>ty_s_user_settings.

    METHODS:
      set_default_link_hint_key.

endclass. "ZCL_ABAPGIT_SETTINGS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SOTR_HANDLER

*"* local type definitions
*include zcl_abapgit_sotr_handler======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SOTR_HANDLER definition
*"* public declarations
*include zcl_abapgit_sotr_handler======cu.
CLASS Lcl_abapgit_sotr_handler DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    TYPES:
      BEGIN OF ty_sotr,
        header  TYPE sotr_head,
        entries TYPE sotr_text_tt,
      END OF ty_sotr .
    TYPES:
      ty_sotr_tt TYPE STANDARD TABLE OF ty_sotr WITH DEFAULT KEY .
    TYPES:
      ty_sotr_use_tt TYPE STANDARD TABLE OF sotr_use WITH DEFAULT KEY .

    CLASS-METHODS read_sotr
      IMPORTING
        !iv_pgmid    TYPE pgmid DEFAULT 'R3TR'
        !iv_object   TYPE trobjtype
        !iv_obj_name TYPE csequence
        !io_xml      TYPE REF TO Lif_abapgit_xml_output OPTIONAL
        !io_i18n_params TYPE REF TO Lcl_abapgit_i18n_params
      EXPORTING
        !et_sotr     TYPE ty_sotr_tt
        !et_sotr_use TYPE ty_sotr_use_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS create_sotr
      IMPORTING
        !iv_package TYPE devclass
        !io_xml     TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS create_sotr_from_data
      IMPORTING
        !iv_package  TYPE devclass
        !it_sotr     TYPE ty_sotr_tt
        !it_sotr_use TYPE ty_sotr_use_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS delete_sotr
      IMPORTING
        !iv_pgmid    TYPE pgmid DEFAULT 'R3TR'
        !iv_object   TYPE trobjtype
        !iv_obj_name TYPE csequence
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS delete_sotr_package
      IMPORTING
        !iv_package TYPE devclass
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_sotr_handler======co.
  PROTECTED SECTION.
    CLASS-METHODS get_sotr_usage
      IMPORTING
        !iv_pgmid          TYPE pgmid
        !iv_object         TYPE trobjtype
        !iv_obj_name       TYPE csequence
      RETURNING
        VALUE(rt_sotr_use) TYPE ty_sotr_use_tt.

    CLASS-METHODS get_sotr_4_concept
      IMPORTING
        !iv_concept    TYPE sotr_conc
      RETURNING
        VALUE(rs_sotr) TYPE ty_sotr .
*"* private declarations
*include zcl_abapgit_sotr_handler======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_SOTR_HANDLER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_STAGE

*"* local type definitions
*include zcl_abapgit_stage=============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_STAGE definition
*"* public declarations
*include zcl_abapgit_stage=============cu.
CLASS Lcl_abapgit_stage DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS method_description
      IMPORTING
        !iv_method            TYPE Lif_abapgit_definitions=>ty_method
      RETURNING
        VALUE(rv_description) TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS constructor
      IMPORTING
        !iv_merge_source TYPE Lif_abapgit_git_definitions=>ty_sha1 OPTIONAL .
    METHODS add
      IMPORTING
        !iv_path     TYPE Lif_abapgit_git_definitions=>ty_file-path
        !iv_filename TYPE Lif_abapgit_git_definitions=>ty_file-filename
        !iv_data     TYPE xstring
        !is_status   TYPE Lif_abapgit_definitions=>ty_result OPTIONAL
      RAISING
        Lcx_abapgit_exception .
    METHODS reset
      IMPORTING
        !iv_path     TYPE Lif_abapgit_git_definitions=>ty_file-path
        !iv_filename TYPE Lif_abapgit_git_definitions=>ty_file-filename
      RAISING
        Lcx_abapgit_exception .
    METHODS rm
      IMPORTING
        !iv_path     TYPE Lif_abapgit_git_definitions=>ty_file-path
        !iv_filename TYPE Lif_abapgit_git_definitions=>ty_file-filename
        !is_status   TYPE Lif_abapgit_definitions=>ty_result OPTIONAL
      RAISING
        Lcx_abapgit_exception .
    METHODS ignore
      IMPORTING
        !iv_path     TYPE Lif_abapgit_git_definitions=>ty_file-path
        !iv_filename TYPE Lif_abapgit_git_definitions=>ty_file-filename
      RAISING
        Lcx_abapgit_exception .
    METHODS get_merge_source
      RETURNING
        VALUE(rv_source) TYPE Lif_abapgit_git_definitions=>ty_sha1 .
    METHODS count
      RETURNING
        VALUE(rv_count) TYPE i .
    METHODS get_all
      RETURNING
        VALUE(rt_stage) TYPE Lif_abapgit_definitions=>ty_stage_tt .
*"* protected declarations
*include zcl_abapgit_stage=============co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_stage=============ci.
  PRIVATE SECTION.

    DATA mt_stage TYPE Lif_abapgit_definitions=>ty_stage_tt .
    DATA mv_merge_source TYPE Lif_abapgit_git_definitions=>ty_sha1 .

    METHODS append
      IMPORTING
        !iv_path     TYPE Lif_abapgit_git_definitions=>ty_file-path
        !iv_filename TYPE Lif_abapgit_git_definitions=>ty_file-filename
        !iv_method   TYPE Lif_abapgit_definitions=>ty_method
        !is_status   TYPE Lif_abapgit_definitions=>ty_result OPTIONAL
        !iv_data     TYPE xstring OPTIONAL
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_STAGE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_STAGE_LOGIC

*"* local type definitions
*include zcl_abapgit_stage_logic=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_STAGE_LOGIC definition
*"* public declarations
*include zcl_abapgit_stage_logic=======cu.
CLASS Lcl_abapgit_stage_logic DEFINITION
*public
  CREATE PRIVATE
  friends Lcl_abapgit_factory .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_stage_logic .
*"* protected declarations
*include zcl_abapgit_stage_logic=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_stage_logic=======ci.
  PRIVATE SECTION.
    CLASS-METHODS:
      remove_ignored
        IMPORTING io_repo  TYPE REF TO Lcl_abapgit_repo_online
        CHANGING  cs_files TYPE Lif_abapgit_definitions=>ty_stage_files,
      remove_identical
        CHANGING cs_files TYPE Lif_abapgit_definitions=>ty_stage_files.

endclass. "ZCL_ABAPGIT_STAGE_LOGIC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SYNTAX_ABAP

*"* local type definitions
*include zcl_abapgit_syntax_abap=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SYNTAX_ABAP definition
*"* public declarations
*include zcl_abapgit_syntax_abap=======cu.
CLASS Lcl_abapgit_syntax_abap DEFINITION
*public
  INHERITING FROM Lcl_abapgit_syntax_highlighter
  CREATE PUBLIC



.

  PUBLIC SECTION.
    CLASS-METHODS class_constructor.
    METHODS constructor.

    CONSTANTS:
      BEGIN OF c_css,
        keyword TYPE string VALUE 'keyword',
        text    TYPE string VALUE 'text',
        comment TYPE string VALUE 'comment',
      END OF c_css,

      BEGIN OF c_token,
        keyword TYPE c VALUE 'K',
        text    TYPE c VALUE 'T',
        comment TYPE c VALUE 'C',
      END OF c_token,

      BEGIN OF c_regex,
        comment TYPE string VALUE '##|"|^\*',
        text    TYPE string VALUE '`|''|\||\{|\}',
        keyword TYPE string VALUE '&&|\b[-_a-z0-9]+\b',
      END OF c_regex.

*"* protected declarations
*include zcl_abapgit_syntax_abap=======co.
  PROTECTED SECTION.

    CLASS-DATA gt_keywords TYPE HASHED TABLE OF string WITH UNIQUE KEY table_line.

    CLASS-METHODS init_keywords.
    CLASS-METHODS is_keyword
      IMPORTING iv_chunk      TYPE string
      RETURNING VALUE(rv_yes) TYPE abap_bool.

    METHODS order_matches REDEFINITION.
    METHODS parse_line REDEFINITION.

*"* private declarations
*include zcl_abapgit_syntax_abap=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_SYNTAX_ABAP definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SYNTAX_CSS

*"* local type definitions
*include zcl_abapgit_syntax_css========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SYNTAX_CSS definition
*"* public declarations
*include zcl_abapgit_syntax_css========cu.
CLASS Lcl_abapgit_syntax_css DEFINITION
*public
  INHERITING FROM Lcl_abapgit_syntax_highlighter
  CREATE PUBLIC .

  PUBLIC SECTION.

    " CSS Standard            https://www.w3.org/TR/css-2018/
    " CSS Reference           https://www.w3schools.com/cssref/default.asp

    " We used a mixture of above as reference for the keyword list
    " 1) CSS Properties       https://www.w3schools.com/cssref/default.asp
    " 2) CSS Values & Units   https://www.w3schools.com/cssref/css_units.asp
    " 3) CSS Selectors        https://www.w3.org/TR/css-2018/#selectors
    " 4) CSS Functions        https://www.w3schools.com/cssref/css_functions.asp
    " 5) CSS Colors           https://www.w3schools.com/colors/colors_names.asp
    " 6) CSS Extensions
    " 7) CSS At-Rules         https://www.w3.org/TR/css-2018/#at-rules
    " 8) HTML Tags

    CONSTANTS:
      BEGIN OF c_css,
        keyword    TYPE string VALUE 'keyword',
        text       TYPE string VALUE 'text',
        comment    TYPE string VALUE 'comment',
        selectors  TYPE string VALUE 'selectors',
        units      TYPE string VALUE 'units',
        properties TYPE string VALUE 'properties',
        values     TYPE string VALUE 'values',
        functions  TYPE string VALUE 'functions',
        colors     TYPE string VALUE 'colors',
        extensions TYPE string VALUE 'extensions',
        at_rules   TYPE string VALUE 'at_rules',
        html       TYPE string VALUE 'html',
      END OF c_css .
    CONSTANTS:
      BEGIN OF c_token,
        keyword    TYPE c VALUE 'K',
        text       TYPE c VALUE 'T',
        comment    TYPE c VALUE 'C',
        selectors  TYPE c VALUE 'S',
        units      TYPE c VALUE 'U',
        properties TYPE c VALUE 'P',
        values     TYPE c VALUE 'V',
        functions  TYPE c VALUE 'F',
        colors     TYPE c VALUE 'Z',
        extensions TYPE c VALUE 'E',
        at_rules   TYPE c VALUE 'A',
        html       TYPE c VALUE 'H',
      END OF c_token .
    CONSTANTS:
      BEGIN OF c_regex,
        " comments /* ... */
        comment   TYPE string VALUE '\/\*.*\*\/|\/\*|\*\/',
        " single or double quoted strings
        text      TYPE string VALUE '("[^"]*")|(''[^'']*'')|(`[^`]*`)',
        " in general keywords don't contain numbers (except -ms-scrollbar-3dlight-color)
        keyword   TYPE string VALUE '\b[a-z3@\-]+\b',
        " selectors begin with :
        selectors TYPE string VALUE ':[:a-z]+\b',
        " units
        units     TYPE string
        VALUE '\b[0-9\. ]+(ch|cm|em|ex|in|mm|pc|pt|px|vh|vmax|vmin|vw)\b|\b[0-9\. ]+%',
      END OF c_regex .

    CLASS-METHODS class_constructor .
    METHODS constructor .
*"* protected declarations
*include zcl_abapgit_syntax_css========co.
  PROTECTED SECTION.
    TYPES: ty_token TYPE c LENGTH 1.

    TYPES: BEGIN OF ty_keyword,
             keyword TYPE string,
             token   TYPE ty_token,
           END OF ty_keyword.

    CLASS-DATA gt_keywords TYPE HASHED TABLE OF ty_keyword WITH UNIQUE KEY keyword.
    CLASS-DATA gv_comment TYPE abap_bool.

    CLASS-METHODS init_keywords.
    CLASS-METHODS insert_keywords
      IMPORTING
        iv_keywords TYPE string
        iv_token    TYPE ty_token.
    CLASS-METHODS is_keyword
      IMPORTING iv_chunk      TYPE string
      RETURNING VALUE(rv_yes) TYPE abap_bool.

    METHODS order_matches REDEFINITION.
    METHODS parse_line REDEFINITION.

*"* private declarations
*include zcl_abapgit_syntax_css========ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_SYNTAX_CSS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_TADIR

*"* local type definitions
*include zcl_abapgit_tadir=============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_TADIR definition
*"* public declarations
*include zcl_abapgit_tadir=============cu.
CLASS Lcl_abapgit_tadir DEFINITION
*public
  FINAL
  CREATE PRIVATE
  friends Lcl_abapgit_factory .

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_tadir .

*"* protected declarations
*include zcl_abapgit_tadir=============co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_tadir=============ci.
  PRIVATE SECTION.

    METHODS check_exists
      IMPORTING
        !it_tadir       TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RETURNING
        VALUE(rt_tadir) TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS build
      IMPORTING
        !iv_package            TYPE tadir-devclass
        !io_dot                TYPE REF TO Lcl_abapgit_dot_abapgit
        !iv_ignore_subpackages TYPE abap_bool DEFAULT abap_false
        !iv_only_local_objects TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(rt_tadir)        TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS select_objects
      IMPORTING
        !iv_package            TYPE tadir-devclass
        !iv_ignore_subpackages TYPE abap_bool DEFAULT abap_false
        !iv_only_local_objects TYPE abap_bool
      EXPORTING
        !et_packages           TYPE Lif_abapgit_sap_package=>ty_devclass_tt
        !et_tadir              TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS add_local_packages
      IMPORTING
        !it_packages TYPE Lif_abapgit_sap_package=>ty_devclass_tt
      CHANGING
        !ct_tadir    TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS add_namespaces
      IMPORTING
        !iv_package TYPE devclass
      CHANGING
        !ct_tadir   TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS add_namespace
      IMPORTING
        !iv_package    TYPE devclass
        !iv_object     TYPE csequence
      CHANGING
        !ct_tadir      TYPE Lif_abapgit_definitions=>ty_tadir_tt
        !ct_tadir_nspc TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS determine_path
      IMPORTING
        !iv_package TYPE tadir-devclass
        !io_dot     TYPE REF TO Lcl_abapgit_dot_abapgit
      CHANGING
        !ct_tadir   TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS is_sots_excluded
      IMPORTING
        !it_packages      TYPE Lif_abapgit_sap_package=>ty_devclass_tt
      RETURNING
        VALUE(rv_exclude) TYPE abap_bool.
endclass. "ZCL_ABAPGIT_TADIR definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_TRANSPORT

*"* local type definitions
*include zcl_abapgit_transport=========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_TRANSPORT definition
*"* public declarations
*include zcl_abapgit_transport=========cu.
CLASS Lcl_abapgit_transport DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.
* todo, add interfaces for this class, consider merging zcl_abapgit_transport_mass into this class?
    CLASS-METHODS zip
      IMPORTING
        !iv_show_log_popup TYPE abap_bool DEFAULT abap_true
        !iv_logic          TYPE string OPTIONAL
        !is_trkorr         TYPE trwbo_request_header OPTIONAL
      RETURNING
        VALUE(rv_xstr)     TYPE xstring
      RAISING
        Lcx_abapgit_exception .

    CLASS-METHODS to_tadir
      IMPORTING
        !iv_trkorr          TYPE trkorr
        !iv_deleted_objects TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(rt_tadir)     TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RAISING
        Lcx_abapgit_exception .

    CLASS-METHODS add_all_objects_to_trans_req
      IMPORTING
        iv_key TYPE Lif_abapgit_persistence=>ty_value
      RAISING
        Lcx_abapgit_exception .

*"* protected declarations
*include zcl_abapgit_transport=========co.
  PROTECTED SECTION.

    TYPES ty_trkorr_tt TYPE STANDARD TABLE OF trkorr.

    CLASS-METHODS read_requests
      IMPORTING
        !it_trkorr         TYPE ty_trkorr_tt
      RETURNING
        VALUE(rt_requests) TYPE trwbo_requests
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS find_top_package
      IMPORTING
        !it_tadir         TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RETURNING
        VALUE(rv_package) TYPE devclass
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS resolve
      IMPORTING
        !it_requests        TYPE trwbo_requests
        !iv_deleted_objects TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(rt_tadir)     TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_transport=========ci.
  PRIVATE SECTION.
    CLASS-METHODS collect_all_objects
      IMPORTING
        iv_key            TYPE Lif_abapgit_persistence=>ty_value
      RETURNING
        VALUE(rt_objects) TYPE tr_objects
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS show_log
      IMPORTING
        it_log   TYPE sprot_u_tab
        iv_title TYPE string.
endclass. "ZCL_ABAPGIT_TRANSPORT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_TRANSPORT_2_BRANCH

*"* local type definitions
*include zcl_abapgit_transport_2_branchccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_TRANSPORT_2_BRANCH definition
*"* public declarations
*include zcl_abapgit_transport_2_branchcu.
CLASS Lcl_abapgit_transport_2_branch DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS create
      IMPORTING
        !io_repository          TYPE REF TO Lcl_abapgit_repo_online
        !is_transport_to_branch TYPE Lif_abapgit_definitions=>ty_transport_to_branch
        !it_transport_objects   TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_transport_2_branchco.
  PROTECTED SECTION.

    METHODS generate_commit_message
      IMPORTING
        !is_transport_to_branch TYPE Lif_abapgit_definitions=>ty_transport_to_branch
      RETURNING
        VALUE(rs_comment)       TYPE Lif_abapgit_git_definitions=>ty_comment .
    METHODS stage_transport_objects
      IMPORTING
        !it_transport_objects TYPE Lif_abapgit_definitions=>ty_tadir_tt
        !io_stage             TYPE REF TO Lcl_abapgit_stage
        !is_stage_objects     TYPE Lif_abapgit_definitions=>ty_stage_files
        !it_object_statuses   TYPE Lif_abapgit_definitions=>ty_results_tt
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_transport_2_branchci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_TRANSPORT_2_BRANCH definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_TRANSPORT_OBJECTS

*"* local type definitions
*include zcl_abapgit_transport_objects=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_TRANSPORT_OBJECTS definition
*"* public declarations
*include zcl_abapgit_transport_objects=cu.
CLASS Lcl_abapgit_transport_objects DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS constructor
      IMPORTING
        !it_transport_objects TYPE Lif_abapgit_definitions=>ty_tadir_tt .
    METHODS to_stage
      IMPORTING
        !io_stage           TYPE REF TO Lcl_abapgit_stage
        !is_stage_objects   TYPE Lif_abapgit_definitions=>ty_stage_files
        !it_object_statuses TYPE Lif_abapgit_definitions=>ty_results_tt
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_transport_objects=co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_transport_objects=ci.
  PRIVATE SECTION.

    DATA mt_transport_objects TYPE Lif_abapgit_definitions=>ty_tadir_tt .
endclass. "ZCL_ABAPGIT_TRANSPORT_OBJECTS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_UI_INJECTOR

*"* local type definitions
*include zcl_abapgit_ui_injector=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_UI_INJECTOR definition
*"* public declarations
*include zcl_abapgit_ui_injector=======cu.
CLASS Lcl_abapgit_ui_injector DEFINITION
*public
  CREATE PRIVATE .

  PUBLIC SECTION.

    CLASS-METHODS set_popups
      IMPORTING
        !ii_popups TYPE REF TO Lif_abapgit_popups .
    CLASS-METHODS set_frontend_services
      IMPORTING
        !ii_fe_serv TYPE REF TO Lif_abapgit_frontend_services .
    CLASS-METHODS set_gui_services
      IMPORTING
        !ii_gui_services TYPE REF TO Lif_abapgit_gui_services .
    CLASS-METHODS get_dummy_gui_services
      RETURNING
        VALUE(ri_gui_services) TYPE REF TO Lif_abapgit_gui_services .
    CLASS-METHODS set_html_viewer
      IMPORTING
        !ii_html_viewer TYPE REF TO Lif_abapgit_html_viewer .
*"* protected declarations
*include zcl_abapgit_ui_injector=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_ui_injector=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_UI_INJECTOR definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_VERSION

*"* local type definitions
*include zcl_abapgit_version===========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_VERSION definition
*"* public declarations
*include zcl_abapgit_version===========cu.
CLASS Lcl_abapgit_version DEFINITION
*public
  FINAL
  CREATE PUBLIC


.

  PUBLIC SECTION.

    CLASS-METHODS normalize
      IMPORTING
        !iv_version       TYPE string
      RETURNING
        VALUE(rv_version) TYPE string .
    CLASS-METHODS conv_str_to_version
      IMPORTING
        !iv_version       TYPE csequence
      RETURNING
        VALUE(rs_version) TYPE Lif_abapgit_definitions=>ty_version
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS check_dependant_version
      IMPORTING
        !is_current   TYPE Lif_abapgit_definitions=>ty_version
        !is_dependant TYPE Lif_abapgit_definitions=>ty_version
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS compare
      IMPORTING
        !iv_a            TYPE string OPTIONAL
        !iv_b            TYPE string OPTIONAL
        !is_a            TYPE Lif_abapgit_definitions=>ty_version OPTIONAL
        !is_b            TYPE Lif_abapgit_definitions=>ty_version OPTIONAL
      RETURNING
        VALUE(rv_result) TYPE i .
    CLASS-METHODS get_version_constant_value
      IMPORTING
        iv_version_constant TYPE string
      RETURNING
        VALUE(rv_version)   TYPE string
      RAISING
        Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_version===========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_version===========ci.
  PRIVATE SECTION.

    CLASS-METHODS version_to_numeric
      IMPORTING
        !iv_version       TYPE string
      RETURNING
        VALUE(rv_version) TYPE i.
endclass. "ZCL_ABAPGIT_VERSION definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_XML

*"* local type definitions
*include zcl_abapgit_xml===============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_XML definition
*"* public declarations
*include zcl_abapgit_xml===============cu.
CLASS Lcl_abapgit_xml DEFINITION
*public
  ABSTRACT
  CREATE PUBLIC .

  PUBLIC SECTION.
    METHODS:
      constructor
        IMPORTING iv_filename TYPE string OPTIONAL.
*"* protected declarations
*include zcl_abapgit_xml===============co.
  PROTECTED SECTION.
    DATA: mi_ixml     TYPE REF TO if_ixml,
          mi_xml_doc  TYPE REF TO if_ixml_document,
          ms_metadata TYPE Lif_abapgit_definitions=>ty_metadata,
          mv_filename TYPE string.

    CONSTANTS: c_abapgit_tag             TYPE string VALUE 'abapGit' ##NO_TEXT,
               c_attr_version            TYPE string VALUE 'version' ##NO_TEXT,
               c_attr_serializer         TYPE string VALUE 'serializer' ##NO_TEXT,
               c_attr_serializer_version TYPE string VALUE 'serializer_version' ##NO_TEXT.

    METHODS to_xml
      IMPORTING iv_normalize  TYPE abap_bool DEFAULT abap_true
      RETURNING VALUE(rv_xml) TYPE string.

    METHODS parse
      IMPORTING iv_xml TYPE string
      RAISING   Lcx_abapgit_exception.
*"* private declarations
*include zcl_abapgit_xml===============ci.
  PRIVATE SECTION.

    METHODS error
      IMPORTING
        !ii_parser TYPE REF TO if_ixml_parser
      RAISING
        Lcx_abapgit_exception .
    METHODS raise_version_mismatch
      IMPORTING
        !iv_vers TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS raise_exception_for
      IMPORTING
        !ii_error TYPE REF TO if_ixml_parse_error
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_XML definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_XML_OUTPUT

*"* local type definitions
*include zcl_abapgit_xml_output========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_XML_OUTPUT definition
*"* public declarations
*include zcl_abapgit_xml_output========cu.
CLASS Lcl_abapgit_xml_output DEFINITION
*public
  INHERITING FROM Lcl_abapgit_xml
  CREATE PUBLIC


.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_xml_output.

*"* protected declarations
*include zcl_abapgit_xml_output========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_xml_output========ci.
  PRIVATE SECTION.

    DATA mi_raw TYPE REF TO if_ixml_element .

    METHODS build_asx_node
      RETURNING
        VALUE(ri_element) TYPE REF TO if_ixml_element .
endclass. "ZCL_ABAPGIT_XML_OUTPUT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ZIP

*"* local type definitions
*include zcl_abapgit_zip===============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ZIP definition
*"* public declarations
*include zcl_abapgit_zip===============cu.
CLASS Lcl_abapgit_zip DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS encode_files
      IMPORTING
        !it_files      TYPE Lif_abapgit_definitions=>ty_files_item_tt
      RETURNING
        VALUE(rv_xstr) TYPE xstring
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS export
      IMPORTING
        !is_local_settings TYPE Lif_abapgit_persistence=>ty_repo-local_settings
        !iv_package        TYPE devclass
        !io_dot_abapgit    TYPE REF TO Lcl_abapgit_dot_abapgit
        !iv_show_log       TYPE abap_bool DEFAULT abap_true
        !it_filter         TYPE Lif_abapgit_definitions=>ty_tadir_tt OPTIONAL
      RETURNING
        VALUE(rv_xstr)     TYPE xstring
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS export_object
      IMPORTING
        !iv_object_type        TYPE trobjtype
        !iv_object_name        TYPE sobj_name
        !iv_main_language_only TYPE abap_bool DEFAULT abap_false
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS export_package
      IMPORTING
        !iv_package        TYPE devclass
        !iv_folder_logic   TYPE string
        !iv_main_lang_only TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS load
      IMPORTING
        !iv_xstr        TYPE xstring
      RETURNING
        VALUE(rt_files) TYPE Lif_abapgit_git_definitions=>ty_files_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS save_binstring_to_localfile
      IMPORTING
        !iv_filename  TYPE string
        !iv_binstring TYPE xstring
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_zip===============co.
  PROTECTED SECTION.

    CLASS-DATA gv_prev TYPE string .
*"* private declarations
*include zcl_abapgit_zip===============ci.
  PRIVATE SECTION.

    CLASS-METHODS filename
      IMPORTING
        !iv_str      TYPE string
      EXPORTING
        !ev_path     TYPE string
        !ev_filename TYPE string
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS normalize_path
      CHANGING
        !ct_files TYPE Lif_abapgit_git_definitions=>ty_files_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS unzip_file
      IMPORTING
        !iv_xstr        TYPE xstring
      RETURNING
        VALUE(rt_files) TYPE Lif_abapgit_git_definitions=>ty_files_tt
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_ZIP definition
*"* class pool for interface ZIF_ABAPGIT_AFF_INTF_V1

INTERFACE Lif_abapgit_aff_intf_v1 .

  TYPES ty_category TYPE n LENGTH 2.

  CONSTANTS:
    BEGIN OF co_category,
      general                      TYPE ty_category VALUE '00',
      classic_badi                 TYPE ty_category VALUE '01',
      business_static_components   TYPE ty_category VALUE '51',
      business_instance_components TYPE ty_category VALUE '52',
      db_procedure_proxy           TYPE ty_category VALUE '65',
      web_dynpro_runtime           TYPE ty_category VALUE '80',
      enterprise_service           TYPE ty_category VALUE '90',
    END OF co_category.

  TYPES:
    BEGIN OF ty_main,
      format_version TYPE Lif_abapgit_aff_types_v1=>ty_format_version,
      header         TYPE Lif_abapgit_aff_types_v1=>ty_header_60_src,
      category       TYPE ty_category,
      proxy          TYPE abap_bool,
      descriptions   TYPE Lif_abapgit_aff_oo_types_v1=>ty_descriptions,
    END OF ty_main.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_APACK_DEFINITIONS

INTERFACE Lif_abapgit_apack_definitions  .


  TYPES:
    BEGIN OF ty_dependency,
      group_id       TYPE string,
      artifact_id    TYPE string,
      version        TYPE string,
      sem_version    TYPE Lif_abapgit_definitions=>ty_version,
      git_url        TYPE string,
      target_package TYPE devclass,
    END OF ty_dependency,
    ty_dependencies    TYPE STANDARD TABLE OF ty_dependency
                    WITH NON-UNIQUE DEFAULT KEY,

    ty_repository_type TYPE string,

    BEGIN OF ty_descriptor_wo_dependencies,
      group_id        TYPE string,
      artifact_id     TYPE string,
      version         TYPE string,
      sem_version     TYPE Lif_abapgit_definitions=>ty_version,
      repository_type TYPE ty_repository_type,
      git_url         TYPE string,
    END OF ty_descriptor_wo_dependencies,

    BEGIN OF ty_descriptor.
      INCLUDE TYPE ty_descriptor_wo_dependencies.
  TYPES:
      dependencies TYPE ty_dependencies,
    END OF ty_descriptor,

    ty_descriptors TYPE STANDARD TABLE OF ty_descriptor WITH NON-UNIQUE DEFAULT KEY.

  CONSTANTS c_dot_apack_manifest TYPE string VALUE '.apack-manifest.xml' ##NO_TEXT.
  CONSTANTS c_repository_type_abapgit TYPE ty_repository_type VALUE 'abapGit' ##NO_TEXT.
  CONSTANTS c_apack_interface_sap TYPE seoclsname VALUE 'IF_APACK_MANIFEST' ##NO_TEXT.
  CONSTANTS c_apack_interface_cust TYPE seoclsname VALUE 'LIF_APACK_MANIFEST' ##NO_TEXT.
  CONSTANTS c_apack_interface_nspc TYPE seoclsname VALUE '/*/IF_APACK_MANIFEST' ##NO_TEXT.
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_CTS_API

INTERFACE Lif_abapgit_cts_api
   .


  TYPES:
    BEGIN OF ty_transport,
      obj_type TYPE tadir-object,
      obj_name TYPE tadir-obj_name,
      trkorr   TYPE trkorr,
    END OF ty_transport .
  TYPES:
    ty_transport_list TYPE SORTED TABLE OF ty_transport WITH NON-UNIQUE KEY obj_type obj_name .
  TYPES:
    ty_trkorr_tt TYPE STANDARD TABLE OF trkorr WITH DEFAULT KEY .
  TYPES:
    BEGIN OF ty_transport_key,
      object  TYPE e071k-object,
      objname TYPE e071k-objname,
      tabkey  TYPE e071k-tabkey,
    END OF ty_transport_key .
  TYPES:
    BEGIN OF ty_transport_data,
      trstatus TYPE e070-trstatus,
      keys     TYPE STANDARD TABLE OF ty_transport_key WITH DEFAULT KEY,
    END OF ty_transport_data .
  TYPES:
    BEGIN OF ty_transport_obj,
      object   TYPE e071-object,
      obj_name TYPE e071-obj_name,
    END OF ty_transport_obj .
  TYPES:
    ty_transport_obj_tt TYPE STANDARD TABLE OF ty_transport_obj WITH DEFAULT KEY .

  CONSTANTS:
    BEGIN OF c_transport_type,
      wb_request   TYPE c LENGTH 1 VALUE 'K', "workbench request
      wb_repair    TYPE c LENGTH 1 VALUE 'R', "workbench repair
      wb_task      TYPE c LENGTH 1 VALUE 'S', "workbench task
      cust_request TYPE c LENGTH 1 VALUE 'W', "customizing request
      cust_task    TYPE c LENGTH 1 VALUE 'Q', "customizing task
    END OF c_transport_type .
  CONSTANTS:
    BEGIN OF c_transport_category,
      workbench   TYPE c LENGTH 4 VALUE 'SYST',
      customizing TYPE c LENGTH 4 VALUE 'CUST',
    END OF c_transport_category .
  CONSTANTS:
    BEGIN OF c_transport_mode,
      insert TYPE c LENGTH 1 VALUE 'I',
      delete TYPE c LENGTH 1 VALUE 'D',
    END OF c_transport_mode .
  CONSTANTS:
    BEGIN OF c_transport_status,
      modifiable TYPE c LENGTH 1 VALUE 'D',
    END OF c_transport_status .

  METHODS confirm_transport_messages
    RETURNING
      VALUE(rv_messages_confirmed) TYPE abap_bool .
  METHODS create_transport_entries
    IMPORTING
      !iv_transport TYPE trkorr
      !it_table_ins TYPE ANY TABLE
      !it_table_upd TYPE ANY TABLE
      !it_table_del TYPE ANY TABLE
      !iv_tabname   TYPE tabname
    RAISING
      Lcx_abapgit_exception .
  METHODS get_r3tr_obj_for_limu_obj
    IMPORTING
      !iv_object   TYPE tadir-object
      !iv_obj_name TYPE trobj_name
    EXPORTING
      !ev_object   TYPE tadir-object
      !ev_obj_name TYPE trobj_name
    RAISING
      Lcx_abapgit_exception .
  METHODS get_transports_for_list
    IMPORTING
      !it_items            TYPE Lif_abapgit_definitions=>ty_items_tt
    RETURNING
      VALUE(rt_transports) TYPE ty_transport_list
    RAISING
      Lcx_abapgit_exception .
  "! Returns the transport request / task the object is currently in
  "! @parameter is_item | Object
  "! @parameter rv_transport | Transport request / task
  "! @raising zcx_abapgit_exception | Object is not in a transport
  METHODS get_transport_for_object
    IMPORTING
      !is_item            TYPE Lif_abapgit_definitions=>ty_item
    RETURNING
      VALUE(rv_transport) TYPE trkorr
    RAISING
      Lcx_abapgit_exception .
  METHODS insert_transport_object
    IMPORTING
      !iv_pgmid    TYPE tadir-pgmid DEFAULT 'R3TR'
      !iv_object   TYPE tadir-object
      !iv_obj_name TYPE csequence
      !iv_package  TYPE devclass
      !iv_language TYPE sy-langu DEFAULT sy-langu
      !iv_mode     TYPE c DEFAULT 'I'
    EXPORTING
      !ev_object   TYPE tadir-object
      !ev_obj_name TYPE trobj_name
    RAISING
      Lcx_abapgit_exception .
  "! Check if change recording is possible for the given package
  "! @parameter iv_package | Package
  "! @parameter rv_possible | Change recording is possible
  "! @raising zcx_abapgit_exception | Package could not be loaded
  METHODS is_chrec_possible_for_package
    IMPORTING
      !iv_package        TYPE devclass
    RETURNING
      VALUE(rv_possible) TYPE abap_bool
    RAISING
      Lcx_abapgit_exception .
  METHODS list_open_requests_by_user
    IMPORTING
      !iv_user         TYPE sy-uname DEFAULT sy-uname
    RETURNING
      VALUE(rt_trkorr) TYPE ty_trkorr_tt
    RAISING
      Lcx_abapgit_exception .
  METHODS list_r3tr_by_request
    IMPORTING
      !iv_request    TYPE trkorr
    RETURNING
      VALUE(rt_list) TYPE ty_transport_obj_tt
    RAISING
      Lcx_abapgit_exception .
  METHODS read
    IMPORTING
      !iv_trkorr        TYPE trkorr
    RETURNING
      VALUE(rs_request) TYPE ty_transport_data
    RAISING
      Lcx_abapgit_exception .
  METHODS read_description
    IMPORTING
      !iv_trkorr            TYPE trkorr
    RETURNING
      VALUE(rv_description) TYPE string .
  METHODS read_user
    IMPORTING
      !iv_trkorr      TYPE trkorr
    RETURNING
      VALUE(rv_uname) TYPE uname .
  METHODS validate_transport_request
    IMPORTING
      !iv_transport_request TYPE trkorr
    RAISING
      Lcx_abapgit_exception .
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_DATA_DESERIALIZER

INTERFACE Lif_abapgit_data_deserializer
   .


  TYPES: BEGIN OF ty_result,
           type    TYPE Lif_abapgit_data_config=>ty_config-type,
           name    TYPE Lif_abapgit_data_config=>ty_config-name,
           deletes TYPE REF TO data,
           updates TYPE REF TO data,
           inserts TYPE REF TO data,
           file    TYPE Lif_abapgit_git_definitions=>ty_file_signature,
           config  TYPE Lif_abapgit_git_definitions=>ty_file_signature,
         END OF ty_result.
  TYPES: ty_results TYPE STANDARD TABLE OF ty_result WITH KEY type name.

  METHODS deserialize_check
    IMPORTING
      !io_repo         TYPE REF TO Lcl_abapgit_repo
      !ii_config       TYPE REF TO Lif_abapgit_data_config
    RETURNING
      VALUE(rs_checks) TYPE Lif_abapgit_definitions=>ty_deserialize_checks-customizing
    RAISING
      Lcx_abapgit_exception .

  METHODS deserialize
    IMPORTING
      !ii_config       TYPE REF TO Lif_abapgit_data_config
      !it_files        TYPE Lif_abapgit_git_definitions=>ty_files_tt
    RETURNING
      VALUE(rt_result) TYPE ty_results
    RAISING
      Lcx_abapgit_exception .

  METHODS actualize
    IMPORTING
      !is_checks               TYPE Lif_abapgit_definitions=>ty_deserialize_checks
      !it_result               TYPE ty_results
    RETURNING
      VALUE(rt_accessed_files) TYPE Lif_abapgit_git_definitions=>ty_file_signatures_tt
    RAISING
      Lcx_abapgit_exception .
ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_EXIT

INTERFACE Lif_abapgit_exit .

  TYPES:
    BEGIN OF ty_ci_repo,
      name      TYPE string,
      clone_url TYPE string,
    END OF ty_ci_repo.
  TYPES:
    ty_ci_repos TYPE TABLE OF ty_ci_repo.
  TYPES:
    ty_object_types TYPE STANDARD TABLE OF tadir-object WITH DEFAULT KEY.
  TYPES:
    BEGIN OF ty_class_key,
      clsname TYPE abap_classname,
    END OF ty_class_key.

  METHODS adjust_display_commit_url
    IMPORTING
      !iv_repo_url    TYPE csequence
      !iv_repo_name   TYPE csequence
      !iv_repo_key    TYPE csequence
      !iv_commit_hash TYPE Lif_abapgit_git_definitions=>ty_sha1
    CHANGING
      !cv_display_url TYPE csequence
    RAISING
      Lcx_abapgit_exception.

  METHODS adjust_display_filename
    IMPORTING
      !is_repo_meta      TYPE Lif_abapgit_persistence=>ty_repo
      !iv_filename       TYPE string
    RETURNING
      VALUE(rv_filename) TYPE string.

  METHODS allow_sap_objects
    RETURNING
      VALUE(rv_allowed) TYPE abap_bool.

  METHODS change_local_host
    CHANGING
      !ct_hosts TYPE Lif_abapgit_definitions=>ty_string_tt.

  METHODS change_max_parallel_processes
    IMPORTING
      iv_package       TYPE devclass
    CHANGING
      cv_max_processes TYPE i.

  METHODS change_proxy_authentication
    IMPORTING
      !iv_repo_url             TYPE csequence
    CHANGING
      !cv_proxy_authentication TYPE abap_bool.

  METHODS change_proxy_port
    IMPORTING
      !iv_repo_url   TYPE csequence
    CHANGING
      !cv_proxy_port TYPE string.

  METHODS change_proxy_url
    IMPORTING
      !iv_repo_url  TYPE csequence
    CHANGING
      !cv_proxy_url TYPE string.

  METHODS change_rfc_server_group
    CHANGING
      cv_group TYPE rzlli_apcl.

  METHODS change_supported_data_objects
    CHANGING
      !ct_objects TYPE Lif_abapgit_data_supporter=>ty_objects.

  METHODS change_supported_object_types
    CHANGING
      !ct_types TYPE ty_object_types.

  METHODS change_tadir
    IMPORTING
      !iv_package TYPE devclass
      !ii_log     TYPE REF TO Lif_abapgit_log
    CHANGING
      !ct_tadir   TYPE Lif_abapgit_definitions=>ty_tadir_tt.

  METHODS create_http_client
    IMPORTING
      !iv_url          TYPE string
    RETURNING
      VALUE(ri_client) TYPE REF TO if_http_client
    RAISING
      Lcx_abapgit_exception.

  METHODS custom_serialize_abap_clif
    IMPORTING
      !is_class_key    TYPE ty_class_key
      !it_source       TYPE Lif_abapgit_definitions=>ty_string_tt OPTIONAL
    RETURNING
      VALUE(rt_source) TYPE Lif_abapgit_definitions=>ty_string_tt
    RAISING
      Lcx_abapgit_exception.

  METHODS deserialize_postprocess
    IMPORTING
      !is_step TYPE Lif_abapgit_objects=>ty_step_data
      !ii_log  TYPE REF TO Lif_abapgit_log.

  METHODS determine_transport_request
    IMPORTING
      !io_repo              TYPE REF TO Lcl_abapgit_repo
      !iv_transport_type    TYPE Lif_abapgit_definitions=>ty_transport_type
    CHANGING
      !cv_transport_request TYPE trkorr.

  METHODS enhance_repo_toolbar
    IMPORTING
      !io_menu TYPE REF TO Lcl_abapgit_html_toolbar
      !iv_key  TYPE Lif_abapgit_persistence=>ty_value
      !iv_act  TYPE string.

  METHODS get_ci_tests
    IMPORTING
      !iv_object   TYPE tadir-object
    CHANGING
      !ct_ci_repos TYPE ty_ci_repos.

  METHODS get_ssl_id
    RETURNING
      VALUE(rv_ssl_id) TYPE ssfapplssl.

  METHODS http_client
    IMPORTING
      !iv_url    TYPE string
      !ii_client TYPE REF TO if_http_client.

  METHODS on_event
    IMPORTING
      !ii_event         TYPE REF TO Lif_abapgit_gui_event
    RETURNING
      VALUE(rs_handled) TYPE Lif_abapgit_gui_event_handler=>ty_handling_result
    RAISING
      Lcx_abapgit_exception.

  METHODS pre_calculate_repo_status
    IMPORTING
      !is_repo_meta TYPE Lif_abapgit_persistence=>ty_repo
    CHANGING
      !ct_local     TYPE Lif_abapgit_definitions=>ty_files_item_tt
      !ct_remote    TYPE Lif_abapgit_git_definitions=>ty_files_tt
    RAISING
      Lcx_abapgit_exception.

  METHODS serialize_postprocess
    IMPORTING
      !iv_package TYPE devclass
      !ii_log     TYPE REF TO Lif_abapgit_log
    CHANGING
      !ct_files   TYPE Lif_abapgit_definitions=>ty_files_item_tt.

  METHODS validate_before_push
    IMPORTING
      !is_comment TYPE Lif_abapgit_git_definitions=>ty_comment
      !io_stage   TYPE REF TO Lcl_abapgit_stage
      !io_repo    TYPE REF TO Lcl_abapgit_repo_online
    RAISING
      Lcx_abapgit_exception.

  METHODS wall_message_list
    IMPORTING
      !ii_html TYPE REF TO Lif_abapgit_html.

  METHODS wall_message_repo
    IMPORTING
      !is_repo_meta TYPE Lif_abapgit_persistence=>ty_repo
      !ii_html      TYPE REF TO Lif_abapgit_html.

ENDINTERFACE.
*"* class pool for interface ZIF_ABAPGIT_GUI_JUMPER

INTERFACE Lif_abapgit_gui_jumper
  .

  TYPES:
    ty_bdcdata_tt TYPE STANDARD TABLE OF bdcdata WITH DEFAULT KEY.

  METHODS jump
    IMPORTING
      !is_item         TYPE Lif_abapgit_definitions=>ty_item
      !is_sub_item     TYPE Lif_abapgit_definitions=>ty_item OPTIONAL
      !iv_line_number  TYPE i OPTIONAL
      !iv_new_window   TYPE abap_bool DEFAULT abap_true
    RETURNING
      VALUE(rv_exit)   TYPE abap_bool
    RAISING
      Lcx_abapgit_exception.

  METHODS jump_adt
    IMPORTING
      !is_item         TYPE Lif_abapgit_definitions=>ty_item
      !iv_sub_obj_name TYPE Lif_abapgit_definitions=>ty_item-obj_name
      !iv_line_number  TYPE i
    RETURNING
      VALUE(rv_exit)   TYPE abap_bool
    RAISING
      Lcx_abapgit_exception.

  METHODS jump_batch_input
    IMPORTING
      !iv_tcode      TYPE sy-tcode
      !it_bdcdata    TYPE ty_bdcdata_tt
      !iv_new_window TYPE abap_bool DEFAULT abap_true
    RAISING
      Lcx_abapgit_exception.

  METHODS jump_abapgit
    IMPORTING
      !iv_language TYPE spras
      !iv_key      TYPE Lif_abapgit_persistence=>ty_value
    RAISING
      Lcx_abapgit_exception.

ENDINTERFACE.
*class-pool .
*"* class pool for class ZCL_ABAPGIT_AFF_REGISTRY

*"* local type definitions
*include zcl_abapgit_aff_registry======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_AFF_REGISTRY definition
*"* public declarations
*include zcl_abapgit_aff_registry======cu.
CLASS Lcl_abapgit_aff_registry DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_aff_registry.

    CONSTANTS c_aff_feature TYPE string VALUE 'AFF'.

    METHODS constructor.

*"* protected declarations
*include zcl_abapgit_aff_registry======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_aff_registry======ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_registry_entry,
        obj_type     TYPE tadir-object,
        experimental TYPE abap_bool,
      END OF ty_registry_entry.

    CLASS-DATA:
      gt_registry TYPE HASHED TABLE OF ty_registry_entry WITH UNIQUE KEY obj_type.

    DATA mv_aff_enabled TYPE abap_bool.

    CLASS-METHODS initialize_registry_table.

    CLASS-METHODS:
      register
        IMPORTING
          iv_obj_type     TYPE tadir-object
          iv_experimental TYPE abap_bool DEFAULT abap_false.

endclass. "ZCL_ABAPGIT_AFF_REGISTRY definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_APACK_HELPER

*"* local type definitions
*include zcl_abapgit_apack_helper======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_APACK_HELPER definition
*"* public declarations
*include zcl_abapgit_apack_helper======cu.
CLASS Lcl_abapgit_apack_helper DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS are_dependencies_met
      IMPORTING
        !it_dependencies TYPE Lif_abapgit_apack_definitions=>ty_dependencies
      RETURNING
        VALUE(rv_status) TYPE Lif_abapgit_definitions=>ty_yes_no
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS dependencies_popup
      IMPORTING
        !it_dependencies TYPE Lif_abapgit_apack_definitions=>ty_dependencies
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS to_file
      IMPORTING
        !iv_package    TYPE devclass
      RETURNING
        VALUE(rs_file) TYPE Lif_abapgit_git_definitions=>ty_file
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_apack_helper======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_apack_helper======ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_manifest_declaration,
        clsname  TYPE seometarel-clsname,
        devclass TYPE devclass,
      END OF ty_manifest_declaration .
    TYPES:
      ty_manifest_declarations TYPE STANDARD TABLE OF ty_manifest_declaration WITH NON-UNIQUE DEFAULT KEY .
    TYPES:
      BEGIN OF ty_dependency_status,
        met TYPE Lif_abapgit_definitions=>ty_yes_no_partial.
        INCLUDE TYPE Lif_abapgit_apack_definitions=>ty_dependency.
    TYPES: END OF ty_dependency_status .
    TYPES:
      ty_dependency_statuses TYPE STANDARD TABLE OF ty_dependency_status WITH NON-UNIQUE DEFAULT KEY .
    TYPES:
      BEGIN OF ty_color_line,
        exception(1) TYPE c,
        color        TYPE lvc_t_scol.
        INCLUDE TYPE ty_dependency_status.
    TYPES: t_hyperlink  TYPE salv_t_int4_column,
      END OF ty_color_line.

    TYPES: ty_color_tab TYPE STANDARD TABLE OF ty_color_line WITH DEFAULT KEY.

    CLASS-METHODS get_dependencies_met_status
      IMPORTING
        !it_dependencies TYPE Lif_abapgit_apack_definitions=>ty_dependencies
      RETURNING
        VALUE(rt_status) TYPE ty_dependency_statuses
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS get_installed_packages
      RETURNING
        VALUE(rt_packages) TYPE Lif_abapgit_apack_definitions=>ty_descriptors
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS show_dependencies_popup
      IMPORTING
        !it_dependencies TYPE ty_dependency_statuses
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS get_color_table
      IMPORTING
        !io_alv          TYPE REF TO cl_salv_table
        !it_dependencies TYPE ty_dependency_statuses
      CHANGING
        !ct_color_table  TYPE ty_color_tab
      RAISING
        cx_salv_existing.
endclass. "ZCL_ABAPGIT_APACK_HELPER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_APACK_READER

*"* local type definitions
*include zcl_abapgit_apack_reader======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_APACK_READER definition
*"* public declarations
*include zcl_abapgit_apack_reader======cu.
CLASS Lcl_abapgit_apack_reader DEFINITION
*public
  FINAL
  CREATE PRIVATE .

  PUBLIC SECTION.

    TYPES ty_package_name TYPE devclass .

    CLASS-METHODS create_instance
      IMPORTING
        !iv_package_name          TYPE ty_package_name
      RETURNING
        VALUE(ro_manifest_reader) TYPE REF TO Lcl_abapgit_apack_reader .
    CLASS-METHODS deserialize
      IMPORTING
        !iv_package_name          TYPE ty_package_name
        !iv_xstr                  TYPE xstring
      RETURNING
        VALUE(ro_manifest_reader) TYPE REF TO Lcl_abapgit_apack_reader
      RAISING
        Lcx_abapgit_exception.
    METHODS get_manifest_descriptor
      RETURNING
        VALUE(rs_manifest_descriptor) TYPE Lif_abapgit_apack_definitions=>ty_descriptor
      RAISING
        Lcx_abapgit_exception.
    METHODS set_manifest_descriptor
      IMPORTING
        !is_manifest_descriptor TYPE Lif_abapgit_apack_definitions=>ty_descriptor
      RAISING
        Lcx_abapgit_exception.
    METHODS copy_manifest_descriptor
      IMPORTING
        !io_manifest_provider TYPE REF TO object
      RAISING
        Lcx_abapgit_exception.
    METHODS has_manifest
      RETURNING
        VALUE(rv_has_manifest) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception.
    METHODS constructor
      IMPORTING
        !iv_package_name TYPE ty_package_name .
*"* protected declarations
*include zcl_abapgit_apack_reader======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_apack_reader======ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_s_manifest_declaration,
        clsname  TYPE seoclsname,
        devclass TYPE devclass,
      END OF ty_s_manifest_declaration .

    DATA mv_package_name TYPE ty_package_name .
    DATA ms_cached_descriptor TYPE Lif_abapgit_apack_definitions=>ty_descriptor .
    DATA mv_is_cached TYPE abap_bool .

    CLASS-METHODS from_xml
      IMPORTING
        iv_xml         TYPE string
      RETURNING
        VALUE(rs_data) TYPE Lif_abapgit_apack_definitions=>ty_descriptor.

    METHODS format_version
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_APACK_READER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_APACK_WRITER

*"* local type definitions
*include zcl_abapgit_apack_writer======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_APACK_WRITER definition
*"* public declarations
*include zcl_abapgit_apack_writer======cu.
CLASS Lcl_abapgit_apack_writer DEFINITION
*public
  FINAL
  CREATE PRIVATE .

  PUBLIC SECTION.

    CLASS-METHODS create_instance
      IMPORTING
        !is_apack_manifest_descriptor TYPE Lif_abapgit_apack_definitions=>ty_descriptor
      RETURNING
        VALUE(ro_manifest_writer)     TYPE REF TO Lcl_abapgit_apack_writer .
    METHODS serialize
      RETURNING
        VALUE(rv_xml) TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS constructor
      IMPORTING
        !is_apack_manifest_descriptor TYPE Lif_abapgit_apack_definitions=>ty_descriptor .
*"* protected declarations
*include zcl_abapgit_apack_writer======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_apack_writer======ci.
  PRIVATE SECTION.

    DATA ms_manifest_descriptor TYPE Lif_abapgit_apack_definitions=>ty_descriptor .
endclass. "ZCL_ABAPGIT_APACK_WRITER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_CTS_API

*"* local type definitions
*include zcl_abapgit_cts_api===========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_CTS_API definition
*"* public declarations
*include zcl_abapgit_cts_api===========cu.
"! Change transport system API
CLASS Lcl_abapgit_cts_api DEFINITION
*public
  FINAL
  CREATE PRIVATE
  friends Lcl_abapgit_factory.

  PUBLIC SECTION.
    INTERFACES:
      Lif_abapgit_cts_api.
*"* protected declarations
*include zcl_abapgit_cts_api===========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_cts_api===========ci.
  PRIVATE SECTION.

    DATA mv_confirm_transp_msgs_called TYPE abap_bool.

    "! Returns the transport request / task the object is currently locked in
    "! @parameter iv_program_id | Program ID
    "! @parameter iv_object_type | Object type
    "! @parameter iv_object_name | Object name
    "! @parameter rv_transport | Transport request / task
    "! @raising zcx_abapgit_exception | Object is not locked in a transport
    METHODS get_current_transport_for_obj
      IMPORTING
        !iv_program_id      TYPE pgmid DEFAULT 'R3TR'
        !iv_object_type     TYPE trobjtype
        !iv_object_name     TYPE sobj_name
      RETURNING
        VALUE(rv_transport) TYPE trkorr
      RAISING
        Lcx_abapgit_exception .
    "! Returns the transport request / task that includes the object (even if not locked)
    "! @parameter iv_program_id | Program ID
    "! @parameter iv_object_type | Object type
    "! @parameter iv_object_name | Object name
    "! @parameter rv_transport | Transport request / task
    "! @raising zcx_abapgit_exception | Object is not locked in a transport
    METHODS get_current_transport_from_db
      IMPORTING
        !iv_program_id      TYPE pgmid DEFAULT 'R3TR'
        !iv_object_type     TYPE trobjtype
        !iv_object_name     TYPE sobj_name
      RETURNING
        VALUE(rv_transport) TYPE trkorr
      RAISING
        Lcx_abapgit_exception .
    "! Check if the object is currently locked in a transport
    "! @parameter iv_program_id | Program ID
    "! @parameter iv_object_type | Object type
    "! @parameter iv_object_name | Object name
    "! @parameter rv_locked | Object is locked
    "! @raising zcx_abapgit_exception | Object type is not lockable
    METHODS is_object_locked_in_transport
      IMPORTING
        !iv_program_id   TYPE pgmid DEFAULT 'R3TR'
        !iv_object_type  TYPE trobjtype
        !iv_object_name  TYPE sobj_name
      RETURNING
        VALUE(rv_locked) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    "! Check if the object type is lockable
    "! @parameter iv_program_id | Program ID
    "! @parameter iv_object_type | Object type
    "! @parameter rv_lockable | Lockable
    METHODS is_object_type_lockable
      IMPORTING
        !iv_program_id     TYPE pgmid DEFAULT 'R3TR'
        !iv_object_type    TYPE trobjtype
      RETURNING
        VALUE(rv_lockable) TYPE abap_bool .
    "! Check if the object type can be transported
    "! @parameter iv_program_id | Program ID
    "! @parameter iv_object_type | Object type
    "! @parameter rv_transportable | Transportable
    METHODS is_object_type_transportable
      IMPORTING
        !iv_program_id          TYPE pgmid DEFAULT 'R3TR'
        !iv_object_type         TYPE trobjtype
      RETURNING
        VALUE(rv_transportable) TYPE abap_bool .
endclass. "ZCL_ABAPGIT_CTS_API definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_DATA_DESERIALIZER

*"* local type definitions
*include zcl_abapgit_data_deserializer=ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_DATA_DESERIALIZER definition
*"* public declarations
*include zcl_abapgit_data_deserializer=cu.
CLASS Lcl_abapgit_data_deserializer DEFINITION
*public
  CREATE PRIVATE
  friends Lcl_abapgit_data_factory


.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_data_deserializer .

*"* protected declarations
*include zcl_abapgit_data_deserializer=co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_data_deserializer=ci.
  PRIVATE SECTION.

    METHODS convert_json_to_itab
      IMPORTING
        !is_file TYPE Lif_abapgit_git_definitions=>ty_file
        !ir_data TYPE REF TO data
      RAISING
        Lcx_abapgit_exception .
    METHODS preview_database_changes
      IMPORTING
        !iv_name         TYPE tadir-obj_name
        !ir_lc_data      TYPE REF TO data
        !ir_db_data      TYPE REF TO data
      RETURNING
        VALUE(rs_result) TYPE Lif_abapgit_data_deserializer=>ty_result
      RAISING
        Lcx_abapgit_exception.
    METHODS write_database_table
      IMPORTING
        !iv_name TYPE tadir-obj_name
        !ir_del  TYPE REF TO data
        !ir_ins  TYPE REF TO data
        !ir_upd  TYPE REF TO data
      RAISING
        Lcx_abapgit_exception .
    METHODS read_database_table
      IMPORTING
        !iv_name       TYPE tadir-obj_name
        !it_where      TYPE string_table
      RETURNING
        VALUE(rr_data) TYPE REF TO data
      RAISING
        Lcx_abapgit_exception .
    METHODS determine_transport_request
      IMPORTING
        io_repo                     TYPE REF TO Lcl_abapgit_repo
        iv_transport_type           TYPE Lif_abapgit_definitions=>ty_transport_type
      RETURNING
        VALUE(rv_transport_request) TYPE trkorr.
    METHODS is_table_allowed_to_edit
      IMPORTING
        !is_result                TYPE Lif_abapgit_data_deserializer=>ty_result
      RETURNING
        VALUE(rv_allowed_to_edit) TYPE abap_bool .

endclass. "ZCL_ABAPGIT_DATA_DESERIALIZER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_DEPENDENCIES

*"* local type definitions
*include zcl_abapgit_dependencies======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_DEPENDENCIES definition
*"* public declarations
*include zcl_abapgit_dependencies======cu.
CLASS Lcl_abapgit_dependencies DEFINITION
*public
  FINAL
  CREATE PUBLIC


.

  PUBLIC SECTION.

    CLASS-METHODS resolve
      CHANGING
        !ct_tadir TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_dependencies======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_dependencies======ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_dependency,
        depname  TYPE dd02l-tabname,
        deptyp   TYPE c LENGTH 4,
        deplocal TYPE dd02l-as4local,
        refname  TYPE dd02l-tabname,
        reftyp   TYPE c LENGTH 4,
        kind     TYPE c LENGTH 1,
      END OF ty_dependency .
    TYPES:
      ty_dedenpencies TYPE STANDARD TABLE OF ty_dependency
                                 WITH NON-UNIQUE DEFAULT KEY .
    TYPES:
      BEGIN OF ty_item,
        obj_type TYPE tadir-object,
        obj_name TYPE tadir-obj_name,
        devclass TYPE devclass,
      END OF ty_item .

    CLASS-METHODS resolve_ddic
      CHANGING
        !ct_tadir TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS get_ddls_dependencies
      IMPORTING
        iv_ddls_name         TYPE tadir-obj_name
      RETURNING
        VALUE(rt_dependency) TYPE ty_dedenpencies.
    CLASS-METHODS resolve_packages
      CHANGING
        ct_tadir TYPE Lif_abapgit_definitions=>ty_tadir_tt.
endclass. "ZCL_ABAPGIT_DEPENDENCIES definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_DOT_ABAPGIT

*"* local type definitions
*include zcl_abapgit_dot_abapgit=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_DOT_ABAPGIT definition
*"* public declarations
*include zcl_abapgit_dot_abapgit=======cu.
CLASS Lcl_abapgit_dot_abapgit DEFINITION
*public
  CREATE PUBLIC


.

  PUBLIC SECTION.

    CLASS-METHODS build_default
      RETURNING
        VALUE(ro_dot_abapgit) TYPE REF TO Lcl_abapgit_dot_abapgit .
    CLASS-METHODS deserialize
      IMPORTING
        !iv_xstr              TYPE xstring
      RETURNING
        VALUE(ro_dot_abapgit) TYPE REF TO Lcl_abapgit_dot_abapgit
      RAISING
        Lcx_abapgit_exception .
    METHODS constructor
      IMPORTING
        !is_data TYPE Lif_abapgit_dot_abapgit=>ty_dot_abapgit .
    METHODS serialize
      RETURNING
        VALUE(rv_xstr) TYPE xstring
      RAISING
        Lcx_abapgit_exception .
    METHODS to_file
      RETURNING
        VALUE(rs_file) TYPE Lif_abapgit_git_definitions=>ty_file
      RAISING
        Lcx_abapgit_exception .
    METHODS get_data
      RETURNING
        VALUE(rs_data) TYPE Lif_abapgit_dot_abapgit=>ty_dot_abapgit .
    METHODS add_ignore
      IMPORTING
        !iv_path     TYPE string
        !iv_filename TYPE string .
    METHODS is_ignored
      IMPORTING
        !iv_path          TYPE string
        !iv_filename      TYPE string
      RETURNING
        VALUE(rv_ignored) TYPE abap_bool .
    METHODS remove_ignore
      IMPORTING
        !iv_path     TYPE string
        !iv_filename TYPE string .
    METHODS get_starting_folder
      RETURNING
        VALUE(rv_path) TYPE string .
    METHODS get_folder_logic
      RETURNING
        VALUE(rv_logic) TYPE string .
    METHODS set_folder_logic
      IMPORTING
        !iv_logic TYPE string .
    METHODS set_starting_folder
      IMPORTING
        !iv_path TYPE string .
    METHODS get_main_language
      RETURNING
        VALUE(rv_language) TYPE spras .
    METHODS get_i18n_languages
      RETURNING
        VALUE(rt_languages) TYPE Lif_abapgit_definitions=>ty_languages
      RAISING
        Lcx_abapgit_exception .
    METHODS set_i18n_languages
      IMPORTING
        it_languages TYPE Lif_abapgit_definitions=>ty_languages
      RAISING
        Lcx_abapgit_exception .
    METHODS get_signature
      RETURNING
        VALUE(rs_signature) TYPE Lif_abapgit_git_definitions=>ty_file_signature
      RAISING
        Lcx_abapgit_exception .
    METHODS use_lxe
      IMPORTING
        !iv_yes       TYPE abap_bool DEFAULT abap_undefined
      RETURNING
        VALUE(rv_yes) TYPE abap_bool .
    METHODS get_requirements
      RETURNING
        VALUE(rt_requirements) TYPE Lif_abapgit_dot_abapgit=>ty_requirement_tt .
    METHODS set_requirements
      IMPORTING
        !it_requirements TYPE Lif_abapgit_dot_abapgit=>ty_requirement_tt .
    METHODS get_name
      RETURNING
        VALUE(rv_name) TYPE string.
    METHODS set_name
      IMPORTING
        !iv_name TYPE csequence.
    METHODS get_version_constant
      RETURNING
        VALUE(rv_version_constant) TYPE string .
    METHODS set_version_constant
      IMPORTING
        !iv_version_constant TYPE csequence .
    METHODS get_abap_language_version
      RETURNING
        VALUE(rv_abap_language_version) TYPE string .
    METHODS set_abap_language_version
      IMPORTING
        !iv_abap_language_version TYPE string .
*"* protected declarations
*include zcl_abapgit_dot_abapgit=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_dot_abapgit=======ci.
  PRIVATE SECTION.

    DATA ms_data TYPE Lif_abapgit_dot_abapgit=>ty_dot_abapgit .

    CLASS-METHODS to_xml
      IMPORTING
        !is_data      TYPE Lif_abapgit_dot_abapgit=>ty_dot_abapgit
      RETURNING
        VALUE(rv_xml) TYPE string
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS from_xml
      IMPORTING
        !iv_xml        TYPE string
      RETURNING
        VALUE(rs_data) TYPE Lif_abapgit_dot_abapgit=>ty_dot_abapgit .
endclass. "ZCL_ABAPGIT_DOT_ABAPGIT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_EXIT

*"* local type definitions
*include zcl_abapgit_exit==============ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_EXIT definition
*"* public declarations
*include zcl_abapgit_exit==============cu.
CLASS Lcl_abapgit_exit DEFINITION
*public
  CREATE PUBLIC
  friends Lcl_abapgit_injector


.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_exit.

    CLASS-METHODS get_instance
      RETURNING
        VALUE(ri_exit) TYPE REF TO Lif_abapgit_exit.

*"* protected declarations
*include zcl_abapgit_exit==============co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_exit==============ci.
  PRIVATE SECTION.

    CLASS-DATA gi_global_exit TYPE REF TO Lif_abapgit_exit.
    CLASS-DATA gi_exit TYPE REF TO Lif_abapgit_exit.

    CLASS-METHODS is_running_in_test_context
      RETURNING
        VALUE(rv_running_in_test_context) TYPE abap_bool.

endclass. "ZCL_ABAPGIT_EXIT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_FEATURE

*"* local type definitions
*include zcl_abapgit_feature===========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_FEATURE definition
*"* public declarations
*include zcl_abapgit_feature===========cu.
CLASS Lcl_abapgit_feature DEFINITION
*public
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    " For dependency injection/testing, use the following
    " zcl_abapgit_persist_factory=>get_settings( )->read( )->set_experimental_features( )

    CLASS-METHODS is_enabled
      IMPORTING
        !iv_feature   TYPE string OPTIONAL
      RETURNING
        VALUE(rv_run) TYPE abap_bool.

*"* protected declarations
*include zcl_abapgit_feature===========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_feature===========ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_FEATURE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_FILENAME_LOGIC

*"* local type definitions
*include zcl_abapgit_filename_logic====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_FILENAME_LOGIC definition
*"* public declarations
*include zcl_abapgit_filename_logic====cu.
CLASS Lcl_abapgit_filename_logic DEFINITION
*public
  FINAL
  CREATE PUBLIC


.

  PUBLIC SECTION.

    CONSTANTS:
      BEGIN OF c_package_file,
        obj_name  TYPE c LENGTH 7 VALUE 'package',
        sep1      TYPE c LENGTH 1 VALUE '.',
        obj_type  TYPE c LENGTH 4 VALUE 'devc',
        sep2      TYPE c LENGTH 1 VALUE '.',
        extension TYPE c LENGTH 3 VALUE 'xml',
      END OF c_package_file.

    CONSTANTS:
      BEGIN OF c_json_file,
        extension TYPE c LENGTH 4 VALUE 'json',
      END OF c_json_file.

    CLASS-METHODS detect_obj_definition
      IMPORTING
        !iv_type    TYPE string
        !iv_ext     TYPE string
      EXPORTING
        !ev_is_xml  TYPE abap_bool
        !ev_is_json TYPE abap_bool.

    CLASS-METHODS is_obj_definition_file
      IMPORTING
        !iv_filename  TYPE string
      RETURNING
        VALUE(rv_yes) TYPE abap_bool.

    CLASS-METHODS file_to_object
      IMPORTING
        !iv_filename TYPE string
        !iv_path     TYPE string
        !iv_devclass TYPE devclass OPTIONAL
        !io_dot      TYPE REF TO Lcl_abapgit_dot_abapgit
      EXPORTING
        !es_item     TYPE Lif_abapgit_definitions=>ty_item
        !ev_is_xml   TYPE abap_bool
        !ev_is_json  TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .

    CLASS-METHODS object_to_file
      IMPORTING
        !is_item           TYPE Lif_abapgit_definitions=>ty_item
        !iv_ext            TYPE string
        !iv_extra          TYPE clike OPTIONAL
      RETURNING
        VALUE(rv_filename) TYPE string .

*"* protected declarations
*include zcl_abapgit_filename_logic====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_filename_logic====ci.
  PRIVATE SECTION.

    CLASS-DATA:
      go_aff_registry TYPE REF TO Lif_abapgit_aff_registry.

    CLASS-METHODS name_escape
      IMPORTING
        !iv_name       TYPE csequence
      RETURNING
        VALUE(rv_name) TYPE string.

    CLASS-METHODS name_unescape
      IMPORTING
        !iv_name       TYPE csequence
      RETURNING
        VALUE(rv_name) TYPE string.

    CLASS-METHODS map_filename_to_object
      IMPORTING
        !iv_filename TYPE string
        !iv_path     TYPE string
        !iv_package  TYPE devclass
        !io_dot      TYPE REF TO Lcl_abapgit_dot_abapgit
      CHANGING
        cs_item      TYPE Lif_abapgit_definitions=>ty_item
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS map_object_to_filename
      IMPORTING
        !is_item    TYPE Lif_abapgit_definitions=>ty_item
      CHANGING
        cv_filename TYPE string
      RAISING
        Lcx_abapgit_exception.

endclass. "ZCL_ABAPGIT_FILENAME_LOGIC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_FILE_DESERIALIZE

*"* local type definitions
*include zcl_abapgit_file_deserialize==ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_FILE_DESERIALIZE definition
*"* public declarations
*include zcl_abapgit_file_deserialize==cu.
CLASS Lcl_abapgit_file_deserialize DEFINITION
*public
  CREATE PUBLIC



.

  PUBLIC SECTION.

    CLASS-METHODS get_results
      IMPORTING
        !io_repo          TYPE REF TO Lcl_abapgit_repo
        !ii_log           TYPE REF TO Lif_abapgit_log OPTIONAL
      RETURNING
        VALUE(rt_results) TYPE Lif_abapgit_definitions=>ty_results_tt
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_file_deserialize==co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_file_deserialize==ci.
  PRIVATE SECTION.

    CLASS-METHODS filter_files_to_deserialize
      IMPORTING
        !it_results       TYPE Lif_abapgit_definitions=>ty_results_tt
        !ii_log           TYPE REF TO Lif_abapgit_log OPTIONAL
      RETURNING
        VALUE(rt_results) TYPE Lif_abapgit_definitions=>ty_results_tt .
    CLASS-METHODS prioritize_deser
      IMPORTING
        !ii_log           TYPE REF TO Lif_abapgit_log
        !it_results       TYPE Lif_abapgit_definitions=>ty_results_tt
      RETURNING
        VALUE(rt_results) TYPE Lif_abapgit_definitions=>ty_results_tt .
    CLASS-METHODS map_results_to_items
      IMPORTING
        !it_results     TYPE Lif_abapgit_definitions=>ty_results_tt
      RETURNING
        VALUE(rt_items) TYPE Lif_abapgit_definitions=>ty_items_tt .
endclass. "ZCL_ABAPGIT_FILE_DESERIALIZE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_FOLDER_LOGIC

*"* local type definitions
*include zcl_abapgit_folder_logic======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_FOLDER_LOGIC definition
*"* public declarations
*include zcl_abapgit_folder_logic======cu.
CLASS Lcl_abapgit_folder_logic DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS package_to_path
      IMPORTING
        !iv_top        TYPE devclass
        !io_dot        TYPE REF TO Lcl_abapgit_dot_abapgit
        !iv_package    TYPE devclass
      RETURNING
        VALUE(rv_path) TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS path_to_package
      IMPORTING
        !iv_top                  TYPE devclass
        !io_dot                  TYPE REF TO Lcl_abapgit_dot_abapgit
        !iv_path                 TYPE string
        !iv_create_if_not_exists TYPE abap_bool DEFAULT abap_true
      RETURNING
        VALUE(rv_package)        TYPE devclass
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS get_instance
      RETURNING
        VALUE(ro_instance) TYPE REF TO Lcl_abapgit_folder_logic .
*"* protected declarations
*include zcl_abapgit_folder_logic======co.
  PROTECTED SECTION.

    METHODS get_parent
      IMPORTING
        !iv_top          TYPE devclass
        !iv_package      TYPE devclass
      RETURNING
        VALUE(rv_parent) TYPE devclass
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_folder_logic======ci.
  PRIVATE SECTION.
    TYPES:
      BEGIN OF ty_devclass_info,
        devclass  TYPE devclass,
        namespace TYPE namespace,
        parentcl  TYPE parentcl,
      END OF ty_devclass_info .
    TYPES:
      ty_devclass_info_tt TYPE SORTED TABLE OF ty_devclass_info
        WITH UNIQUE KEY devclass .
    DATA mt_top_subpackages TYPE ty_devclass_info_tt .
    DATA mt_parent TYPE ty_devclass_info_tt .
endclass. "ZCL_ABAPGIT_FOLDER_LOGIC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GIT_COMMIT

*"* local type definitions
*include zcl_abapgit_git_commit========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GIT_COMMIT definition
*"* public declarations
*include zcl_abapgit_git_commit========cu.
CLASS Lcl_abapgit_git_commit DEFINITION
*public
  CREATE PUBLIC




.

  PUBLIC SECTION.
    TYPES:
      BEGIN OF ty_pull_result,
        commits TYPE Lif_abapgit_git_definitions=>ty_commit_tt,
        commit  TYPE Lif_abapgit_git_definitions=>ty_sha1,
      END OF ty_pull_result .

    CLASS-METHODS get_by_branch
      IMPORTING
        !iv_branch_name       TYPE string
        !iv_repo_url          TYPE string
        !iv_deepen_level      TYPE i
        !iv_sorted            TYPE abap_bool DEFAULT abap_true
      RETURNING
        VALUE(rs_pull_result) TYPE ty_pull_result
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS get_by_commit
      IMPORTING
        !iv_commit_hash   TYPE Lif_abapgit_git_definitions=>ty_sha1
        !iv_repo_url      TYPE string
        !iv_deepen_level  TYPE i
      RETURNING
        VALUE(rt_commits) TYPE Lif_abapgit_git_definitions=>ty_commit_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS parse_commits
      IMPORTING
        !it_objects       TYPE Lif_abapgit_definitions=>ty_objects_tt
      RETURNING
        VALUE(rt_commits) TYPE Lif_abapgit_git_definitions=>ty_commit_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS sort_commits
      CHANGING
        !ct_commits TYPE Lif_abapgit_git_definitions=>ty_commit_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS reverse_sort_order
      CHANGING
        !ct_commits TYPE Lif_abapgit_git_definitions=>ty_commit_tt .
    CLASS-METHODS clear_missing_parents CHANGING ct_commits TYPE Lif_abapgit_git_definitions=>ty_commit_tt .
*"* protected declarations
*include zcl_abapgit_git_commit========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_git_commit========ci.
  PRIVATE SECTION.
    TYPES: ty_sha1_range TYPE RANGE OF Lif_abapgit_git_definitions=>ty_sha1 .

    CLASS-METHODS get_1st_child_commit
      IMPORTING
        it_commit_sha1s TYPE ty_sha1_range
      EXPORTING
        et_commit_sha1s TYPE ty_sha1_range
        es_1st_commit   TYPE Lif_abapgit_git_definitions=>ty_commit
      CHANGING
        ct_commits      TYPE Lif_abapgit_git_definitions=>ty_commit_tt .

    CLASS-METHODS is_missing
      IMPORTING
        it_commits       TYPE Lif_abapgit_git_definitions=>ty_commit_tt
        iv_sha1          TYPE Lif_abapgit_git_definitions=>ty_sha1
      RETURNING
        VALUE(rv_result) TYPE abap_bool.

    CLASS-METHODS extract_author_data
      IMPORTING
        !iv_author TYPE string
      EXPORTING
        !ev_author TYPE Lif_abapgit_git_definitions=>ty_commit-author
        !ev_email  TYPE Lif_abapgit_git_definitions=>ty_commit-email
        !ev_time   TYPE Lif_abapgit_git_definitions=>ty_commit-time
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_GIT_COMMIT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_CHUNK_LIB

*"* local type definitions
*include zcl_abapgit_gui_chunk_lib=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_CHUNK_LIB definition
*"* public declarations
*include zcl_abapgit_gui_chunk_lib=====cu.
CLASS Lcl_abapgit_gui_chunk_lib DEFINITION
*public
  FINAL
  CREATE PUBLIC



.

  PUBLIC SECTION.

    TYPES:
      BEGIN OF ty_event_signature,
        method TYPE string,
        name   TYPE string,
      END OF  ty_event_signature .

    CLASS-METHODS class_constructor .
    CLASS-METHODS render_error
      IMPORTING
        !ix_error       TYPE REF TO Lcx_abapgit_exception OPTIONAL
        !iv_error       TYPE string OPTIONAL
        !iv_extra_style TYPE string OPTIONAL
      RETURNING
        VALUE(ri_html)  TYPE REF TO Lif_abapgit_html .
    CLASS-METHODS render_repo_top
      IMPORTING
        !io_repo               TYPE REF TO Lcl_abapgit_repo
        !iv_show_package       TYPE abap_bool DEFAULT abap_true
        !iv_show_branch        TYPE abap_bool DEFAULT abap_true
        !iv_show_commit        TYPE abap_bool DEFAULT abap_true
        !iv_show_edit          TYPE abap_bool DEFAULT abap_false
        !iv_interactive_branch TYPE abap_bool DEFAULT abap_false
        !io_news               TYPE REF TO Lcl_abapgit_news OPTIONAL
      RETURNING
        VALUE(ri_html)         TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS render_item_state
      IMPORTING
        !iv_lstate     TYPE char1
        !iv_rstate     TYPE char1
      RETURNING
        VALUE(rv_html) TYPE string .
    CLASS-METHODS render_js_error_banner
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS render_news
      IMPORTING
        !io_news       TYPE REF TO Lcl_abapgit_news
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS render_error_message_box
      IMPORTING
        !ix_error      TYPE REF TO Lcx_abapgit_exception
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    CLASS-METHODS render_table_header
      IMPORTING
        !it_col_spec         TYPE Lif_abapgit_definitions=>ty_col_spec_tt
        !iv_order_by         TYPE string
        !iv_order_descending TYPE abap_bool
      RETURNING
        VALUE(ri_html)       TYPE REF TO Lif_abapgit_html .
    CLASS-METHODS render_table_footer
      IMPORTING
        !iv_message    TYPE string
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    CLASS-METHODS render_warning_banner
      IMPORTING
        !iv_text       TYPE string
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    CLASS-METHODS render_infopanel
      IMPORTING
        !iv_div_id     TYPE string
        !iv_title      TYPE string
        !iv_hide       TYPE abap_bool DEFAULT abap_true
        !iv_hint       TYPE string OPTIONAL
        !iv_scrollable TYPE abap_bool DEFAULT abap_true
        !io_content    TYPE REF TO Lif_abapgit_html
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS render_event_as_form
      IMPORTING
        !is_event      TYPE ty_event_signature
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    CLASS-METHODS render_repo_palette
      IMPORTING
        iv_action      TYPE string
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS render_branch_name
      IMPORTING
        !iv_branch      TYPE string OPTIONAL
        !iv_repo_key    TYPE Lif_abapgit_persistence=>ty_value OPTIONAL
        !io_repo        TYPE REF TO Lcl_abapgit_repo_online OPTIONAL
        !iv_interactive TYPE abap_bool DEFAULT abap_true
      RETURNING
        VALUE(ri_html)  TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS render_repo_url
      IMPORTING
        iv_url                        TYPE Lif_abapgit_persistence=>ty_repo-url
        iv_render_remote_edit_for_key TYPE Lif_abapgit_persistence=>ty_repo-key OPTIONAL
      RETURNING
        VALUE(ri_html)                TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS render_package_name
      IMPORTING
        !iv_package        TYPE devclass
        !iv_interactive    TYPE abap_bool DEFAULT abap_true
        !iv_suppress_title TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ri_html)     TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS render_user_name
      IMPORTING
        !iv_username       TYPE syuname
        !iv_interactive    TYPE abap_bool DEFAULT abap_true
        !iv_icon_only      TYPE abap_bool DEFAULT abap_false
        !iv_suppress_title TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ri_html)     TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS render_transport
      IMPORTING
        !iv_transport   TYPE trkorr
        !iv_interactive TYPE abap_bool DEFAULT abap_true
        !iv_icon_only   TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ri_html)  TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS render_sci_result
      IMPORTING
        ii_html       TYPE REF TO Lif_abapgit_html
        iv_sci_result TYPE Lif_abapgit_definitions=>ty_sci_result.

    CLASS-METHODS render_path
      IMPORTING
        !iv_path        TYPE string
        !iv_interactive TYPE abap_bool DEFAULT abap_true
      RETURNING
        VALUE(ri_html)  TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .

    CLASS-METHODS render_timestamp
      IMPORTING
        iv_timestamp       TYPE timestampl
      RETURNING
        VALUE(rv_rendered) TYPE string.

    CLASS-METHODS render_text_input
      IMPORTING
        iv_name        TYPE string
        iv_label       TYPE string
        iv_value       TYPE string OPTIONAL
        iv_max_length  TYPE string OPTIONAL
        iv_autofocus   TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html.

    CLASS-METHODS render_label_list
      IMPORTING
        it_labels           TYPE string_table
        io_label_colors     TYPE REF TO Lcl_abapgit_string_map
        iv_clickable_action TYPE string OPTIONAL
      RETURNING
        VALUE(rv_html)      TYPE string.

    CLASS-METHODS render_help_hint
      IMPORTING
        iv_text_to_wrap TYPE string
      RETURNING
        VALUE(rv_html)  TYPE string.

    CLASS-METHODS get_item_icon
      IMPORTING
        !is_item       TYPE Lif_abapgit_definitions=>ty_repo_item
      RETURNING
        VALUE(rv_html) TYPE string.

    CLASS-METHODS get_item_link
      IMPORTING
        !is_item       TYPE Lif_abapgit_definitions=>ty_repo_item
      RETURNING
        VALUE(rv_html) TYPE string.

*"* protected declarations
*include zcl_abapgit_gui_chunk_lib=====co.
  PROTECTED SECTION.

    CLASS-METHODS render_repo_top_commit_hash
      IMPORTING
        !ii_html        TYPE REF TO Lif_abapgit_html
        !io_repo_online TYPE REF TO Lcl_abapgit_repo_online
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_gui_chunk_lib=====ci.
  PRIVATE SECTION.

    CLASS-DATA gv_time_zone TYPE timezone .

    CLASS-METHODS get_t100_text
      IMPORTING
        !iv_msgid      TYPE scx_t100key-msgid
        !iv_msgno      TYPE scx_t100key-msgno
      RETURNING
        VALUE(rv_text) TYPE string .
    CLASS-METHODS normalize_program_name
      IMPORTING
        !iv_program_name                  TYPE sy-repid
      RETURNING
        VALUE(rv_normalized_program_name) TYPE string .

    CLASS-METHODS shorten_repo_url
      IMPORTING
        iv_full_url         TYPE string
        iv_max_length       TYPE i DEFAULT 60
      RETURNING
        VALUE(rv_shortened) TYPE string.

endclass. "ZCL_ABAPGIT_GUI_CHUNK_LIB definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_JUMPER

*"* local type definitions
*include zcl_abapgit_gui_jumper========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_JUMPER definition
*"* public declarations
*include zcl_abapgit_gui_jumper========cu.
CLASS Lcl_abapgit_gui_jumper DEFINITION
*public
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_jumper.

*"* protected declarations
*include zcl_abapgit_gui_jumper========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_jumper========ci.
  PRIVATE SECTION.

    METHODS jump_tr
      IMPORTING
        !is_item       TYPE Lif_abapgit_definitions=>ty_item
      RETURNING
        VALUE(rv_exit) TYPE abap_bool.

    METHODS jump_wb
      IMPORTING
        !is_item       TYPE Lif_abapgit_definitions=>ty_item
        !iv_new_window TYPE abap_bool
      RETURNING
        VALUE(rv_exit) TYPE abap_bool.

    METHODS jump_wb_line
      IMPORTING
        !is_item         TYPE Lif_abapgit_definitions=>ty_item
        !iv_sub_obj_name TYPE Lif_abapgit_definitions=>ty_item-obj_name
        !iv_sub_obj_type TYPE Lif_abapgit_definitions=>ty_item-obj_type
        !iv_line_number  TYPE i
        !iv_new_window   TYPE abap_bool
      RETURNING
        VALUE(rv_exit)   TYPE abap_bool.

    METHODS jump_bw
      IMPORTING
        !is_item       TYPE Lif_abapgit_definitions=>ty_item
        !iv_new_window TYPE abap_bool
      RETURNING
        VALUE(rv_exit) TYPE abap_bool.

endclass. "ZCL_ABAPGIT_GUI_JUMPER definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_CODE_INSP

*"* local type definitions
*include zcl_abapgit_gui_page_code_inspccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_CODE_INSP definition
*"* public declarations
*include zcl_abapgit_gui_page_code_inspcu.
CLASS Lcl_abapgit_gui_page_code_insp DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_page_codi_base
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    INTERFACES:
      Lif_abapgit_gui_event_handler,
      Lif_abapgit_gui_hotkeys,
      Lif_abapgit_gui_menu_provider,
      Lif_abapgit_gui_renderable.

    CLASS-METHODS create
      IMPORTING
        io_repo                  TYPE REF TO Lcl_abapgit_repo
        io_stage                 TYPE REF TO Lcl_abapgit_stage OPTIONAL
        iv_check_variant         TYPE sci_chkv OPTIONAL
        iv_raise_when_no_results TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ri_page)           TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

    METHODS:
      constructor
        IMPORTING
          io_repo                  TYPE REF TO Lcl_abapgit_repo
          io_stage                 TYPE REF TO Lcl_abapgit_stage OPTIONAL
          iv_check_variant         TYPE sci_chkv OPTIONAL
          iv_raise_when_no_results TYPE abap_bool DEFAULT abap_false
        RAISING
          Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_code_inspco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_code_inspci.
  PRIVATE SECTION.

    DATA:
      mo_stage         TYPE REF TO Lcl_abapgit_stage,
      mv_check_variant TYPE sci_chkv.

    METHODS:
      run_code_inspector
        RAISING
          Lcx_abapgit_exception,

      has_inspection_errors
        RETURNING
          VALUE(rv_has_inspection_errors) TYPE abap_bool,

      is_stage_allowed
        RETURNING
          VALUE(rv_is_stage_allowed) TYPE abap_bool,

      ask_user_for_check_variant
        RETURNING
          VALUE(rv_check_variant) TYPE sci_chkv
        RAISING
          Lcx_abapgit_exception,

      determine_check_variant
        RAISING
          Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_GUI_PAGE_CODE_INSP definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_DIFF

*"* local type definitions
*include zcl_abapgit_gui_page_diff=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_DIFF definition
*"* public declarations
*include zcl_abapgit_gui_page_diff=====cu.
CLASS Lcl_abapgit_gui_page_diff DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_page_diff_base
  CREATE PRIVATE.

  PUBLIC SECTION.

    CLASS-METHODS create
      IMPORTING
        !iv_key        TYPE Lif_abapgit_persistence=>ty_repo-key
        !is_file       TYPE Lif_abapgit_git_definitions=>ty_file OPTIONAL
        !is_object     TYPE Lif_abapgit_definitions=>ty_item OPTIONAL
        !it_files      TYPE Lif_abapgit_definitions=>ty_stage_tt OPTIONAL
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_diff=====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_diff=====ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_GUI_PAGE_DIFF definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_FLOW

*"* local type definitions
*include zcl_abapgit_gui_page_flow=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section

TYPES:
  BEGIN OF SHRITEFUH64VYIPO5IWUYB3KWZRSFY,
    path        TYPE string,
    filename    TYPE string,
    remote_sha1 TYPE Lif_abapgit_git_definitions=>ty_sha1,
    local_sha1  TYPE Lif_abapgit_git_definitions=>ty_sha1,
  END OF SHRITEFUH64VYIPO5IWUYB3KWZRSFY.
TYPES:
  SHRITEFUH64VYIPO5IWUYB3KWZTSFY TYPE HASHED TABLE OF SHRITEFUH64VYIPO5IWUYB3KWZRSFY WITH UNIQUE KEY path filename.

TYPES: BEGIN OF SHRITEFUH64VYIPO5IWUYB3KWZUSFY,
         BEGIN OF repo,
           name    TYPE string,
           key     TYPE Lif_abapgit_persistence=>ty_repo-key,
           package TYPE devclass,
         END OF repo,
         BEGIN OF branch,
           display_name TYPE string,
           sha1         TYPE Lif_abapgit_git_definitions=>ty_sha1,
           up_to_date   TYPE abap_bool,
         END OF branch,
         BEGIN OF pr,
           title TYPE string,
           url   TYPE string,
           draft TYPE abap_bool,
         END OF pr,
         BEGIN OF transport,
           trkorr TYPE trkorr,
           title  TYPE string,
         END OF transport,
         full_match      TYPE abap_bool,
         changed_files   TYPE SHRITEFUH64VYIPO5IWUYB3KWZTSFY,
         changed_objects TYPE Lif_abapgit_definitions=>ty_items_ts,
       END OF SHRITEFUH64VYIPO5IWUYB3KWZUSFY.
TYPES SHRITEFUH64VYIPO5IWUYB3KWZVSFY TYPE STANDARD TABLE OF SHRITEFUH64VYIPO5IWUYB3KWZUSFY WITH DEFAULT KEY.

*"* class ZCL_ABAPGIT_GUI_PAGE_FLOW definition
*"* public declarations
*include zcl_abapgit_gui_page_flow=====cu.
CLASS Lcl_abapgit_gui_page_flow DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler.
    INTERFACES Lif_abapgit_gui_renderable.
    INTERFACES Lif_abapgit_gui_menu_provider.

    CLASS-METHODS create
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

    METHODS constructor
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_flow=====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_flow=====ci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_action,
        refresh TYPE string VALUE 'refresh',
        pull    TYPE string VALUE 'pull',
        stage   TYPE string VALUE 'stage',
      END OF c_action .
    DATA mt_features TYPE SHRITEFUH64VYIPO5IWUYB3KWZVSFY .

    METHODS refresh
      RAISING
        Lcx_abapgit_exception .
    METHODS set_branch
      IMPORTING
        !iv_branch TYPE string
        !iv_key    TYPE Lif_abapgit_persistence=>ty_value
      RAISING
        Lcx_abapgit_exception .
    METHODS render_table
      IMPORTING
        !iv_index      TYPE i
        !is_feature    TYPE SHRITEFUH64VYIPO5IWUYB3KWZUSFY
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
endclass. "ZCL_ABAPGIT_GUI_PAGE_FLOW definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_SETT_BCKG

*"* local type definitions
*include zcl_abapgit_gui_page_sett_bckgccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_SETT_BCKG definition
*"* public declarations
*include zcl_abapgit_gui_page_sett_bckgcu.
CLASS Lcl_abapgit_gui_page_sett_bckg DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_gui_event_handler .
    INTERFACES Lif_abapgit_gui_renderable .

    CLASS-METHODS create
      IMPORTING
        !io_repo       TYPE REF TO Lcl_abapgit_repo
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception .
    METHODS constructor
      IMPORTING
        !io_repo TYPE REF TO Lcl_abapgit_repo
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_gui_page_sett_bckgco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_gui_page_sett_bckgci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_id,
        mode_selection TYPE string VALUE 'mode_selection',
        method         TYPE string VALUE 'method',
        authentication TYPE string VALUE 'authentication',
        username       TYPE string VALUE 'username',
        password       TYPE string VALUE 'password',
        mode_settings  TYPE string VALUE 'mode_settings',
        settings       TYPE string VALUE 'settings',
      END OF c_id .
    CONSTANTS:
      BEGIN OF c_event,
        run_now TYPE string VALUE 'run_now',
        save    TYPE string VALUE 'save',
      END OF c_event .
    DATA mo_form TYPE REF TO Lcl_abapgit_html_form .
    DATA mo_form_data TYPE REF TO Lcl_abapgit_string_map .
    DATA mo_repo TYPE REF TO Lcl_abapgit_repo .
    DATA mv_settings_count TYPE i .

    METHODS get_form_schema
      RETURNING
        VALUE(ro_form) TYPE REF TO Lcl_abapgit_html_form
      RAISING
        Lcx_abapgit_exception .
    METHODS read_settings
      RETURNING
        VALUE(ro_form_data) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception .
    METHODS read_persist
      RETURNING
        VALUE(rs_persist) TYPE Lcl_abapgit_persist_background=>ty_background
      RAISING
        Lcx_abapgit_exception .
    METHODS save_settings
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_GUI_PAGE_SETT_BCKG definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_GUI_PAGE_STAGE

*"* local type definitions
*include zcl_abapgit_gui_page_stage====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_GUI_PAGE_STAGE definition
*"* public declarations
*include zcl_abapgit_gui_page_stage====cu.
CLASS Lcl_abapgit_gui_page_stage DEFINITION
*public
  INHERITING FROM Lcl_abapgit_gui_component
  FINAL
  CREATE PRIVATE.

  PUBLIC SECTION.

    INTERFACES:
      Lif_abapgit_gui_event_handler,
      Lif_abapgit_gui_hotkeys,
      Lif_abapgit_gui_menu_provider,
      Lif_abapgit_gui_renderable.

    CONSTANTS: BEGIN OF c_action,
                 stage_refresh TYPE string VALUE 'stage_refresh',
                 stage_all     TYPE string VALUE 'stage_all',
                 stage_commit  TYPE string VALUE 'stage_commit',
                 stage_filter  TYPE string VALUE 'stage_filter',
               END OF c_action.

    CLASS-METHODS create
      IMPORTING
        io_repo        TYPE REF TO Lcl_abapgit_repo_online
        iv_seed        TYPE string OPTIONAL
        iv_sci_result  TYPE Lif_abapgit_definitions=>ty_sci_result DEFAULT Lif_abapgit_definitions=>c_sci_result-no_run
        ii_obj_filter  TYPE REF TO Lif_abapgit_object_filter OPTIONAL
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception.

    METHODS constructor
      IMPORTING
        io_repo       TYPE REF TO Lcl_abapgit_repo_online
        iv_seed       TYPE string OPTIONAL
        iv_sci_result TYPE Lif_abapgit_definitions=>ty_sci_result DEFAULT Lif_abapgit_definitions=>c_sci_result-no_run
        ii_obj_filter TYPE REF TO Lif_abapgit_object_filter OPTIONAL
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_gui_page_stage====co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_gui_page_stage====ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_changed_by,
        item     TYPE Lif_abapgit_definitions=>ty_item,
        filename TYPE string,
        name     TYPE syuname,
      END OF ty_changed_by .
    TYPES:
      ty_changed_by_tt TYPE SORTED TABLE OF ty_changed_by WITH UNIQUE KEY item filename.

    DATA mo_repo TYPE REF TO Lcl_abapgit_repo_online .
    DATA ms_files TYPE Lif_abapgit_definitions=>ty_stage_files .
    DATA mv_seed TYPE string .               " Unique page id to bind JS sessionStorage
    DATA mv_filter_value TYPE string .
    DATA mv_sci_result TYPE Lif_abapgit_definitions=>ty_sci_result.
    DATA mi_obj_filter TYPE REF TO Lif_abapgit_object_filter.

    METHODS check_selected
      IMPORTING
        !io_files TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception .
    METHODS find_changed_by
      IMPORTING
        !it_files            TYPE Lif_abapgit_definitions=>ty_stage_files
        !it_transports       TYPE Lif_abapgit_cts_api=>ty_transport_list
      RETURNING
        VALUE(rt_changed_by) TYPE ty_changed_by_tt .
    METHODS find_transports
      IMPORTING
        !it_files            TYPE Lif_abapgit_definitions=>ty_stage_files
      RETURNING
        VALUE(rt_transports) TYPE Lif_abapgit_cts_api=>ty_transport_list .
    METHODS render_list
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_file
      IMPORTING
        !iv_context    TYPE string
        !is_file       TYPE Lif_abapgit_git_definitions=>ty_file
        !is_item       TYPE Lif_abapgit_definitions=>ty_item OPTIONAL
        !is_status     TYPE Lif_abapgit_definitions=>ty_result
        !iv_changed_by TYPE syuname OPTIONAL
        !iv_transport  TYPE trkorr OPTIONAL
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS render_actions
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS stage_selected
      IMPORTING
        !ii_event       TYPE REF TO Lif_abapgit_gui_event
      RETURNING
        VALUE(ro_stage) TYPE REF TO Lcl_abapgit_stage
      RAISING
        Lcx_abapgit_exception .
    METHODS stage_all
      RETURNING
        VALUE(ro_stage) TYPE REF TO Lcl_abapgit_stage
      RAISING
        Lcx_abapgit_exception .
    METHODS get_page_patch
      IMPORTING
        !io_stage      TYPE REF TO Lcl_abapgit_stage
      RETURNING
        VALUE(ri_page) TYPE REF TO Lif_abapgit_gui_renderable
      RAISING
        Lcx_abapgit_exception .
    METHODS render_main_language_warning
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS count_default_files_to_commit
      RETURNING
        VALUE(rv_count) TYPE i .
    METHODS render_deferred_hidden_events
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html .
    METHODS render_scripts
      RETURNING
        VALUE(ri_html) TYPE REF TO Lif_abapgit_html
      RAISING
        Lcx_abapgit_exception .
    METHODS init_files
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_GUI_PAGE_STAGE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_HTML_FORM_UTILS

*"* local type definitions
*include zcl_abapgit_html_form_utils===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_HTML_FORM_UTILS definition
*"* public declarations
*include zcl_abapgit_html_form_utils===cu.
CLASS Lcl_abapgit_html_form_utils DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS create
      IMPORTING
        !io_form            TYPE REF TO Lcl_abapgit_html_form
      RETURNING
        VALUE(ro_form_util) TYPE REF TO Lcl_abapgit_html_form_utils .
    CLASS-METHODS is_dirty
      IMPORTING
        !io_form_data    TYPE REF TO Lcl_abapgit_string_map
        !io_compare_with TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(rv_dirty)  TYPE abap_bool .

    METHODS constructor
      IMPORTING
        !io_form TYPE REF TO Lcl_abapgit_html_form .
    METHODS normalize
      IMPORTING
        !io_form_data       TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(ro_form_data) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception .
    METHODS validate
      IMPORTING
        !io_form_data            TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(ro_validation_log) TYPE REF TO Lcl_abapgit_string_map
      RAISING
        Lcx_abapgit_exception .
    METHODS is_empty
      IMPORTING
        !io_form_data   TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(rv_empty) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS set_data
      IMPORTING
        !io_form_data TYPE REF TO Lcl_abapgit_string_map .
    METHODS exit
      IMPORTING
        !io_form_data    TYPE REF TO Lcl_abapgit_string_map
        !io_compare_with TYPE REF TO Lcl_abapgit_string_map
      RETURNING
        VALUE(rv_state)  TYPE i
      RAISING
        Lcx_abapgit_exception .

*"* protected declarations
*include zcl_abapgit_html_form_utils===co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_html_form_utils===ci.
  PRIVATE SECTION.

    DATA mo_form      TYPE REF TO Lcl_abapgit_html_form .
    DATA mo_form_data TYPE REF TO Lcl_abapgit_string_map .

endclass. "ZCL_ABAPGIT_HTML_FORM_UTILS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ITEM_GRAPH

*"* local type definitions
*include zcl_abapgit_item_graph========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ITEM_GRAPH definition
*"* public declarations
*include zcl_abapgit_item_graph========cu.
CLASS Lcl_abapgit_item_graph DEFINITION
*public
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS constructor
      IMPORTING
        !it_items TYPE Lif_abapgit_definitions=>ty_items_tt .
    METHODS add_edge
      IMPORTING
        !is_from TYPE Lif_abapgit_definitions=>ty_item
        !is_to   TYPE Lif_abapgit_definitions=>ty_item .
    METHODS has_vertices
      RETURNING
        VALUE(rv_bool) TYPE abap_bool .
    METHODS get_next
      IMPORTING
        !ii_log        TYPE REF TO Lif_abapgit_log
      RETURNING
        VALUE(rs_item) TYPE Lif_abapgit_definitions=>ty_item .
*"* protected declarations
*include zcl_abapgit_item_graph========co.
protected section.
*"* private declarations
*include zcl_abapgit_item_graph========ci.
  PRIVATE SECTION.
    TYPES: BEGIN OF ty_edge,
             from TYPE Lif_abapgit_definitions=>ty_item,
             to   TYPE Lif_abapgit_definitions=>ty_item,
           END OF ty_edge.

    DATA mt_vertices TYPE STANDARD TABLE OF Lif_abapgit_definitions=>ty_item WITH DEFAULT KEY.
    DATA mt_edges TYPE STANDARD TABLE OF ty_edge WITH DEFAULT KEY
                       WITH NON-UNIQUE SORTED KEY sec_key
                       COMPONENTS to.
    DATA mv_warning TYPE abap_bool.

    METHODS remove_vertex IMPORTING iv_index TYPE i.

endclass. "ZCL_ABAPGIT_ITEM_GRAPH definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECTS

*"* local type definitions
*include zcl_abapgit_objects===========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECTS definition
*"* public declarations
*include zcl_abapgit_objects===========cu.
CLASS Lcl_abapgit_objects DEFINITION
*public
  CREATE PUBLIC


.

  PUBLIC SECTION.

    TYPES:
      ty_types_tt TYPE SORTED TABLE OF tadir-object WITH UNIQUE KEY table_line .

    CLASS-METHODS serialize
      IMPORTING
        !is_item                 TYPE Lif_abapgit_definitions=>ty_item
        !io_i18n_params          TYPE REF TO Lcl_abapgit_i18n_params
      RETURNING
        VALUE(rs_files_and_item) TYPE Lif_abapgit_objects=>ty_serialization
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS deserialize
      IMPORTING
        !io_repo                 TYPE REF TO Lcl_abapgit_repo
        !is_checks               TYPE Lif_abapgit_definitions=>ty_deserialize_checks
        !ii_log                  TYPE REF TO Lif_abapgit_log
      RETURNING
        VALUE(rt_accessed_files) TYPE Lif_abapgit_git_definitions=>ty_file_signatures_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS deserialize_checks
      IMPORTING
        !io_repo         TYPE REF TO Lcl_abapgit_repo
      RETURNING
        VALUE(rs_checks) TYPE Lif_abapgit_definitions=>ty_deserialize_checks
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS delete
      IMPORTING
        !it_tadir  TYPE Lif_abapgit_definitions=>ty_tadir_tt
        !is_checks TYPE Lif_abapgit_definitions=>ty_delete_checks OPTIONAL
        !ii_log    TYPE REF TO Lif_abapgit_log OPTIONAL
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS jump
      IMPORTING
        !is_item        TYPE Lif_abapgit_definitions=>ty_item
        !is_sub_item    TYPE Lif_abapgit_definitions=>ty_item OPTIONAL
        !iv_filename    TYPE string OPTIONAL
        !iv_line_number TYPE i OPTIONAL
        !iv_new_window  TYPE abap_bool DEFAULT abap_true
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS changed_by
      IMPORTING
        !is_item       TYPE Lif_abapgit_definitions=>ty_item
        !iv_filename   TYPE string OPTIONAL
      RETURNING
        VALUE(rv_user) TYPE syuname .
    CLASS-METHODS is_supported
      IMPORTING
        !is_item        TYPE Lif_abapgit_definitions=>ty_item
        !iv_native_only TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(rv_bool)  TYPE abap_bool .
    CLASS-METHODS is_type_supported
      IMPORTING
        !iv_obj_type   TYPE Lif_abapgit_definitions=>ty_item-obj_type
      RETURNING
        VALUE(rv_bool) TYPE abap_bool .
    CLASS-METHODS exists
      IMPORTING
        !is_item       TYPE Lif_abapgit_definitions=>ty_item
      RETURNING
        VALUE(rv_bool) TYPE abap_bool .
    CLASS-METHODS supported_list
      RETURNING
        VALUE(rt_types) TYPE ty_types_tt .
    CLASS-METHODS is_active
      IMPORTING
        !is_item         TYPE Lif_abapgit_definitions=>ty_item
      RETURNING
        VALUE(rv_active) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_objects===========co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_objects===========ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_supported_types,
        obj_type  TYPE tadir-object,
        supported TYPE abap_bool,
      END OF ty_supported_types.

    TYPES: ty_supported_types_tt TYPE SORTED TABLE OF ty_supported_types WITH UNIQUE KEY obj_type.

    TYPES:
      BEGIN OF ty_obj_serializer_item,
        item     TYPE Lif_abapgit_definitions=>ty_item,
        metadata TYPE Lif_abapgit_definitions=>ty_metadata,
      END OF ty_obj_serializer_item .
    TYPES:
      ty_obj_serializer_map TYPE SORTED TABLE OF ty_obj_serializer_item WITH UNIQUE KEY item .

    CLASS-DATA gt_obj_serializer_map TYPE ty_obj_serializer_map .
    CLASS-DATA gt_supported_obj_types TYPE ty_supported_types_tt .
    CLASS-DATA gv_supported_obj_types_loaded TYPE abap_bool .

    CLASS-METHODS check_duplicates
      IMPORTING
        !it_files TYPE Lif_abapgit_git_definitions=>ty_files_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS class_name
      IMPORTING
        !is_item             TYPE Lif_abapgit_definitions=>ty_item
      RETURNING
        VALUE(rv_class_name) TYPE string .
    CLASS-METHODS update_package_tree
      IMPORTING
        !iv_package TYPE devclass .
    CLASS-METHODS delete_object
      IMPORTING
        !iv_package   TYPE devclass
        !is_item      TYPE Lif_abapgit_definitions=>ty_item
        !iv_transport TYPE trkorr
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS compare_remote_to_local
      IMPORTING
        !ii_object TYPE REF TO Lif_abapgit_object
        !it_remote TYPE Lif_abapgit_git_definitions=>ty_files_tt
        !is_result TYPE Lif_abapgit_definitions=>ty_result
        !ii_log    TYPE REF TO Lif_abapgit_log
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS deserialize_steps
      IMPORTING
        !it_steps     TYPE Lif_abapgit_objects=>ty_step_data_tt
        !ii_log       TYPE REF TO Lif_abapgit_log
        !iv_transport TYPE trkorr
      CHANGING
        !ct_files     TYPE Lif_abapgit_git_definitions=>ty_file_signatures_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS deserialize_step
      IMPORTING
        !is_step      TYPE Lif_abapgit_objects=>ty_step_data
        !ii_log       TYPE REF TO Lif_abapgit_log
        !iv_transport TYPE trkorr
      CHANGING
        !ct_files     TYPE Lif_abapgit_git_definitions=>ty_file_signatures_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS check_objects_locked
      IMPORTING
        !it_items    TYPE Lif_abapgit_definitions=>ty_items_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS create_object
      IMPORTING
        !is_item        TYPE Lif_abapgit_definitions=>ty_item
        !io_i18n_params TYPE REF TO Lcl_abapgit_i18n_params OPTIONAL
        !is_metadata    TYPE Lif_abapgit_definitions=>ty_metadata OPTIONAL
        !iv_native_only TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ri_obj)   TYPE REF TO Lif_abapgit_object
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS map_tadir_to_items
      IMPORTING
        !it_tadir       TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RETURNING
        VALUE(rt_items) TYPE Lif_abapgit_definitions=>ty_items_tt .
    CLASS-METHODS map_results_to_items
      IMPORTING
        !it_results     TYPE Lif_abapgit_definitions=>ty_results_tt
      RETURNING
        VALUE(rt_items) TYPE Lif_abapgit_definitions=>ty_items_tt .
    CLASS-METHODS get_deserialize_steps
      RETURNING
        VALUE(rt_steps) TYPE Lif_abapgit_objects=>ty_step_data_tt .
    CLASS-METHODS check_main_package
      IMPORTING
        !iv_package  TYPE devclass
        !iv_obj_type TYPE tadir-object
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS change_package_assignments
      IMPORTING
        !is_item TYPE Lif_abapgit_definitions=>ty_item
        !ii_log  TYPE REF TO Lif_abapgit_log .
    CLASS-METHODS determine_i18n_params
      IMPORTING
        !io_dot                TYPE REF TO Lcl_abapgit_dot_abapgit
        !iv_main_language_only TYPE abap_bool
      RETURNING
        VALUE(rs_i18n_params)  TYPE Lif_abapgit_definitions=>ty_i18n_params
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS get_extra_from_filename
      IMPORTING
        !iv_filename    TYPE string
      RETURNING
        VALUE(rv_extra) TYPE string.
endclass. "ZCL_ABAPGIT_OBJECTS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECTS_BRIDGE

*"* local type definitions
*include zcl_abapgit_objects_bridge====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECTS_BRIDGE definition
*"* public declarations
*include zcl_abapgit_objects_bridge====cu.
CLASS Lcl_abapgit_objects_bridge DEFINITION  FINAL CREATE PUBLIC INHERITING FROM Lcl_abapgit_objects_super.

  PUBLIC SECTION.

    METHODS constructor
      IMPORTING is_item TYPE Lif_abapgit_definitions=>ty_item
      RAISING   cx_sy_create_object_error.

    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_objects_bridge====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_objects_bridge====ci.
  PRIVATE SECTION.
    DATA mo_plugin TYPE REF TO object.

    CLASS-METHODS initialize.

    " Metadata flags (late_deser, delete_tadir, and ddic) are not required by abapGit anymore
    " We keep them to stay compatible with old bridge implementation
    TYPES:
      BEGIN OF ty_metadata,
        class        TYPE string,
        version      TYPE string,
        late_deser   TYPE abap_bool,
        delete_tadir TYPE abap_bool,
        ddic         TYPE abap_bool,
      END OF ty_metadata .

    TYPES: BEGIN OF ty_s_objtype_map,
             obj_typ      TYPE tadir-object,
             plugin_class TYPE seoclsname,
           END OF ty_s_objtype_map,
           ty_t_objtype_map TYPE SORTED TABLE OF ty_s_objtype_map WITH UNIQUE KEY obj_typ.

    CLASS-DATA gv_init TYPE abap_bool.
    CLASS-DATA gt_objtype_map TYPE ty_t_objtype_map.

endclass. "ZCL_ABAPGIT_OBJECTS_BRIDGE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECTS_GENERIC

*"* local type definitions
*include zcl_abapgit_objects_generic===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECTS_GENERIC definition
*"* public declarations
*include zcl_abapgit_objects_generic===cu.
CLASS Lcl_abapgit_objects_generic DEFINITION
*public
  CREATE PUBLIC


.

  PUBLIC SECTION.

    METHODS constructor
      IMPORTING
        !is_item       TYPE Lif_abapgit_definitions=>ty_item
        !iv_language   TYPE spras DEFAULT sy-langu
        io_field_rules TYPE REF TO Lif_abapgit_field_rules OPTIONAL
      RAISING
        Lcx_abapgit_exception .
    METHODS delete
      IMPORTING
        !iv_package TYPE devclass
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize
      IMPORTING
        !iv_package TYPE devclass
        !io_xml     TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception .
    METHODS exists
      RETURNING
        VALUE(rv_bool) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS serialize
      IMPORTING
        !io_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_objects_generic===co.
  PROTECTED SECTION.

    TYPES:
      BEGIN OF ty_s_objkey,
        num   TYPE n LENGTH 3,
        value TYPE c LENGTH 128,
      END OF ty_s_objkey .
    TYPES:
      ty_t_objkey TYPE SORTED TABLE OF ty_s_objkey WITH UNIQUE KEY num .

    DATA ms_object_header TYPE objh .
    DATA:
      mt_object_table TYPE STANDARD TABLE OF objsl WITH DEFAULT KEY .
    DATA:
      mt_object_method TYPE STANDARD TABLE OF objm WITH DEFAULT KEY .
    DATA ms_item TYPE Lif_abapgit_definitions=>ty_item .
    DATA mv_language TYPE spras .

    METHODS after_import .
    METHODS before_export .
    METHODS corr_insert
      IMPORTING
        !iv_package TYPE devclass
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_data
      IMPORTING
        !io_xml     TYPE REF TO Lif_abapgit_xml_input
        !iv_package TYPE devclass
      RAISING
        Lcx_abapgit_exception .
    METHODS distribute_name_to_components
      IMPORTING
        !it_key_component TYPE ddfields
      CHANGING
        !ct_objkey        TYPE ty_t_objkey
        !cs_objkey        TYPE ty_s_objkey
        !cv_non_value_pos TYPE numc3 .
    METHODS get_key_fields
      IMPORTING
        !iv_table      TYPE objsl-tobj_name
      RETURNING
        VALUE(rt_keys) TYPE ddfields
      RAISING
        Lcx_abapgit_exception .
    METHODS get_primary_table
      RETURNING
        VALUE(rv_table) TYPE objsl-tobj_name
      RAISING
        Lcx_abapgit_exception .
    METHODS get_where_clause
      IMPORTING
        !iv_tobj_name   TYPE objsl-tobj_name
      RETURNING
        VALUE(rv_where) TYPE string
      RAISING
        Lcx_abapgit_exception .
    METHODS serialize_data
      IMPORTING
        !io_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
    METHODS split_value_to_keys
      IMPORTING
        !it_key_component TYPE ddfields
      CHANGING
        !ct_objkey        TYPE ty_t_objkey
        !cs_objkey        TYPE ty_s_objkey
        !cv_non_value_pos TYPE numc3 .
    METHODS validate
      IMPORTING
        !io_xml TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_objects_generic===ci.
  PRIVATE SECTION.

    DATA mo_field_rules TYPE REF TO Lif_abapgit_field_rules .

    METHODS apply_clear_logic
      IMPORTING
        !iv_table TYPE objsl-tobj_name
      CHANGING
        !ct_data  TYPE STANDARD TABLE .
    METHODS apply_fill_logic
      IMPORTING
        !iv_table   TYPE objsl-tobj_name
        !iv_package TYPE devclass
      CHANGING
        !ct_data    TYPE STANDARD TABLE .
endclass. "ZCL_ABAPGIT_OBJECTS_GENERIC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECTS_PROGRAM

*"* local type definitions
*include zcl_abapgit_objects_program===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECTS_PROGRAM definition
*"* public declarations
*include zcl_abapgit_objects_program===cu.
CLASS Lcl_abapgit_objects_program DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_super
  CREATE PUBLIC


.

  PUBLIC SECTION.

    TYPES:
      BEGIN OF ty_cua,
        adm TYPE rsmpe_adm,
        sta TYPE STANDARD TABLE OF rsmpe_stat WITH DEFAULT KEY,
        fun TYPE STANDARD TABLE OF rsmpe_funt WITH DEFAULT KEY,
        men TYPE STANDARD TABLE OF rsmpe_men WITH DEFAULT KEY,
        mtx TYPE STANDARD TABLE OF rsmpe_mnlt WITH DEFAULT KEY,
        act TYPE STANDARD TABLE OF rsmpe_act WITH DEFAULT KEY,
        but TYPE STANDARD TABLE OF rsmpe_but WITH DEFAULT KEY,
        pfk TYPE STANDARD TABLE OF rsmpe_pfk WITH DEFAULT KEY,
        set TYPE STANDARD TABLE OF rsmpe_staf WITH DEFAULT KEY,
        doc TYPE STANDARD TABLE OF rsmpe_atrt WITH DEFAULT KEY,
        tit TYPE STANDARD TABLE OF rsmpe_titt WITH DEFAULT KEY,
        biv TYPE STANDARD TABLE OF rsmpe_buts WITH DEFAULT KEY,
      END OF ty_cua.

    METHODS serialize_program
      IMPORTING
        !io_xml     TYPE REF TO Lif_abapgit_xml_output OPTIONAL
        !is_item    TYPE Lif_abapgit_definitions=>ty_item
        !io_files   TYPE REF TO Lcl_abapgit_objects_files
        !iv_program TYPE syrepid OPTIONAL
        !iv_extra   TYPE clike OPTIONAL
      RAISING
        Lcx_abapgit_exception.
    METHODS deserialize_program
      IMPORTING
        !is_progdir TYPE Lif_abapgit_sap_report=>ty_progdir
        !it_source  TYPE abaptxt255_tab
        !it_tpool   TYPE textpool_table
        !iv_package TYPE devclass
      RAISING
        Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_objects_program===co.
  PROTECTED SECTION.

    TYPES:
      ty_spaces_tt TYPE STANDARD TABLE OF i WITH DEFAULT KEY .
    TYPES:
      BEGIN OF ty_dynpro,
        header     TYPE rpy_dyhead,
        containers TYPE dycatt_tab,
        fields     TYPE dyfatc_tab,
        flow_logic TYPE swydyflow,
        spaces     TYPE ty_spaces_tt,
      END OF ty_dynpro .
    TYPES:
      ty_dynpro_tt TYPE STANDARD TABLE OF ty_dynpro WITH DEFAULT KEY .

    METHODS strip_generation_comments
      CHANGING
        ct_source TYPE STANDARD TABLE. " tab of string or charX
    METHODS serialize_dynpros
      IMPORTING
        !iv_program_name TYPE syrepid
      RETURNING
        VALUE(rt_dynpro) TYPE ty_dynpro_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS serialize_cua
      IMPORTING
        !iv_program_name TYPE syrepid
      RETURNING
        VALUE(rs_cua)    TYPE ty_cua
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_dynpros
      IMPORTING
        !it_dynpros TYPE ty_dynpro_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_textpool
      IMPORTING
        !iv_program    TYPE syrepid
        !it_tpool      TYPE textpool_table
        !iv_language   TYPE sy-langu OPTIONAL
        !iv_is_include TYPE abap_bool DEFAULT abap_false
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_cua
      IMPORTING
        !iv_program_name TYPE syrepid
        !is_cua          TYPE ty_cua
      RAISING
        Lcx_abapgit_exception .
    METHODS is_any_dynpro_locked
      IMPORTING
        !iv_program                    TYPE syrepid
      RETURNING
        VALUE(rv_is_any_dynpro_locked) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS is_cua_locked
      IMPORTING
        !iv_program             TYPE syrepid
      RETURNING
        VALUE(rv_is_cua_locked) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS is_text_locked
      IMPORTING
        !iv_program              TYPE syrepid
      RETURNING
        VALUE(rv_is_text_locked) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS add_tpool
      IMPORTING
        !it_tpool       TYPE textpool_table
      RETURNING
        VALUE(rt_tpool) TYPE Lif_abapgit_definitions=>ty_tpool_tt .
    CLASS-METHODS read_tpool
      IMPORTING
        !it_tpool       TYPE Lif_abapgit_definitions=>ty_tpool_tt
      RETURNING
        VALUE(rt_tpool) TYPE Lif_abapgit_definitions=>ty_tpool_tt .
*"* private declarations
*include zcl_abapgit_objects_program===ci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_state,
        active   TYPE r3state VALUE 'A',
        inactive TYPE r3state VALUE 'I',
      END OF c_state.

    METHODS:
      uncondense_flow
        IMPORTING it_flow        TYPE swydyflow
                  it_spaces      TYPE ty_spaces_tt
        RETURNING VALUE(rt_flow) TYPE swydyflow.

    CLASS-METHODS auto_correct_cua_adm
      IMPORTING
        is_cua TYPE ty_cua
      CHANGING
        cs_adm TYPE rsmpe_adm.

    METHODS get_program_title
      IMPORTING
        !it_tpool       TYPE textpool_table
      RETURNING
        VALUE(rv_title) TYPE repti .
    METHODS insert_program
      IMPORTING
        !is_progdir TYPE Lif_abapgit_sap_report=>ty_progdir
        !it_source  TYPE abaptxt255_tab
        !iv_title   TYPE repti
        !iv_package TYPE devclass
      RAISING
        Lcx_abapgit_exception .
    METHODS update_program
      IMPORTING
        !is_progdir TYPE Lif_abapgit_sap_report=>ty_progdir
        !it_source  TYPE abaptxt255_tab
        !iv_title   TYPE repti
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECTS_PROGRAM definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_CHKC

*"* local type definitions
*include zcl_abapgit_object_chkc=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_CHKC definition
*"* public declarations
*include zcl_abapgit_object_chkc=======cu.
CLASS Lcl_abapgit_object_chkc DEFINITION
  INHERITING FROM Lcl_abapgit_object_common_aff
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    METHODS Lif_abapgit_object~changed_by REDEFINITION.

*"* protected declarations
*include zcl_abapgit_object_chkc=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_chkc=======ci.
  PRIVATE SECTION.

endclass. "ZCL_ABAPGIT_OBJECT_CHKC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_CHKO

*"* local type definitions
*include zcl_abapgit_object_chko=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_CHKO definition
*"* public declarations
*include zcl_abapgit_object_chko=======cu.
CLASS Lcl_abapgit_object_chko DEFINITION
*public
  INHERITING FROM Lcl_abapgit_object_common_aff
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    METHODS Lif_abapgit_object~changed_by REDEFINITION.

*"* protected declarations
*include zcl_abapgit_object_chko=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_chko=======ci.
  PRIVATE SECTION.

endclass. "ZCL_ABAPGIT_OBJECT_CHKO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_CHKV

*"* local type definitions
*include zcl_abapgit_object_chkv=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_CHKV definition
*"* public declarations
*include zcl_abapgit_object_chkv=======cu.
CLASS Lcl_abapgit_object_chkv DEFINITION
*public
  INHERITING FROM Lcl_abapgit_object_common_aff
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    METHODS Lif_abapgit_object~changed_by REDEFINITION.

*"* protected declarations
*include zcl_abapgit_object_chkv=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_chkv=======ci.
  PRIVATE SECTION.

endclass. "ZCL_ABAPGIT_OBJECT_CHKV definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_CLAS

*"* local type definitions
*include zcl_abapgit_object_clas=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_CLAS definition
*"* public declarations
*include zcl_abapgit_object_clas=======cu.
CLASS Lcl_abapgit_object_clas DEFINITION
*public
  INHERITING FROM Lcl_abapgit_objects_program
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_object .

    METHODS constructor
      IMPORTING
        !is_item     TYPE Lif_abapgit_definitions=>ty_item
        !iv_language TYPE spras .
*"* protected declarations
*include zcl_abapgit_object_clas=======co.
  PROTECTED SECTION.
    DATA: mi_object_oriented_object_fct TYPE REF TO Lif_abapgit_oo_object_fnc,
          mv_skip_testclass             TYPE abap_bool,
          mv_classpool_name             TYPE progname.
    METHODS:
      deserialize_abap
        IMPORTING ii_xml     TYPE REF TO Lif_abapgit_xml_input
                  iv_package TYPE devclass
        RAISING   Lcx_abapgit_exception,
      deserialize_docu
        IMPORTING ii_xml TYPE REF TO Lif_abapgit_xml_input
        RAISING   Lcx_abapgit_exception,
      deserialize_tpool
        IMPORTING ii_xml TYPE REF TO Lif_abapgit_xml_input
        RAISING   Lcx_abapgit_exception,
      deserialize_tpool_i18n
        IMPORTING ii_xml TYPE REF TO Lif_abapgit_xml_input
        RAISING   Lcx_abapgit_exception,
      deserialize_sotr
        IMPORTING ii_xml     TYPE REF TO Lif_abapgit_xml_input
                  iv_package TYPE devclass
        RAISING   Lcx_abapgit_exception,
      serialize_xml
        IMPORTING ii_xml TYPE REF TO Lif_abapgit_xml_output
        RAISING   Lcx_abapgit_exception,
      serialize_attr
        IMPORTING
          !ii_xml     TYPE REF TO Lif_abapgit_xml_output
          !iv_clsname TYPE seoclsname
        RAISING
          Lcx_abapgit_exception,
      serialize_descr
        IMPORTING
          !ii_xml     TYPE REF TO Lif_abapgit_xml_output
          !iv_clsname TYPE seoclsname
        RAISING
          Lcx_abapgit_exception,
      serialize_descr_sub
        IMPORTING
          !ii_xml     TYPE REF TO Lif_abapgit_xml_output
          !iv_clsname TYPE seoclsname
        RAISING
          Lcx_abapgit_exception,
      serialize_docu
        IMPORTING
          !ii_xml              TYPE REF TO Lif_abapgit_xml_output
          !it_langu_additional TYPE Lif_abapgit_lang_definitions=>ty_langus OPTIONAL
          !iv_clsname          TYPE seoclsname
        RAISING
          Lcx_abapgit_exception,
      serialize_tpool
        IMPORTING
          !ii_xml         TYPE REF TO Lif_abapgit_xml_output
          !iv_clsname     TYPE seoclsname
        RETURNING
          VALUE(rt_tpool) TYPE textpool_table
        RAISING
          Lcx_abapgit_exception,
      serialize_tpool_i18n
        IMPORTING
          !ii_xml              TYPE REF TO Lif_abapgit_xml_output
          !it_langu_additional TYPE Lif_abapgit_lang_definitions=>ty_langus OPTIONAL
          !iv_clsname          TYPE seoclsname
          !it_tpool_main       TYPE textpool_table
        RAISING
          Lcx_abapgit_exception,
      serialize_sotr
        IMPORTING
          !ii_xml TYPE REF TO Lif_abapgit_xml_output
        RAISING
          Lcx_abapgit_exception,
      source_apack_replacement
        CHANGING
          !ct_source TYPE seop_source_string
        RAISING
          Lcx_abapgit_exception,
      repo_apack_replacement
        CHANGING
          !ct_source TYPE seop_source_string
        RAISING
          Lcx_abapgit_exception.

*"* private declarations
*include zcl_abapgit_object_clas=======ci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_longtext_name,
        attributes TYPE string VALUE 'LONGTEXTS_CA',
        methods    TYPE string VALUE 'LONGTEXTS_CO',
        events     TYPE string VALUE 'LONGTEXTS_CE',
        types      TYPE string VALUE 'LONGTEXTS_CT',
      END OF c_longtext_name.
    CONSTANTS:
      BEGIN OF c_longtext_id,
        class      TYPE dokil-id VALUE 'CL',
        attributes TYPE dokil-id VALUE 'CA',
        methods    TYPE dokil-id VALUE 'CO',
        events     TYPE dokil-id VALUE 'CE',
        types      TYPE dokil-id VALUE 'CT',
      END OF c_longtext_id.

    METHODS deserialize_pre_ddic
      IMPORTING
        !ii_xml     TYPE REF TO Lif_abapgit_xml_input
        !iv_package TYPE devclass
      RAISING
        Lcx_abapgit_exception.

    METHODS is_class_locked
      RETURNING
        VALUE(rv_is_class_locked) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception.

    METHODS interface_replacement
      IMPORTING
        !iv_from_interface TYPE seoclsname
        !iv_to_interface   TYPE seoclsname
      CHANGING
        !ct_source         TYPE seop_source_string.

endclass. "ZCL_ABAPGIT_OBJECT_CLAS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_ECAT

*"* local type definitions
*include zcl_abapgit_object_ecat=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_ECAT definition
*"* public declarations
*include zcl_abapgit_object_ecat=======cu.
CLASS Lcl_abapgit_object_ecat DEFINITION
*public
  INHERITING FROM Lcl_abapgit_object_ecatt_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
*"* protected declarations
*include zcl_abapgit_object_ecat=======co.
  PROTECTED SECTION.
    METHODS:
      get_object_type REDEFINITION,
      get_upload REDEFINITION,
      get_download REDEFINITION,
      get_lock_object REDEFINITION.

*"* private declarations
*include zcl_abapgit_object_ecat=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_ECAT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_FUGR

*"* local type definitions
*include zcl_abapgit_object_fugr=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_FUGR definition
*"* public declarations
*include zcl_abapgit_object_fugr=======cu.
CLASS Lcl_abapgit_object_fugr DEFINITION  INHERITING FROM Lcl_abapgit_objects_program FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_fugr=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_fugr=======ci.
  PRIVATE SECTION.

    CONSTANTS:
      c_longtext_id_prog     TYPE dokil-id VALUE 'RE',
      c_longtext_id_func     TYPE dokil-id VALUE 'FU',
      c_longtext_id_func_exc TYPE dokil-id VALUE 'FX'.

    TYPES:
      ty_rs38l_incl_tt TYPE STANDARD TABLE OF rs38l_incl WITH DEFAULT KEY .
    TYPES:
      BEGIN OF ty_function,
        funcname          TYPE rs38l_fnam,
        global_flag       TYPE rs38l-global,
        remote_call       TYPE rs38l-remote,
        update_task       TYPE rs38l-utask,
        short_text        TYPE tftit-stext,
        remote_basxml     TYPE rs38l-basxml_enabled,
        import            TYPE STANDARD TABLE OF rsimp WITH DEFAULT KEY,
        changing          TYPE STANDARD TABLE OF rscha WITH DEFAULT KEY,
        export            TYPE STANDARD TABLE OF rsexp WITH DEFAULT KEY,
        tables            TYPE STANDARD TABLE OF rstbl WITH DEFAULT KEY,
        exception         TYPE STANDARD TABLE OF rsexc WITH DEFAULT KEY,
        documentation     TYPE STANDARD TABLE OF rsfdo WITH DEFAULT KEY,
        exception_classes TYPE abap_bool,
      END OF ty_function .
    TYPES:
      ty_function_tt TYPE STANDARD TABLE OF ty_function WITH DEFAULT KEY .
    TYPES:
      ty_sobj_name_tt TYPE STANDARD TABLE OF sobj_name  WITH DEFAULT KEY .
    TYPES:
      BEGIN OF ty_tpool_i18n,
        language TYPE langu,
        textpool TYPE Lif_abapgit_definitions=>ty_tpool_tt,
      END OF ty_tpool_i18n .
    TYPES:
      ty_tpools_i18n TYPE STANDARD TABLE OF ty_tpool_i18n .

    DATA mt_includes_cache TYPE ty_sobj_name_tt .
    DATA mt_includes_all TYPE ty_sobj_name_tt .

    METHODS check_rfc_parameters
      IMPORTING
        !is_function TYPE ty_function
      RAISING
        Lcx_abapgit_exception .
    METHODS update_where_used
      IMPORTING
        !it_includes TYPE ty_sobj_name_tt .
    METHODS main_name
      RETURNING
        VALUE(rv_program) TYPE program
      RAISING
        Lcx_abapgit_exception .
    METHODS functions
      RETURNING
        VALUE(rt_functab) TYPE ty_rs38l_incl_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS includes
      RETURNING
        VALUE(rt_includes) TYPE ty_sobj_name_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS serialize_functions
      RETURNING
        VALUE(rt_functions) TYPE ty_function_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_functions
      IMPORTING
        !it_functions TYPE ty_function_tt
        !ii_log       TYPE REF TO Lif_abapgit_log
        !iv_version   TYPE uccheck
        !iv_package   TYPE devclass
        !iv_transport TYPE trkorr
      RAISING
        Lcx_abapgit_exception .
    METHODS serialize_function_docs
      IMPORTING
        !iv_prog_name TYPE syrepid
        !it_functions TYPE ty_function_tt
        !ii_xml       TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_function_docs
      IMPORTING
        !iv_prog_name TYPE syrepid
        !it_functions TYPE ty_function_tt
        !ii_xml       TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception .
    METHODS serialize_xml
      IMPORTING
        !ii_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_xml
      IMPORTING
        !ii_xml       TYPE REF TO Lif_abapgit_xml_input
        !iv_version   TYPE uccheck
        !iv_package   TYPE devclass
        !iv_transport TYPE trkorr
      RAISING
        Lcx_abapgit_exception .
    METHODS serialize_includes
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_includes
      IMPORTING
        !ii_xml     TYPE REF TO Lif_abapgit_xml_input
        !iv_package TYPE devclass
        !ii_log     TYPE REF TO Lif_abapgit_log
      RAISING
        Lcx_abapgit_exception .
    METHODS is_function_group_locked
      RETURNING
        VALUE(rv_is_functions_group_locked) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS is_any_include_locked
      RETURNING
        VALUE(rv_is_any_include_locked) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS is_any_function_module_locked
      RETURNING
        VALUE(rv_any_function_module_locked) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
    METHODS get_abap_version
      IMPORTING
        !ii_xml                TYPE REF TO Lif_abapgit_xml_input
      RETURNING
        VALUE(rv_abap_version) TYPE progdir-uccheck
      RAISING
        Lcx_abapgit_exception .
    METHODS update_func_group_short_text
      IMPORTING
        !iv_group      TYPE rs38l-area
        !iv_short_text TYPE tftit-stext .
    METHODS serialize_texts
      IMPORTING
        !iv_prog_name TYPE syrepid
        !ii_xml       TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_texts
      IMPORTING
        !iv_prog_name TYPE syrepid
        !ii_xml       TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception .
    METHODS is_part_of_other_fugr
      IMPORTING
        !iv_include                     TYPE sobj_name
      RETURNING
        VALUE(rv_belongs_to_other_fugr) TYPE abap_bool.
endclass. "ZCL_ABAPGIT_OBJECT_FUGR definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_PDTS

*"* local type definitions
*include zcl_abapgit_object_pdts=======ccdef.
INTERFACE SHRITEFUH64VYIPO5IWUYB3KW4WSFY.

  TYPES: BEGIN OF ty_task_data,
           short_text                 TYPE hr_mcshort,
           plvar                      TYPE plvar,
           wi_text                    TYPE witext,
           method                     TYPE hrs1201,
           method_binding             TYPE hrsmtbind,
           starting_events            TYPE hrsevtab,
           starting_events_binding    TYPE hrsevbind,
           terminating_events         TYPE hrsetmtab,
           terminating_events_binding TYPE hrsevbind,
           descriptions               TYPE wstexts,
         END OF ty_task_data.

  METHODS clear_origin_data.
  METHODS get_definition RETURNING VALUE(rs_result) TYPE ty_task_data.
  METHODS get_container RETURNING VALUE(ri_result) TYPE REF TO if_swf_cnt_container.
  METHODS get_user_container RETURNING VALUE(ri_result) TYPE REF TO if_swf_cnt_container.
  METHODS import_container IMPORTING iv_xml_string TYPE xstring
                           RAISING   Lcx_abapgit_exception.
  METHODS create_task RAISING Lcx_abapgit_exception.
  METHODS save IMPORTING iv_package TYPE devclass OPTIONAL
               RAISING   Lcx_abapgit_exception.
  METHODS change_wi_text RAISING Lcx_abapgit_exception.
  METHODS change_method RAISING Lcx_abapgit_exception.
  METHODS change_start_events RAISING Lcx_abapgit_exception.
  METHODS change_terminating_events RAISING Lcx_abapgit_exception.
  METHODS change_text RAISING Lcx_abapgit_exception.

ENDINTERFACE.

*"* class ZCL_ABAPGIT_OBJECT_PDTS definition
*"* public declarations
*include zcl_abapgit_object_pdts=======cu.
CLASS Lcl_abapgit_object_pdts DEFINITION
*public
  INHERITING FROM Lcl_abapgit_object_pdxx_super
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    METHODS constructor IMPORTING is_item     TYPE Lif_abapgit_definitions=>ty_item
                                  iv_language TYPE spras
                        RAISING   Lcx_abapgit_exception.

    METHODS Lif_abapgit_object~serialize REDEFINITION.
    METHODS Lif_abapgit_object~deserialize REDEFINITION.

*"* protected declarations
*include zcl_abapgit_object_pdts=======co.
  PROTECTED SECTION.

*"* private declarations
*include zcl_abapgit_object_pdts=======ci.
  PRIVATE SECTION.

    DATA mv_objid TYPE hrobjid.

    METHODS get_container_xml IMPORTING ii_task                 TYPE REF TO SHRITEFUH64VYIPO5IWUYB3KW4WSFY
                              RETURNING VALUE(ri_first_element) TYPE REF TO if_ixml_element
                              RAISING   Lcx_abapgit_exception.

    METHODS extract_container IMPORTING io_xml           TYPE REF TO Lif_abapgit_xml_input
                              RETURNING VALUE(rv_result) TYPE xstring.

endclass. "ZCL_ABAPGIT_OBJECT_PDTS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_PROG

*"* local type definitions
*include zcl_abapgit_object_prog=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_PROG definition
*"* public declarations
*include zcl_abapgit_object_prog=======cu.
CLASS Lcl_abapgit_object_prog DEFINITION  INHERITING FROM Lcl_abapgit_objects_program FINAL.

  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.
*"* protected declarations
*include zcl_abapgit_object_prog=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_object_prog=======ci.
  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_tpool_i18n,
        language TYPE langu,
        textpool TYPE Lif_abapgit_definitions=>ty_tpool_tt,
      END OF ty_tpool_i18n .
    TYPES:
      ty_tpools_i18n TYPE STANDARD TABLE OF ty_tpool_i18n .

    CONSTANTS c_longtext_id_prog TYPE dokil-id VALUE 'RE' ##NO_TEXT.

    METHODS deserialize_with_ext
      IMPORTING
        !is_progdir TYPE Lif_abapgit_sap_report=>ty_progdir
        !it_source  TYPE abaptxt255_tab
        !iv_package TYPE devclass
      RAISING
        Lcx_abapgit_exception .
    METHODS serialize_texts
      IMPORTING
        !ii_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_texts
      IMPORTING
        !ii_xml TYPE REF TO Lif_abapgit_xml_input
      RAISING
        Lcx_abapgit_exception .
    METHODS is_program_locked
      RETURNING
        VALUE(rv_is_program_locked) TYPE abap_bool
      RAISING
        Lcx_abapgit_exception .
endclass. "ZCL_ABAPGIT_OBJECT_PROG definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SAMC

*"* local type definitions
*include zcl_abapgit_object_samc=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SAMC definition
*"* public declarations
*include zcl_abapgit_object_samc=======cu.
CLASS Lcl_abapgit_object_samc DEFINITION
*public
  INHERITING FROM Lcl_abapgit_object_saxx_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
*"* protected declarations
*include zcl_abapgit_object_samc=======co.
  PROTECTED SECTION.

    METHODS get_data_class_name
        REDEFINITION .
    METHODS get_data_structure_name
        REDEFINITION .
    METHODS get_persistence_class_name
        REDEFINITION .
*"* private declarations
*include zcl_abapgit_object_samc=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_SAMC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_SAPC

*"* local type definitions
*include zcl_abapgit_object_sapc=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_SAPC definition
*"* public declarations
*include zcl_abapgit_object_sapc=======cu.
CLASS Lcl_abapgit_object_sapc DEFINITION
*public
  INHERITING FROM Lcl_abapgit_object_saxx_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
*"* protected declarations
*include zcl_abapgit_object_sapc=======co.
  PROTECTED SECTION.

    METHODS get_data_class_name
        REDEFINITION .
    METHODS get_data_structure_name
        REDEFINITION .
    METHODS get_persistence_class_name
        REDEFINITION .
*"* private declarations
*include zcl_abapgit_object_sapc=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_SAPC definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_W3HT

*"* local type definitions
*include zcl_abapgit_object_w3ht=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_W3HT definition
*"* public declarations
*include zcl_abapgit_object_w3ht=======cu.
CLASS Lcl_abapgit_object_w3ht DEFINITION  INHERITING FROM Lcl_abapgit_object_w3xx_super FINAL.

*"* protected declarations
*include zcl_abapgit_object_w3ht=======co.
  PROTECTED SECTION.
    METHODS: change_bdc_jump_data REDEFINITION.
*"* private declarations
*include zcl_abapgit_object_w3ht=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_W3HT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_W3MI

*"* local type definitions
*include zcl_abapgit_object_w3mi=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_W3MI definition
*"* public declarations
*include zcl_abapgit_object_w3mi=======cu.
CLASS Lcl_abapgit_object_w3mi DEFINITION  INHERITING FROM Lcl_abapgit_object_w3xx_super FINAL.

*"* protected declarations
*include zcl_abapgit_object_w3mi=======co.
  PROTECTED SECTION.
    METHODS: change_bdc_jump_data REDEFINITION.
*"* private declarations
*include zcl_abapgit_object_w3mi=======ci.
  PRIVATE SECTION.
endclass. "ZCL_ABAPGIT_OBJECT_W3MI definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_PERSIST_MIGRATE

*"* local type definitions
*include zcl_abapgit_persist_migrate===ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_PERSIST_MIGRATE definition
*"* public declarations
*include zcl_abapgit_persist_migrate===cu.
CLASS Lcl_abapgit_persist_migrate DEFINITION  CREATE PUBLIC.

  PUBLIC SECTION.
    CLASS-METHODS: run RAISING Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_persist_migrate===co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_persist_migrate===ci.
  PRIVATE SECTION.
    CONSTANTS c_text TYPE string VALUE 'Generated by abapGit' ##NO_TEXT.

    CLASS-METHODS table_create
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS table_exists
      RETURNING
        VALUE(rv_exists) TYPE abap_bool.
    CLASS-METHODS lock_create
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS lock_exists
      RETURNING
        VALUE(rv_exists) TYPE abap_bool.
    CLASS-METHODS gui_status_create
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS gui_status_exists
      RETURNING
        VALUE(rv_exists) TYPE abap_bool.

endclass. "ZCL_ABAPGIT_PERSIST_MIGRATE definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_REPO_CHECKSUMS

*"* local type definitions
*include zcl_abapgit_repo_checksums====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_REPO_CHECKSUMS definition
*"* public declarations
*include zcl_abapgit_repo_checksums====cu.
CLASS Lcl_abapgit_repo_checksums DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_repo_checksums.

    METHODS constructor
      IMPORTING
        !iv_repo_key TYPE Lif_abapgit_persistence=>ty_repo-key
      RAISING
        Lcx_abapgit_exception.

    METHODS force_write
      IMPORTING
        it_checksums TYPE Lif_abapgit_persistence=>ty_local_checksum_tt
      RAISING
        Lcx_abapgit_exception.

*"* protected declarations
*include zcl_abapgit_repo_checksums====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_repo_checksums====ci.
  PRIVATE SECTION.

    TYPES:
      ty_local_files_by_item_tt TYPE SORTED TABLE OF Lif_abapgit_definitions=>ty_file_item WITH NON-UNIQUE KEY item.

    DATA mv_repo_key TYPE Lif_abapgit_persistence=>ty_repo-key.
    DATA mi_repo TYPE REF TO Lif_abapgit_repo.

    METHODS remove_non_code_related_files
      CHANGING
        !ct_local_files TYPE ty_local_files_by_item_tt.

    METHODS build_checksums_from_files
      IMPORTING
        it_local     TYPE ty_local_files_by_item_tt
      RETURNING
        VALUE(rt_checksums) TYPE Lif_abapgit_persistence=>ty_local_checksum_tt.

    METHODS save_checksums
      IMPORTING
        it_checksums TYPE Lif_abapgit_persistence=>ty_local_checksum_tt
      RAISING
        Lcx_abapgit_exception.

    METHODS add_meta
      CHANGING
        cv_cs_blob TYPE string
      RAISING
        Lcx_abapgit_exception.

    METHODS extract_meta
      CHANGING
*        co_string_map - return string map with meta when it is needed
        cv_cs_blob TYPE string.
endclass. "ZCL_ABAPGIT_REPO_CHECKSUMS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_REPO_STATUS

*"* local type definitions
*include zcl_abapgit_repo_status=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_REPO_STATUS definition
*"* public declarations
*include zcl_abapgit_repo_status=======cu.
CLASS Lcl_abapgit_repo_status DEFINITION
*public
  FINAL
  CREATE PRIVATE




.

  PUBLIC SECTION.

    CLASS-METHODS calculate
      IMPORTING
        !io_repo          TYPE REF TO Lcl_abapgit_repo
        !ii_log           TYPE REF TO Lif_abapgit_log OPTIONAL
        !ii_obj_filter    TYPE REF TO Lif_abapgit_object_filter OPTIONAL
      RETURNING
        VALUE(rt_results) TYPE Lif_abapgit_definitions=>ty_results_tt
      RAISING
        Lcx_abapgit_exception.

    METHODS constructor
      IMPORTING
        !iv_root_package TYPE devclass
        !io_dot          TYPE REF TO Lcl_abapgit_dot_abapgit.

*"* protected declarations
*include zcl_abapgit_repo_status=======co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_repo_status=======ci.
  PRIVATE SECTION.

    DATA mv_root_package TYPE devclass.
    DATA mo_dot          TYPE REF TO Lcl_abapgit_dot_abapgit.

    METHODS calculate_status
      IMPORTING
        !it_local         TYPE Lif_abapgit_definitions=>ty_files_item_tt
        !it_remote        TYPE Lif_abapgit_git_definitions=>ty_files_tt
        !it_cur_state     TYPE Lif_abapgit_git_definitions=>ty_file_signatures_tt
      RETURNING
        VALUE(rt_results) TYPE Lif_abapgit_definitions=>ty_results_tt
      RAISING
        Lcx_abapgit_exception.

    METHODS process_local
      IMPORTING
        !it_local     TYPE Lif_abapgit_definitions=>ty_files_item_tt
        !it_state_idx TYPE Lif_abapgit_git_definitions=>ty_file_signatures_ts
      CHANGING
        !ct_remote    TYPE Lif_abapgit_git_definitions=>ty_files_tt
        !ct_items     TYPE Lif_abapgit_definitions=>ty_items_tt
        !ct_results   TYPE Lif_abapgit_definitions=>ty_results_tt
      RAISING
        Lcx_abapgit_exception.

    METHODS process_items
      IMPORTING
        !it_unprocessed_remote TYPE Lif_abapgit_git_definitions=>ty_files_tt
      CHANGING
        !ct_items              TYPE Lif_abapgit_definitions=>ty_items_tt
      RAISING
        Lcx_abapgit_exception.

    METHODS process_remote
      IMPORTING
        !it_local              TYPE Lif_abapgit_definitions=>ty_files_item_tt
        !it_unprocessed_remote TYPE Lif_abapgit_git_definitions=>ty_files_tt
        !it_state_idx          TYPE Lif_abapgit_git_definitions=>ty_file_signatures_ts
        !it_items_idx          TYPE Lif_abapgit_definitions=>ty_items_ts
      CHANGING
        !ct_results            TYPE Lif_abapgit_definitions=>ty_results_tt
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS build_existing
      IMPORTING
        !is_local        TYPE Lif_abapgit_definitions=>ty_file_item
        !is_remote       TYPE Lif_abapgit_git_definitions=>ty_file
        !it_state        TYPE Lif_abapgit_git_definitions=>ty_file_signatures_ts
      RETURNING
        VALUE(rs_result) TYPE Lif_abapgit_definitions=>ty_result.

    CLASS-METHODS build_new_local
      IMPORTING
        !is_local        TYPE Lif_abapgit_definitions=>ty_file_item
      RETURNING
        VALUE(rs_result) TYPE Lif_abapgit_definitions=>ty_result.

    METHODS build_new_remote
      IMPORTING
        !is_remote       TYPE Lif_abapgit_git_definitions=>ty_file
        !it_items_idx    TYPE Lif_abapgit_definitions=>ty_items_ts
        !it_state_idx    TYPE Lif_abapgit_git_definitions=>ty_file_signatures_ts
      RETURNING
        VALUE(rs_result) TYPE Lif_abapgit_definitions=>ty_result
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS get_object_package
      IMPORTING
        !iv_object         TYPE tadir-object
        !iv_obj_name       TYPE tadir-obj_name
      RETURNING
        VALUE(rv_devclass) TYPE devclass
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS check_local_remote_consistency
      IMPORTING
        !is_local  TYPE Lif_abapgit_definitions=>ty_file_item
        !is_remote TYPE Lif_abapgit_git_definitions=>ty_file
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS ensure_state
      IMPORTING
        !it_local       TYPE Lif_abapgit_definitions=>ty_files_item_tt
        !it_cur_state   TYPE Lif_abapgit_git_definitions=>ty_file_signatures_tt
      RETURNING
        VALUE(rt_state) TYPE Lif_abapgit_git_definitions=>ty_file_signatures_tt.

endclass. "ZCL_ABAPGIT_REPO_STATUS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SERVICES_REPO

*"* local type definitions
*include zcl_abapgit_services_repo=====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SERVICES_REPO definition
*"* public declarations
*include zcl_abapgit_services_repo=====cu.
CLASS Lcl_abapgit_services_repo DEFINITION
*public
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS new_online
      IMPORTING
        !is_repo_params TYPE Lif_abapgit_services_repo=>ty_repo_params
      RETURNING
        VALUE(ro_repo)  TYPE REF TO Lcl_abapgit_repo_online
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS refresh
      IMPORTING
        !iv_key TYPE Lif_abapgit_persistence=>ty_repo-key
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS remove
      IMPORTING
        !iv_key TYPE Lif_abapgit_persistence=>ty_repo-key
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS purge
      IMPORTING
        !iv_key       TYPE Lif_abapgit_persistence=>ty_repo-key
        !iv_keep_repo TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ri_log) TYPE REF TO Lif_abapgit_log
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS new_offline
      IMPORTING
        !is_repo_params TYPE Lif_abapgit_services_repo=>ty_repo_params
      RETURNING
        VALUE(ro_repo)  TYPE REF TO Lcl_abapgit_repo_offline
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS refresh_local_checksums
      IMPORTING
        !iv_key TYPE Lif_abapgit_persistence=>ty_repo-key
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS toggle_favorite
      IMPORTING
        !iv_key TYPE Lif_abapgit_persistence=>ty_repo-key
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS transport_to_branch
      IMPORTING
        !iv_repository_key TYPE Lif_abapgit_persistence=>ty_value
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS gui_deserialize
      IMPORTING
        !io_repo TYPE REF TO Lcl_abapgit_repo
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS activate_objects
      IMPORTING
        !iv_key       TYPE Lif_abapgit_persistence=>ty_repo-key
      RETURNING
        VALUE(ri_log) TYPE REF TO Lif_abapgit_log
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS create_package
      IMPORTING
        !iv_prefill_package TYPE devclass OPTIONAL
      RETURNING
        VALUE(rv_package)   TYPE devclass
      RAISING
        Lcx_abapgit_exception.
*"* protected declarations
*include zcl_abapgit_services_repo=====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_services_repo=====ci.
  PRIVATE SECTION.
    CLASS-METHODS check_package_exists
      IMPORTING
        !iv_package TYPE devclass
        !it_remote  TYPE Lif_abapgit_git_definitions=>ty_files_tt
      RAISING
        Lcx_abapgit_exception.

    CLASS-METHODS delete_unnecessary_objects
      IMPORTING
        !io_repo   TYPE REF TO Lcl_abapgit_repo
        !ii_log    TYPE REF TO Lif_abapgit_log
        !is_checks TYPE Lif_abapgit_definitions=>ty_deserialize_checks
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS popup_decisions
      IMPORTING
        !io_repo   TYPE REF TO Lcl_abapgit_repo
      CHANGING
        !cs_checks TYPE Lif_abapgit_definitions=>ty_deserialize_checks
      RAISING
        Lcx_abapgit_cancel
        Lcx_abapgit_exception .
    CLASS-METHODS popup_objects_overwrite
      CHANGING
        !ct_overwrite TYPE Lif_abapgit_definitions=>ty_overwrite_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS popup_package_overwrite
      CHANGING
        !ct_overwrite TYPE Lif_abapgit_definitions=>ty_overwrite_tt
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS check_package
      IMPORTING
        !is_repo_params TYPE Lif_abapgit_services_repo=>ty_repo_params
      RAISING
        Lcx_abapgit_exception .
    CLASS-METHODS raise_error_if_package_exists
      IMPORTING
        iv_devclass TYPE scompkdtln-devclass
      RAISING
        Lcx_abapgit_exception.
    CLASS-METHODS check_for_restart
      IMPORTING
        !io_repo TYPE REF TO Lif_abapgit_repo.
endclass. "ZCL_ABAPGIT_SERVICES_REPO definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_TRANSPORT_MASS

*"* local type definitions
*include zcl_abapgit_transport_mass====ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_TRANSPORT_MASS definition
*"* public declarations
*include zcl_abapgit_transport_mass====cu.
CLASS Lcl_abapgit_transport_mass DEFINITION
*public
  INHERITING FROM Lcl_abapgit_transport
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS run .
*"* protected declarations
*include zcl_abapgit_transport_mass====co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_transport_mass====ci.
  PRIVATE SECTION.

endclass. "ZCL_ABAPGIT_TRANSPORT_MASS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_XML_INPUT

*"* local type definitions
*include zcl_abapgit_xml_input=========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_XML_INPUT definition
*"* public declarations
*include zcl_abapgit_xml_input=========cu.
CLASS Lcl_abapgit_xml_input DEFINITION
*public
  INHERITING FROM Lcl_abapgit_xml
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES Lif_abapgit_xml_input.

    METHODS constructor
      IMPORTING
        !iv_xml      TYPE clike
        !iv_filename TYPE string OPTIONAL
      RAISING
        Lcx_abapgit_exception .

*"* protected declarations
*include zcl_abapgit_xml_input=========co.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_xml_input=========ci.
  PRIVATE SECTION.

    METHODS fix_xml.

endclass. "ZCL_ABAPGIT_XML_INPUT definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_ABAP_LANGUAGE_VERS

*"* local type definitions
*include zcl_abapgit_abap_language_versccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_ABAP_LANGUAGE_VERS definition
*"* public declarations
*include zcl_abapgit_abap_language_verscu.
CLASS Lcl_abapgit_abap_language_vers DEFINITION
*public
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    CONSTANTS c_any_abap_language_version TYPE Lif_abapgit_aff_types_v1=>ty_abap_language_version VALUE '*'.
    CONSTANTS c_feature_flag TYPE string VALUE 'ALAV'.

    METHODS constructor
      IMPORTING
        !io_dot_abapgit TYPE REF TO Lcl_abapgit_dot_abapgit.

    METHODS get_abap_language_vers_by_objt
      IMPORTING
        !iv_object_type                      TYPE trobjtype
        !iv_package                          TYPE devclass
      RETURNING
        VALUE(rv_allowed_abap_langu_version) TYPE Lif_abapgit_aff_types_v1=>ty_abap_language_version.

    METHODS get_repo_abap_language_version
      RETURNING
        VALUE(rv_abap_language_version) TYPE Lif_abapgit_aff_types_v1=>ty_abap_language_version.

    METHODS is_import_allowed
      IMPORTING
        !iv_package       TYPE devclass
      RETURNING
        VALUE(rv_allowed) TYPE abap_bool.

*"* protected declarations
*include zcl_abapgit_abap_language_versco.
  PROTECTED SECTION.
*"* private declarations
*include zcl_abapgit_abap_language_versci.
  PRIVATE SECTION.

    DATA mo_dot_abapgit TYPE REF TO Lcl_abapgit_dot_abapgit.

    " Depends on experimental feature flag and repo setting
    DATA mv_has_abap_language_vers TYPE abap_bool.

    METHODS get_default_abap_language_vers
      IMPORTING
        !iv_object_type                 TYPE trobjtype
      RETURNING
        VALUE(rv_abap_language_version) TYPE Lif_abapgit_aff_types_v1=>ty_abap_language_version.

    METHODS get_abap_language_vers_by_devc
      IMPORTING
        !iv_package                     TYPE devclass
      RETURNING
        VALUE(rv_abap_language_version) TYPE string.

    METHODS get_abap_language_vers_by_repo
      RETURNING
        VALUE(rv_abap_language_version) TYPE string.

endclass. "ZCL_ABAPGIT_ABAP_LANGUAGE_VERS definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_OBJECT_INTF

*"* local type definitions
*include zcl_abapgit_object_intf=======ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_OBJECT_INTF definition
*"* public declarations
*include zcl_abapgit_object_intf=======cu.
CLASS Lcl_abapgit_object_intf DEFINITION  FINAL INHERITING FROM Lcl_abapgit_objects_program


.
  PUBLIC SECTION.
    INTERFACES Lif_abapgit_object.

    TYPES:
      BEGIN OF ty_docu,
        lines      TYPE tlinetab,
        i18n_lines TYPE Lif_abapgit_lang_definitions=>ty_i18n_lines,
      END OF ty_docu.

    TYPES:
      BEGIN OF ty_intf,
        vseointerf      TYPE vseointerf,
        docu            TYPE ty_docu,
        description     TYPE Lif_abapgit_oo_object_fnc=>ty_seocompotx_tt,
        description_sub TYPE Lif_abapgit_oo_object_fnc=>ty_seosubcotx_tt,
      END OF ty_intf.

    METHODS constructor
      IMPORTING
        is_item     TYPE Lif_abapgit_definitions=>ty_item
        iv_language TYPE spras.
*"* protected declarations
*include zcl_abapgit_object_intf=======co.
  PROTECTED SECTION.
    METHODS deserialize_proxy
      IMPORTING
        iv_transport TYPE trkorr
      RAISING
        Lcx_abapgit_exception .
    METHODS deserialize_docu
      IMPORTING
        !ii_xml  TYPE REF TO Lif_abapgit_xml_input
        !is_docu TYPE ty_docu
      RAISING
        Lcx_abapgit_exception .
    METHODS serialize_docu
      IMPORTING
                !it_langu_additional TYPE Lif_abapgit_lang_definitions=>ty_langus OPTIONAL
                !iv_clsname          TYPE seoclsname
      RETURNING VALUE(rs_docu)       TYPE ty_docu
      RAISING
                Lcx_abapgit_exception.
    METHODS serialize_descr
      IMPORTING
                !iv_clsname           TYPE seoclsname
      RETURNING VALUE(rs_description) TYPE ty_intf-description
      RAISING
                Lcx_abapgit_exception.
    METHODS serialize_descr_sub
      IMPORTING
                !iv_clsname           TYPE seoclsname
      RETURNING VALUE(rs_description) TYPE ty_intf-description_sub
      RAISING
                Lcx_abapgit_exception.
    METHODS serialize_xml
      IMPORTING
        !io_xml TYPE REF TO Lif_abapgit_xml_output
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_object_intf=======ci.
  PRIVATE SECTION.

    CONSTANTS:
      BEGIN OF c_longtext_name,
        attributes TYPE string VALUE 'LONGTEXTS_IA',
        methods    TYPE string VALUE 'LONGTEXTS_IO',
        events     TYPE string VALUE 'LONGTEXTS_IE',
      END OF c_longtext_name.

    CONSTANTS:
      BEGIN OF c_longtext_id,
        interface  TYPE dokil-id VALUE 'IF',
        attributes TYPE dokil-id VALUE 'IA',
        methods    TYPE dokil-id VALUE 'IO',
        events     TYPE dokil-id VALUE 'IE',
      END OF c_longtext_id.

    DATA mv_aff_enabled TYPE abap_bool.
    DATA mi_object_oriented_object_fct TYPE REF TO Lif_abapgit_oo_object_fnc .

    METHODS deserialize_pre_ddic
      IMPORTING
        ii_xml     TYPE REF TO Lif_abapgit_xml_input
        iv_package TYPE devclass
      RAISING
        Lcx_abapgit_exception.

    METHODS deserialize_descriptions
      IMPORTING
        it_description TYPE Lif_abapgit_oo_object_fnc=>ty_seocompotx_tt OPTIONAL.
    METHODS deserialize_descr_sub
      IMPORTING
        it_description TYPE Lif_abapgit_oo_object_fnc=>ty_seosubcotx_tt OPTIONAL.
    METHODS read_xml
      IMPORTING
                ii_xml         TYPE REF TO Lif_abapgit_xml_input
      RETURNING VALUE(rs_intf) TYPE ty_intf
      RAISING
                Lcx_abapgit_exception.
    METHODS read_json
      RETURNING VALUE(rs_intf) TYPE ty_intf
      RAISING
                Lcx_abapgit_exception.
endclass. "ZCL_ABAPGIT_OBJECT_INTF definition
*class-pool .
*"* class pool for class ZCL_ABAPGIT_SERIALIZE

*"* local type definitions
*include zcl_abapgit_serialize=========ccdef.
*"* use this source file for any type of declarations (class
*"* definitions, interfaces or type declarations) you need for
*"* components in the private section


*"* class ZCL_ABAPGIT_SERIALIZE definition
*"* public declarations
*include zcl_abapgit_serialize=========cu.
CLASS Lcl_abapgit_serialize DEFINITION
*public
  CREATE PUBLIC


.

  PUBLIC SECTION.

    METHODS constructor
      IMPORTING
        !io_dot_abapgit    TYPE REF TO Lcl_abapgit_dot_abapgit OPTIONAL
        !is_local_settings TYPE Lif_abapgit_persistence=>ty_repo-local_settings OPTIONAL
      RAISING
        Lcx_abapgit_exception .
    METHODS on_end_of_task
      IMPORTING
        !p_task TYPE clike ##NEEDED.
    METHODS serialize
      IMPORTING
        !iv_package          TYPE devclass OPTIONAL
        !it_tadir            TYPE Lif_abapgit_definitions=>ty_tadir_tt
        !ii_log              TYPE REF TO Lif_abapgit_log OPTIONAL
        !iv_force_sequential TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(rt_files)      TYPE Lif_abapgit_definitions=>ty_files_item_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS files_local
      IMPORTING
        !iv_package     TYPE devclass
        !ii_log         TYPE REF TO Lif_abapgit_log
        !it_filter      TYPE Lif_abapgit_definitions=>ty_tadir_tt OPTIONAL
        !ii_data_config TYPE REF TO Lif_abapgit_data_config OPTIONAL
      RETURNING
        VALUE(rt_files) TYPE Lif_abapgit_definitions=>ty_files_item_tt
      RAISING
        Lcx_abapgit_exception .
*"* protected declarations
*include zcl_abapgit_serialize=========co.
  PROTECTED SECTION.

    TYPES:
      BEGIN OF ty_unsupported_count,
        obj_type TYPE tadir-object,
        obj_name TYPE tadir-obj_name,
        count    TYPE i,
      END OF ty_unsupported_count .
    TYPES:
      ty_unsupported_count_tt TYPE HASHED TABLE OF ty_unsupported_count WITH UNIQUE KEY obj_type .
    TYPES:
      ty_char32 TYPE c LENGTH 32 .

    CLASS-DATA gv_max_processes TYPE i .
    DATA mt_files TYPE Lif_abapgit_definitions=>ty_files_item_tt .
    DATA mv_free TYPE i .
    DATA mi_log TYPE REF TO Lif_abapgit_log .
    DATA mv_group TYPE rzlli_apcl .
    DATA mo_dot_abapgit TYPE REF TO Lcl_abapgit_dot_abapgit.
    DATA ms_local_settings TYPE Lif_abapgit_persistence=>ty_repo-local_settings.
    DATA ms_i18n_params TYPE Lif_abapgit_definitions=>ty_i18n_params.
    DATA mo_abap_language_version TYPE REF TO Lcl_abapgit_abap_language_vers.

    METHODS add_apack
      IMPORTING
        !iv_package TYPE devclass
      CHANGING
        !ct_files   TYPE Lif_abapgit_definitions=>ty_files_item_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS add_data
      IMPORTING
        !ii_data_config TYPE REF TO Lif_abapgit_data_config
      CHANGING
        !ct_files       TYPE Lif_abapgit_definitions=>ty_files_item_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS add_dot_abapgit
      CHANGING
        !ct_files TYPE Lif_abapgit_definitions=>ty_files_item_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS add_to_return
      IMPORTING
        !iv_path      TYPE string
        !is_file_item TYPE Lif_abapgit_objects=>ty_serialization .
    METHODS run_parallel
      IMPORTING
        !is_tadir TYPE Lif_abapgit_definitions=>ty_tadir
        !iv_task  TYPE ty_char32
      RAISING
        Lcx_abapgit_exception .
    METHODS run_sequential
      IMPORTING
        !is_tadir TYPE Lif_abapgit_definitions=>ty_tadir
      RAISING
        Lcx_abapgit_exception .
    METHODS add_objects
      IMPORTING
        !iv_package     TYPE devclass
        !ii_log         TYPE REF TO Lif_abapgit_log
        !it_filter      TYPE Lif_abapgit_definitions=>ty_tadir_tt OPTIONAL
      CHANGING
        VALUE(ct_files) TYPE Lif_abapgit_definitions=>ty_files_item_tt
      RAISING
        Lcx_abapgit_exception .
    METHODS determine_max_processes
      IMPORTING
        !iv_force_sequential TYPE abap_bool DEFAULT abap_false
        iv_package           TYPE devclass
      RETURNING
        VALUE(rv_processes)  TYPE i
      RAISING
        Lcx_abapgit_exception .
    METHODS filter_unsupported_objects
      CHANGING
        !ct_tadir TYPE Lif_abapgit_definitions=>ty_tadir_tt .
    METHODS filter_ignored_objects
      IMPORTING
        !iv_package TYPE devclass
      CHANGING
        !ct_tadir   TYPE Lif_abapgit_definitions=>ty_tadir_tt
      RAISING
        Lcx_abapgit_exception .
*"* private declarations
*include zcl_abapgit_serialize=========ci.
  PRIVATE SECTION.
    CLASS-METHODS determine_i18n_params
      IMPORTING
        !io_dot                TYPE REF TO Lcl_abapgit_dot_abapgit
        !iv_main_language_only TYPE abap_bool
      RETURNING
        VALUE(rs_i18n_params)  TYPE Lif_abapgit_definitions=>ty_i18n_params
      RAISING
        Lcx_abapgit_exception.
    METHODS is_parallelization_possible
      RETURNING
        VALUE(rv_result) TYPE abap_bool.

endclass. "ZCL_ABAPGIT_SERIALIZE definition

****************************************************
INTERFACE lif_abapmerge_marker.
* ZSHRINKEDABAPGIT_RUN_SHRINKER 2023
ENDINTERFACE.
****************************************************
